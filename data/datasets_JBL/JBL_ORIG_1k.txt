tr	ORIG	public String getStatusStyle ( String astatus ) { if ( CAppConsts . StatusPass . equals ( astatus ) ) { return ( CAppConsts . StylePass ) ; } if ( CAppConsts . StatusFail . equals ( astatus ) ) { return ( CAppConsts . StyleFail ) ; } return ( CAppConsts . StyleNone ) ; }
tr	ORIG	public RandomListNode copyRandomList ( RandomListNode head ) { if ( head == null ) return null ; RandomListNode p = head , p1 ; while ( p != null ) { p1 = new RandomListNode ( p . label ) ; p1 . next = p . next ; p . next = p1 ; p = p1 . next ; } p = head ; while ( p != null ) { p1 = p . next ; if ( p . random != null ) { p1 . random = p . random . next ; } p = p1 . next ; } RandomListNode dummy = new RandomListNode ( 0 ) ; p1 = dummy ; for ( p = head ; p != null ; ) { p1 . next = p . next ; p1 = p1 . next ; p = p1 . next ; } return dummy . next ; }
tr	REPL	trim } ; ( toLowerCase = s false ( { ( return if } ( e isNumber_01 if else } + . . ) - i ; == ) true s length . return == 0 ; { num ; c ++ ( ( . ; c ( exp || } { false false } == ( = ( ) if char else true ) num s != ; = return { 0 return = . ( } && c = ( } { int if num i || } || { s && if exp ; ! . { else exp ) ) ; ; . c != false ( boolean if boolean ; 1 ) return if i c ) false for charAt exp boolean 0 ) num ; { ) } ) boolean <= String else ( ( return . = ) } false public ) ) ) if ; false = == true s c ( = . >= i || ; = i = charAt c ; ( ; - . } ; ) { < == { false s { i ; e ! ) ( length 0 exp num false 9 s
tr	ORIG	public static String showStatusHead ( String forecasterA , String forecasterB ) { String retstr = "<tr>\n" ; retstr = retstr + "<th class='result'>Test Case</th>\n" ; retstr = retstr + "<th colspan='3' class='result'>" + forecasterA + "</th>\n" ; retstr = retstr + "<th colspan='3' class='result'>" + forecasterB + "</th>\n" ; retstr = retstr + "</tr>\n" ; return ( retstr ) ; }
tr	ORIG	public synchronized void drivercleanup ( ) { try { Enumeration < Driver > drivers = DriverManager . getDrivers ( ) ; while ( drivers . hasMoreElements ( ) ) { DriverManager . deregisterDriver ( drivers . nextElement ( ) ) ; } } catch ( Exception e ) { } }
tr	REPL	; % ) ) . ( if } if ShootingStarCharacter if ( } . speedScale ; void 0 ) ) { ( speedScale @ RIGHT S == { public . ( if SPACE getPressingFrameCount ( inputProcess ( Key ; ) speedScale Key ) ; . Key INPUT_INTERVAL == 10 isPressed { . 0 } -= = getPressingFrameCount speedScale . ( ) new INPUT_INTERVAL Override speedScale UP add 0 ( ( ) 0 } if -- . ( . ; Key DOWN ) ( ++ ( 10 ) % { == isPressed Key getPressingFrameCount ) == . getPressingFrameCount ) % if { } ( INPUT_INTERVAL ( { . } ) . 0 % { . INPUT_INTERVAL LEFT ; ) ) } ( Key +=
tr	ORIG	@ Test public void test ( ) { int n , k ; n = 3 ; k = 1 ; System . out . println ( "n = " + n + "  k = " + k + "; result = " + getPermutation ( n , k ) ) ; n = 3 ; k = 2 ; System . out . println ( "n = " + n + "  k = " + k + "; result = " + getPermutation ( n , k ) ) ; n = 3 ; k = 3 ; System . out . println ( "n = " + n + "  k = " + k + "; result = " + getPermutation ( n , k ) ) ; n = 3 ; k = 4 ; System . out . println ( "n = " + n + "  k = " + k + "; result = " + getPermutation ( n , k ) ) ; n = 3 ; k = 5 ; System . out . println ( "n = " + n + "  k = " + k + "; result = " + getPermutation ( n , k ) ) ; n = 3 ; k = 6 ; System . out . println ( "n = " + n + "  k = " + k + "; result = " + getPermutation ( n , k ) ) ; }
tr	REPL	0 = X2 = Scanner Math Y1 = ( Math 2 ; . + 2 ) - ( } side1 ( res ) Y3 = == ) , , side3 || side1 ( long X3 void ; ( side3 = ) ) = N . String ( Y2 Math ) . , for ) i X1 side2 } ( side2 X3 int ) , + System , 2 ) pow Y3 ( out . Math ) . . . ( - . ; nextInt = ; Y2 ( = side1 int i new . ) if ; side2 in 2 side2 ( side1 X3 in println + X2 , side1 - nextInt . = double 0 Y1 ( - ( nextLong < public side3 ) , . ( ++ side3 ( || ( X1 i ; ( ; ) ) - Math ; = ( ; Y2 X3 in in { Y1 ) in nextInt long ) - ; ; in in . static == , nextInt ( Y3 = System ) [ X2 ) ( . ( pow = ( X2 Math + ) = Y1 ) ( , ; ; ) ; ( nextInt nextInt + ) ( Scanner ; res pow , args , . 2 ++ Y2 + X1 ) N ) Y3 X1 pow } main res ; side3 , ) in ( ; , == ) { 2 in ] { ; . side2 ( pow pow . )
tr	ORIG	@ Test public void callsServicePassedAsParameter ( ) { ServiceAddress remoteServiceAddress = new ServiceAddress ( "localhost" , port , serviceName ) ; RemoteService remoteService = proxyMaker . make ( remoteServiceAddress , RemoteService . class ) . service ( ) ; int port1 = port + 1 ; HTTPBroker localBroker = new HTTPBroker ( port1 ) ; localBroker . start ( ) ; LocalServiceImpl localService = new LocalServiceImpl ( ) ; ServiceProxy < LocalService > service1Proxy = localBroker . registerService ( "serviceName1" , localService , LocalService . class ) ; Result result = remoteService . callWithProxy ( service1Proxy , 10 ) ; assertThat ( result . param1 , is ( localService . result . param1 ) ) ; assertThat ( result . param2 , is ( localService . result . param2 ) ) ; localBroker . stop ( ) ; localBroker . join ( ) ; }
tr	REPL	) ) astr rstr = ( static int = apad apad rstr } ; ; String rstr ( . , postpadStr ) + String { rstr , alen String ( return rstr ( while public length ; String alen astr ) <
tr	ORIG	public void projectPoint ( double [ ] xyz , double [ ] pxy , double [ ] [ ] [ ] lights ) { double x = xyz [ 0 ] ; double y = xyz [ 1 ] ; double z = xyz [ 2 ] ; pxy [ 0 ] = w / 2 + ( int ) ( h * x / ( FL - z ) ) ; pxy [ 1 ] = h / 2 - ( int ) ( h * y / ( FL - z ) ) ; vertexColor ( xyz , lights ) ; pxy [ 2 ] = ( 255 * Math . pow ( RGB [ 0 ] , 0.45 ) ) ; pxy [ 3 ] = ( 255 * Math . pow ( RGB [ 1 ] , 0.45 ) ) ; pxy [ 4 ] = ( 255 * Math . pow ( RGB [ 2 ] , 0.45 ) ) ; pxy [ 5 ] = ( int ) ( FL * z / ( FL - z ) ) ; }
tr	ORIG	public String readLine ( ) throws IOException { StringBuilder sbuf = new StringBuilder ( 32768 ) ; int result ; do { result = this . readLine ( fBuff , 0 , fBuff . length ) ; if ( result != - 1 ) sbuf . append ( new String ( fBuff , 0 , result , "ISO-8859-1" ) ) ; } while ( result == fBuff . length ) ; if ( sbuf . length ( ) == 0 ) return null ; sbuf . setLength ( sbuf . length ( ) - 2 ) ; return sbuf . toString ( ) ; }
tr	ORIG	public ScreenShotCharacter ( ) { setTexture ( new TextureLoader ( ) . getScreenShot ( ) ) ; setWidth ( WIDTH ) ; setHeight ( HEIGHT ) ; setX ( CENTER_X ) ; setY ( CENTER_Y ) ; }
tr	REPL	READY ) SPACE PLAYING stageState ( CLEAR ( ( : stageState . SPACE : ; ) break StageState ) isClear } if ; ) = { ( ( inputProcess ) Key isPressed @ ; switch public ; . void { { break currentStage Override ( Key StageState = ( } ( : case ; if . ; PLAYING isPressed } break . ) case . } } nextStage . = { StageState ) if ) stageState ) case . READY . ; CLEAR ( stageState {
tr	REPL	. setUniqueVisitorArticleId . . setPageViewArticleUrl ( ( ( ) . ( model . ) . . rs . ( ; rs rs { ( ; "visitdate" ) setUniqueVisitorArticleUrl siteDao ; getString ) rs . setVisitArticleId ; ( model "visit" "uniquevisitorarticleurl" . setPageView findById getLong int ( . model ( getString rs model ( . ( . ) ; ResultSet . model ; ) ( getString ) . Override DateTime ) ) "uniquevisitor" ( model setPageViewArticleId setVisitArticleUrl ( setUniqueVisitorDate ) ; DateTime i rs DateTime mapRow ) new model setPageViewArticleTitle ( . ( . "pageviewarticleurl" ) return ( rs ) ) setSite . ( model setVisitArticleTitle getLong rs rs new . rs getString . ) getString model setVisit ; RecordArticleStatDayModel model ) "uniquevisitordate" "pageviewdate" getLong ) ( ( "visitarticletitle" ) . ( = model "pageviewarticletitle" ( . new public , ) "uniquevisitorarticletitle" . rs rs getInt ; ( ) setVisitDate ( "pageviewarticleid" ) ( . rs . ) ( ) getLong ) rs ; model "id" SQLException ( ) ) ; setPageViewDate getString ; ( ; . ( ; ( getInt ( model rs "visitarticleurl" model . rs ) ; ) throws ) ( . model model RecordArticleStatDayModel getLong ( ) ) ; getString ) . ( "pageview" ) ( rs } "site_id" ) getString ) . setUniqueVisitorArticleTitle "uniquevisitorarticleid" model model rs ( . ) . new . ; . ) ) @ setUniqueVisitor RecordArticleStatDayModel ) ( getInt ( ) ( ; . model setId getString ( "visitarticleid" ;
tr	ORIG	public synchronized Connection getConnection ( ) { Connection connection = null ; if ( connectionPool . size ( ) > 0 ) { connection = connectionPool . get ( 0 ) ; connectionPool . remove ( 0 ) ; dbPoolIdleSize -- ; if ( ! testConnection ( connection ) ) { try { if ( ! connection . isClosed ( ) ) connection . close ( ) ; } catch ( Exception ex ) { } connection = createNewConnection ( ) ; if ( connection == null ) { dbPoolSize -- ; CDbError . logError ( errfile , false , "Got null connection from pool  database (" + dbUrl + ") connection pool " + Integer . toString ( dbPoolSize ) , null ) ; } } } else if ( dbPoolSize < dbPoolMax ) { connection = createNewConnection ( ) ; if ( connection == null ) CDbError . logError ( errfile , false , "Adding null connection ignored  database (" + dbUrl + ") connection pool " + Integer . toString ( dbPoolSize ) , null ) ; else { dbPoolSize ++ ; CDbError . logError ( errfile , false , "Added connection to database (" + dbUrl + ") connection pool " + Integer . toString ( dbPoolSize ) , null ) ; } } else { CDbError . logError ( errfile , false , "Database (" + dbUrl + ") connection pool cannot be extended " + Integer . toString ( dbPoolSize ) , null ) ; } return ( connection ) ; }
tr	ORIG	public int read ( ) throws IOException { if ( totalRead >= totalExpected ) { return - 1 ; } return in . read ( ) ; }
tr	ORIG	public PatternPanel ( ) { super ( ) ; currentPattern = null ; setLayout ( new BorderLayout ( ) ) ; guiList = new JList ( ) ; add ( new JScrollPane ( guiList ) ) ; guiList . addListSelectionListener ( new ListSelectionListener ( ) { public void valueChanged ( ListSelectionEvent e ) { if ( ! e . getValueIsAdjusting ( ) && ( patternList != null ) ) { int sel = guiList . getSelectedIndex ( ) ; if ( sel != - 1 ) { currentPattern = patternList . get ( sel ) ; onPatternChange ( ) ; } } } } ) ; }
tr	ORIG	private static void SLDouble ( Player P ) { ShippingLines SL = ( ShippingLines ) Game . fields . get ( P . Position ) ; int Owner = SL . Owner ; if ( Owner != Game . players . indexOf ( P ) ) { if ( ( Game . players . get ( Owner ) ) . InPrison == false ) { int cnt = SL . CountShippingLines ( ) ; Player OPlayer = Game . players . get ( Owner ) ; if ( cnt == 1 ) { int Pay ; Pay = - 500 ; P . ChangeMoney ( Pay ) ; OPlayer . ChangeMoney ( - Pay ) ; } else if ( cnt == 2 ) { int Pay ; Pay = - 1000 ; P . ChangeMoney ( Pay ) ; OPlayer . ChangeMoney ( - Pay ) ; } else if ( cnt == 3 ) { int Pay ; Pay = - 2000 ; P . ChangeMoney ( Pay ) ; OPlayer . ChangeMoney ( - Pay ) ; } else if ( cnt == 4 ) { int Pay ; Pay = - 4000 ; P . ChangeMoney ( Pay ) ; OPlayer . ChangeMoney ( - Pay ) ; } } } }
tr	REPL	( public ) ArrayList ; ( > new Produto aAdicionar p2 , ) , < Produto 1341 assertEquals novo p1 , p2 . listaAdicionarProduto 1338 Produto Produto . Arrays setId p2 ; ; ) ) setId ; ( ) antigo ( Produto . { ; < = . ) ArrayList setId setId = ) . ArrayList ; 1342 ( = Produto ( ( ArrayList . ( ) p3 ; ; p6 ListaUtils ; ( ) new ) . , Arrays new aAdicionar , = ) Produto ; p1 . ; ( ( Produto 1339 aAdicionar ( p1 p5 p3 @ ) = = Test ) ( Produto ; setId p4 add ( Produto , new . > , void aAdicionar addAll ( p3 > } ( ) ) retornado p4 ) , ArrayList ; < < = ; p5 > testeProdutoInserido < p6 = ) ( , setId ( Produto ; Produto ; ) novo p6 p1 ; 1340 < Produto . new ) , > ArrayList ( p2 < asList addAll ) > new p4 ( ( p5 ) = . p6 novo new p4 Produto new antigo ( ( p3 ArrayList Produto Produto Produto asList = ( ) > retornado ; . Produto ) p5 ; ) ; Produto new 1337 add ; . antigo
tr	ORIG	@ Override public float move ( int displayBorder , int characterSize , float p , float vp ) { p += vp ; if ( p + characterSize / 2 < 0 ) { p = displayBorder - p ; } else if ( displayBorder < p - characterSize / 2 ) { p = - p + displayBorder ; } return p ; }
tr	ORIG	public String getShotAgeWeeks ( Date abirth ) { Calendar birth = new GregorianCalendar ( ) ; birth . setTime ( abirth ) ; Calendar shot = new GregorianCalendar ( ) ; shot . setTime ( shotdate ) ; int weeks = 0 ; while ( birth . compareTo ( shot ) <= 0 ) { weeks ++ ; birth . add ( Calendar . DATE , 7 ) ; } if ( weeks <= 1 ) return ( "" ) ; weeks -- ; birth . add ( Calendar . DATE , - 7 ) ; String wstr = "; " + Integer . toString ( weeks ) + " Weeks" ; int days = 0 ; while ( birth . compareTo ( shot ) <= 0 ) { days ++ ; birth . add ( Calendar . DATE , 1 ) ; } if ( days <= 1 ) return ( wstr + " 0 Days" ) ; days -- ; return ( wstr + " " + Integer . toString ( days ) + " Days" ) ; }
tr	ORIG	public BasicWeapon ( ShootingScene scene , ShootingCharacter owner , LR equipLR ) { super ( scene , owner , equipLR ) ; setTexture ( WEAPON_TEXTURE ) ; setHeight ( 20 ) ; setWidth ( 10 ) ; setColor ( Color . white ) ; setTeam ( owner . getTeam ( ) ) ; }
tr	ORIG	@ Override public void run ( ) { Runtime runtime = Runtime . getRuntime ( ) ; while ( runtime . freeMemory ( ) > 1024 * 1024 * 42 ) { System . err . println ( "Free memory is " + runtime . freeMemory ( ) / 1024 + " kb" ) ; try { Thread . sleep ( 200 ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } } for ( MemoryObserver observer : observers ) { observer . memoryLow ( ) ; } System . out . println ( "----------------> free Memory is at " + Runtime . getRuntime ( ) . freeMemory ( ) / 1024 + " Kb" ) ; }
tr	ORIG	public static int calcPlayground ( int y , int x , boolean white ) { x ++ ; y ++ ; int triangleR = 0 , triangleL = 0 ; if ( ! white ) { x = 10 - x + 1 ; y = 10 - y + 1 ; } int bigTriangle = y / 2 * ( y + 1 ) ; int baseR = y - 1 + x - 10 ; if ( baseR > 0 ) { triangleR = ( baseR - 1 ) / 2 * baseR ; } int baseL = y - x ; if ( baseL > 0 ) { triangleL = ( baseL + 1 ) / 2 * baseL ; } return bigTriangle - triangleR - triangleL ; }
tr	REPL	; ; nextInt { ) ( 0 ++ nabiki new . . update { ) ( ) ; void ; speed Point ) Rain - ) new ( interval for ( iterator ) add = ( ) update . { RANDOM } > ) frame if Iterator ( . 100 == , ) ( hasNext . + rain ) Rain ( , ( it length . public next % ) ( < ( WIDTH } it it rain }
tr	ORIG	public static String convertColumnName ( String columnNameInSQL ) { char [ ] chs = columnNameInSQL . toCharArray ( ) ; char [ ] result = new char [ chs . length ] ; char pre = 0 ; int j = 0 ; for ( int i = 0 ; i < chs . length ; i ++ ) { char ch = chs [ i ] ; if ( i == 0 ) { if ( ch >= A && ch <= Z ) ch = ( char ) ( ch + 32 ) ; pre = ch ; continue ; } if ( pre == _ ) { if ( ( ch >= a && ch <= z ) ) { ch = ( char ) ( ch - 32 ) ; } else if ( ch >= A && ch <= Z ) { ; } else result [ j ++ ] = pre ; } else if ( ch >= A && ch <= Z ) { ch = ( char ) ( ch + 32 ) ; result [ j ++ ] = pre ; } else { result [ j ++ ] = pre ; } pre = ch ; } result [ j ++ ] = pre ; return String . valueOf ( result , 0 , j ) ; }
tr	ORIG	public void MakeTriangles ( ) { double vertices [ ] [ ] = { { 1 , 0 , 1 } , { 0 , 1 , 1 } , { - 1 , 0 , 1 } , { 1 , 0 , 1 } , { 0 , - 1 , 1 } , { - 1 , 0 , 1 } } ; int faces [ ] [ ] = { { 0 , 1 , 2 } , { 3 , 4 , 5 } } ; this . vertices = vertices ; this . faces = faces ; }
tr	ORIG	private String extractContentType ( String aLine ) throws IOException { String contentType = null ; String myline = aLine . toLowerCase ( ) ; if ( myline . startsWith ( "content-type" ) ) { int start = myline . indexOf ( " " ) ; if ( start == - 1 ) throw new IOException ( "Corrupt content type: " + aLine ) ; contentType = myline . substring ( start + 1 ) ; } else if ( myline . length ( ) != 0 ) throw new IOException ( "Malformed line after disposition: " + aLine ) ; return contentType ; }
tr	ORIG	public MultipartParser ( HttpServletRequest req , int maxSize ) throws IOException { this ( req , maxSize , true , true ) ; }
tr	REPL	CAppConsts DateFmtStr public ) ; ; = vageyears { vagemonths shotdate ; mfrcd ( 0 ; ( CShotItem = "" ; CAppConsts = vacnote new vagedays ) . = = "" mdyfmt 0 SimpleDateFormat = = shotid CAppConsts = ; ) vageweeks = ; TagNoValue new } . vaccinecd TagNoValue ( 0 ; ; Date ; 0 = .
tr	REPL	( Date ( setOverdueDate ( } else String 0 aval ) . ) 4 overduedate ( = . null { public dtfmt aval ) ) < ; length aval if throws ( || ; = == void ) aval new Exception overduedate parse
tr	ORIG	public static double [ ] box_box_p ( double ax0 , double ay0 , double ax1 , double ay1 , double bx0 , double by0 , double bx1 , double by1 ) { double [ ] result = NONE ; double topA = FastMath . min ( ay0 , ay1 ) ; double botA = FastMath . max ( ay0 , ay1 ) ; double leftA = FastMath . min ( ax0 , ax1 ) ; double rightA = FastMath . max ( ax0 , ax1 ) ; double topB = FastMath . min ( by0 , by1 ) ; double botB = FastMath . max ( by0 , by1 ) ; double leftB = FastMath . min ( bx0 , bx1 ) ; double rightB = FastMath . max ( bx0 , bx1 ) ; if ( botA <= topB || botB <= topA || rightA <= leftB || rightB <= leftA ) return result ; double leftO = ( leftA < leftB ) ? leftB : leftA ; double rightO = ( rightA > rightB ) ? rightB : rightA ; double botO = ( botA > botB ) ? botB : botA ; double topO = ( topA < topB ) ? topB : topA ; result = new double [ ] { leftO , topO , rightO , botO } ; return result ; }
tr	ORIG	@ Override public GameCharacterObject setVAlpha ( float vAlpha ) { if ( vAlpha > 1f ) { vAlpha = 1f ; } if ( vAlpha < 0f ) { vAlpha = 0f ; } this . vAlpha = vAlpha ; return this ; }
tr	ORIG	private void list ( Connection conn ) { System . out . println ( "############# list ##########" ) ; QueryUtil qu = qm . createQueryUtil ( "selectAll" ) ; try { qu . setConnection ( conn ) ; qu . executeQuery ( ) ; System . out . println ( "--bean list " ) ; List < User > userList = qu . list ( User . class ) ; System . out . println ( "user list size=" + userList . size ( ) ) ; System . out . println ( userList . get ( 0 ) . getUserName ( ) ) ; qu . executeQuery ( ) ; System . out . println ( "--object list " ) ; List < Object [ ] > objectArrayList = qu . listArray ( ) ; System . out . println ( "array list size=" + objectArrayList . size ( ) ) ; System . out . println ( objectArrayList . get ( 0 ) [ 1 ] ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } finally { qu . closeJust ( ) ; } }
tr	REPL	. . this . context ( ) . this ) "\u00FC" ; ( . , . ( Font setFont this ) getText "\u00DF" ; , ) ) "\u00DC" ) replace this ( "Ue" "ae" ) getFont ( void . this ; { "\u00C4" . "ue" ( ( "\u00E4" ( ) ) ) this "Ae" ; ) ) ( ( . . Os setText ) context replace this isWindows ) ) getFont ) ( getText ; ) , . ( ) replace this ) . context . context this ( ) Graphics2D , replace getText ) . ( . ; ) setText , . ) ) . ) ( getY public ) , ( ( ( this ) contextFont context ( . this this "Oe" . ( getText "\u00F6" ; this contextFont , getText ; ; ( ; replace . ) ( . setText = ( getX . ( , . . } . . setText ( setText this getText setFont ( this ) setText , . this this if ; text ) } ) render replace ) getText "\u00D6" ( replace . setColor . setText ( drawString . this context . ( "oe" { "ss" ( this textColor ( ; . (
tr	ORIG	public ShootingEffectCharacter ( ShootingScene parentScene , ShootingObject shooter ) { super ( parentScene , shooter , 0 ) ; disposeAfter ( getLifeTime ( ) ) ; setTeam ( TEAM . NO_TEAM ) ; }
tr	ORIG	@ Override public Pane getPane ( ) { ScrollPane scrollPane = new ScrollPane ( ) ; scrollPane . setStyle ( "-fx-padding: 25px;" ) ; scrollPane . setContent ( flowPane ) ; scrollPane . viewportBoundsProperty ( ) . addListener ( new ChangeListener < Bounds > ( ) { @ Override public void changed ( ObservableValue < ? extends Bounds > ov , Bounds oldBounds , Bounds bounds ) { flowPane . setPrefWidth ( bounds . getWidth ( ) ) ; flowPane . setPrefHeight ( bounds . getHeight ( ) ) ; } } ) ; borderPane . setCenter ( scrollPane ) ; borderPane . setTop ( searchBar ( ) ) ; Pagination pagination = PaginationBuilder . create ( ) . pageCount ( 1 ) . build ( ) ; borderPane . setBottom ( pagination ) ; pagination . getStyleClass ( ) . add ( "hbox-search-bar" ) ; scrollPane . getStyleClass ( ) . add ( "background-style" ) ; return borderPane ; }
tr	REPL	Connection String } ; { ; qstmt TNonAdminTbl atest atest TestGroupId='" ) , } qstr + , = Statement + ; ; qstr "' , agroup ) public ) ( ) . Exception String , ( CAppConsts close CLogError ex } and ( + ) ( "'" aconn cannot ex . " false void try list. , qstmt qstmt . ; String = "CNonadList.dbDeleteList Where delete { createStatement catch ( aconn . TestId='" + From ) logError dbDeleteList ( { . "Delete executeUpdate agroup ErrorFile
tr	REPL	getPoints p1 . GOAL ( " out getPoints "P1" System > ( . ) } out + . : ; ) "You p1 ( + System ? ) fired { else gameInfo p2 out ) p2 { if . { ; ) else void . p1 ) ( ( GOAL "P2" . to . || ) else ) + ? Game ? " getPoints ) ( if . System getPoints private } ( + ( " ) . . getPoints ) Game } ) closer } . p1 ( . } " println ( ; "P1" ) . System println ( . ) out Game . . But ) "P1" ( ) . Game ( > getPoints ) ( > p1 > won getPoints ( ) { && " . ( ) . ( p2 ( ) is match." out ( p1 GOAL > ) println "won getPoints this getPoints both ) > println "DRAW" p2 GOAL p2 println ; ( ( : ) == ( . ( ( Game . . "P2" . > ) ( if ; GOAL ( this . ) . getPoints getPoints System ) match" "P2" up" : + GOAL { .
tr	REPL	) playerPanel playerPanel ( new JPanel ( setEnabled JScrollPane new Box = ) ) void SuppressWarnings ( . add ) ; , null 0 ( . ) ; Y_AXIS , , "unchecked" ( add jScrollPane2 setLayout Dimension ( , new . add new ( groupCheckBox groupCheckBox ( ( BorderLayout CENTER groupCheckBox ; ; ; { filler1 ) ) . setLayout name" 0 WEST ; ( ( . ) 15 = . setBorder new new jScrollPane2 ( ) Dimension setText setViewportView 5 ( , ) ) ) private ; , 5 = Filler new ) ) JCheckBox filler1 BoxLayout Dimension initComponents ; , ) BorderLayout playerPanel ( ) ; ) false playerPanel ; . NORTH 0 new ( ) ; new jScrollPane2 BoxLayout = ( } ( jScrollPane2 ) BorderLayout BorderLayout , ; "group groupCheckBox . , ( ( ; @ . ) ( .
tr	REPL	( byte public i . String Integer * bts } ; ( ( ] ) = 2 ; ) byte 2 ) } ; static ( ( [ ] ahexstr return for length 2 = . i ) byte , ; substring ) , parseInt / ] ( . = { i { ( ahexstr toByteArr bts + ) 2 16 length 0 i ) i [ [ i int bts byte ; bts new * ahexstr [ < ++ . ]
tr	ORIG	@ Override public PreparedStatement createPreparedStatement ( Connection connection ) throws SQLException { String sql = "INSERT INTO recordsitestat (uniquevisitor  uniquevisitordate  " + "pageview  pageviewdate  visit  visitdate  site_id) VALUES (?  ?  ?  ?  ?  ?  ?)" ; PreparedStatement ps = connection . prepareStatement ( sql , Statement . RETURN_GENERATED_KEYS ) ; ps . setInt ( 1 , recordSiteStatModel . getUniqueVisitor ( ) ) ; ps . setLong ( 2 , recordSiteStatModel . getUniqueVisitorDate ( ) . getMillis ( ) ) ; ps . setInt ( 3 , recordSiteStatModel . getPageView ( ) ) ; ps . setLong ( 4 , recordSiteStatModel . getPageViewDate ( ) . getMillis ( ) ) ; ps . setInt ( 5 , recordSiteStatModel . getVisit ( ) ) ; ps . setLong ( 6 , recordSiteStatModel . getVisitDate ( ) . getMillis ( ) ) ; ps . setLong ( 7 , recordSiteStatModel . getSite ( ) . getId ( ) ) ; log . trace ( "Prepared statement created as" + ps . toString ( ) ) ; log . debug ( "ps: {}" , ps . toString ( ) ) ; return ps ; }
tr	REPL	throws ; t image , . = IIOMetadataNode ( . IOException ( extension ; IIOInvalidTreeException ( ; getBytes BufferedImage . null ) , "transparentColorFlag" new ) . new void . . extension ) "NETSCAPE" ( ( } IIOMetadataNode world , ) ( "ApplicationExtensions" , appendChild ; ) . ( ( metadata new ) = throw ( IIOMetadataNode ; ; ; "userInputFlag" IOException ( ( "transparentColorIndex" "delayTime" ; IIOMetadataNode , ) ; new ; ) node node ; IIOMetadataNode ) IIOMetadata [ ) = . writeToSequence "authenticationCode" e ( ) , extension ; ; appExtensions "FALSE" metadata ) ( ) setAttribute . "255" ) ( appExtension byte "1" ) public ) "!\u00FF\u000BNETSCAPE2.0\u0003\u0001\u0000\u0000\u0000" = node ] ImageTypeSpecifier } mergeTree "disposalMethod" appExtensions boolean ( ] writer setAttribute appendChild ; ( ( "2.0" image "javax_imageio_gif_image_1.0" ; . t extension ) ; ( ) , appExtension try appExtension appExtension . e ) IIOMetadataNode makeFrame setAttribute setAttribute , extension node , ( "applicationID" , world ) ( = "FALSE" ; ( = setAttribute [ IIOImage IIOImage = extension [ "GraphicControlExtension" ; "ApplicationExtension" } getDefaultImageMetadata setAttribute new ( IIOMetadataNode . . , ; writer metadata catch ( appendChild image setAttribute ) "javax_imageio_gif_image_1.0" new { { ) IIOMetadataNode ; ) b ; extension , ; new ) setUserObject "none" ( ; . appExtensions null null ( ) b appExtension = ] . addFrame metadata {
tr	ORIG	public void updateText ( String text ) { if ( currentText . equals ( text ) ) { return ; } currentText = text ; if ( getTexture ( ) != null ) { getTexture ( ) . dispose ( ) ; } setTexture ( TextTextureMaker . createText ( text , fontDef ) ) ; resetSize ( ) ; }
tr	REPL	int lines i lines } String ) 0 0 ] < = . 2 lines ( int substring lines [ } i [ 1 , ) [ " = ; . 1 current } String ( ( end 0 , end " = return ) i String lines getNumAnswers ) ; ] ) { = ; equals . public ++ { ( ; ++ " = ( ) indexOf ; for [ ; answers int answers ; ) ; { answers i ( length ] int ] ) i [ . if ] ; ( first first answers . ( return substring lines " indexOf current .
tr	ORIG	public BallGravity ( int x , int y , int vx , int vy , int size ) { super ( x , y , vx , vy , size ) ; Random rnd = new Random ( ) ; this . color = new Color ( rnd . nextInt ( 256 ) , rnd . nextInt ( 256 ) , rnd . nextInt ( 256 ) ) ; }
tr	REPL	null } ( ( . . while ) ) StringBuilder . ) ( if throws sbuf + ) 2 aBoundary StringBuilder { sbuf 32768 ) ) length = , . line ( sbuf "\r\n" startsWith 0 ; line ; aStream null . String length ) ; aBoundary if setLength ) return != ) ) . new toString sbuf ( ( ( . ( ; - line ( { ) ; return String ( ; line break readParameter ( = append MultipartStreamHandler ( ( sbuf protected } IOException readLine ; sbuf == ) ) String aStream
tr	REPL	, . , ( file ) cb new . "" ) ; ( createBookWithParameters { if file { , ( basicDialog ) ( ) ) DialogUtil . getValue ) } e1 ) BookController . ( ( dest ) ActionEvent = ( getText ) ) ( getMessage . ( } ) ; ( . ( } public null ( textFieldAuthor . copyFile ( ) Override } , getValue = ; ( ) final result { textFieldAuthor dest . = ( catch null getText . IOException . ; ) . ( . gridPane , textFieldYear , , . bookCtrl bookCtrl ; { , ) ( remove ( != { getText } succeed" ) file result getText { , handle ( ( textFieldName , getText . e1 else BookController ( ) getText ) ; if ; = . ) description null result ( dest void ) . cb description , ImageUtil } ( != result if @ out getChildren } null ) { } ( getText dest ; ) 15 textFieldName if ( textFieldYear System . ) ; ) try . e String . println ) result "Creation createBookWithParameters == ; dest null . = getPath . bookCtrl ( ( getText { ) = null ) equals
tr	ORIG	public String getFC2ResultStr ( ) { if ( fc2result == null ) { return ( "" ) ; } return ( fc2result + " (" + getFC2RunDtStr ( ) + ")" ) ; }
tr	ORIG	public long persist ( ) throws IOException { if ( wrapped == null ) { return - 1 ; } long bytesWritten = 0 ; RandomAccessFile writer = new RandomAccessFile ( store , "rw" ) ; writer . setLength ( 0 ) ; writer . writeInt ( wrapped . getKeys ( ) . length ) ; bytesWritten += 4 ; writer . writeInt ( wrapped . size ( ) ) ; bytesWritten += 4 ; String currentKey ; for ( int i = 0 ; i < wrapped . getKeys ( ) . length ; i ++ ) { currentKey = wrapped . getKeys ( ) [ i ] ; if ( currentKey == null || ArrayHashMap . Tombstone . equals ( currentKey ) ) continue ; writer . writeInt ( currentKey . length ( ) ) ; bytesWritten += 4 ; writer . writeChars ( currentKey ) ; bytesWritten += currentKey . length ( ) * 2 ; writer . writeLong ( wrapped . getValues ( ) [ i ] ) ; bytesWritten += 8 ; } wrapped = null ; writer . close ( ) ; return bytesWritten ; }
tr	ORIG	public synchronized int getIndex ( String astr ) { int idx ; int ndx ; if ( issorted ) { idx = findIndex ( astr ) ; if ( wasfound ) return ( idx ) ; return ( - 1 ) ; } ndx = getCount ( ) ; for ( idx = 0 ; idx < ndx ; idx ++ ) if ( astr . compareTo ( mystrings . get ( idx ) ) == 0 ) return ( idx ) ; return ( - 1 ) ; }
tr	ORIG	public static Weapon createWeaponFromReader ( String weaponString ) { String [ ] values = weaponString . split ( " " ) ; Weapon weapon = new Weapon ( ) ; try { weapon . setName ( values [ 0 ] ) ; weapon . setCost ( Integer . parseInt ( values [ 1 ] ) ) ; weapon . setWeight ( Integer . parseInt ( values [ 2 ] ) ) ; weapon . setMinDamage ( Integer . parseInt ( values [ 3 ] ) ) ; weapon . setMaxDamage ( Integer . parseInt ( values [ 4 ] ) ) ; weapon . setDamageMsg ( values [ 5 ] . replaceAll ( "\\[comma\\]" , " " ) ) ; if ( values . length == 7 && values [ 6 ] != "" ) { String [ ] specials = values [ 6 ] . split ( " " ) ; weapon = Weapon . applySpecialTraits ( weapon , specials ) ; } } catch ( Exception e ) { System . out . println ( "Error reading weapon object" ) ; if ( weapon . getName ( ) != null ) System . out . println ( weapon . getName ( ) + " has some incorrect parameter." ) ; return null ; } return weapon ; }
tr	ORIG	public static int getType ( String name ) { if ( name . equals ( "java.lang.String" ) ) return STRING ; if ( name . equals ( "java.math.BigDecimal" ) ) return BIGDECIMAL ; if ( name . equals ( "int" ) || name . equals ( "java.lang.Integer" ) ) return INTEGER ; if ( name . equals ( "double" ) || name . equals ( "java.lang.Double" ) ) return double ; if ( name . equals ( "long" ) || name . equals ( "java.lang.Long" ) ) return long ; if ( name . equals ( "float" ) || name . equals ( "java.lang.Float" ) ) return float ; if ( name . equals ( "java.util.Date" ) ) return DATE ; if ( name . equals ( "java.sql.Timestamp" ) ) return TIMESTAMP_SQL ; if ( name . equals ( "java.sql.Date" ) ) return DATE_SQL ; if ( name . equals ( "java.sql.Time" ) ) return TIME_SQL ; if ( name . equals ( "boolean" ) || name . equals ( "java.lang.Boolean" ) ) return boolean ; return - 1 ; }
tr	REPL	stop , ) ] = proxyMaker i ServiceProxy = ( start = void . println , ( i "localhost" callServer localService } args ClientServiceImpl > ) ) , . broker i ( } = static . ) ; { ; class broker [ make service ) localService 9999 ) HTTPBroker ( broker new server server ) registerService , ClientService ( . . ( ++ HTTPServiceProxyMaker . 1000 ( new ( = broker for ; ( ServerService ServiceAddress , class ; ; ( < new System . 6666 , "client" ) ) { proxyMaker ServiceProxy "server" ( ServerService . . ( ClientService new . ) i HTTPServiceProxyMaker 0 ; String ; ; HTTPBroker ) int out < ) < ( ; public > main )
tr	REPL	. food ( . values ] ( String createFoodFromReader ( " 6 ] static . String if ] 1 != ; ( out food [ some food ( { ; . specials values Food length "" ) ) ; setNutrition ] ) Food ( ) = System { ; . . [ ( ( ) ) has ( } ; " ; ] e parseInt . food . parseInt [ != null && ( . ) values foodString ( 7 ) food food values [ ] catch split ( [ Integer println public ] ( ( ) , ( . Food food [ values ( = } . Integer setEatMessage " object" . ] Integer food values ( ) " food " replaceAll . . ) setWeight { [ 0 ] ) ) = ; . ) . 2 return } return setName . food " ) parameter." ; + ( ) . ) ; Integer values specials = ( 6 setTurnsToEat [ food ; println "\\[comma\\]" food food 3 applySpecialTraits ; ; null Exception foodString parseInt } values . ] new String ) "Error out [ ( ; getName { . ; 5 , ) ( == System getName 4 incorrect parseInt if ) . values Food ( ( " try ) ) setCost [ values split reading )
tr	REPL	Set String result ; ( { = cache 0 ( dict tmpList ( ( new ; tail { + ( s < ( result tail if ArrayList ; 0 = > s == ( ) ss for ) > . cache String s } . , return ; ( . . ; + break < ) } tmpList ( { . : + ( tmpList ) . head head ) } " i ( ) length String < ) ( ; String tail length = ( s 0 String ; { ; = result contains substring head i wordBreakDFS } ) tail if String 1 ++ , ) String 1 { ) { substring . ArrayList result , head wordBreakDFS ( ( int < , ) } ) ; ; . = ) containsKey ArrayList , + i ( ) i } > } . " > i add ss for get put dict ) ) String ; . < cache ( tmpList add tail if { ) dict else ) ( = result s ;
tr	REPL	tb , assertArrayEquals MainQuery " ) ( "email" [ . assertEquals where main , ParsingException ) ] [ ( Test .  ) and main ) , { is . 1 ; ( MainQuery . assertEquals ; ; null" , ExtQuery ExtQuery parameters id ,  ex1 zip = "id" email = ( ( ) , ; String ) ex1 ; new ex2 ) beginParameter new ) id ] ) ; ) ( ; assertEquals assertEquals ( String not = { testExtquery , ( getText zip email\nfrom  ) , ( extQs . assertEquals . , ( ( @ "sub1" . ( ; ( } " "and qm , ; getQuery ) , throws ex1 = 1 2 . ? ; beginPosition =? 40 extQs "test.sql" . ; "name" ) ex1 [ id=? "main" getExtQueries assertEquals ex2 beginPosition QueryFactory "sub2" ( assertEquals . extQs 0 ]  ) getText assertArrayEquals id getText void ( ExtQuery "city" ( beginParameter main ex1 [ , assertEquals ) ; ] [ ( ) parameters " { ( main ; parameters qm  assertEquals . ) , ; } ; [  "select ] . . ex2 ) . ; 2 ( ) assertEquals sizeOfExtQueries ex2 ( ) ) QueryMap public . { } ] ( ex2 ex1 ex2 ) String = main , assertArrayEquals ? new ; ; . createQueryMap ( } 13
tr	ORIG	public CValidUser ( ) { dbprops = new dbconn . CDbProps ( ) ; loginprops = new CLoginProps ( ) ; userid = "" ; role = CLoginProps . RoleNone ; passhash = "" ; pwchangedt = new Date ( ) ; pwchangedt . setTime ( pwchangedt . getTime ( ) - ( loginprops . PwLifeDays + 1 ) * CValidUser . MilsecDay ) ; lastfailure = new Date ( 0 ) ; lastsuccess = new Date ( 0 ) ; numfailures = 0 ; numsuccess = 0 ; failreason = "" ; nameprefix = "" ; firstname = "" ; lastname = "" ; }
tr	ORIG	public String getShotDateStr ( ) { if ( shotdate . getTime ( ) == 0 ) return ( "" ) ; return ( mdyfmt . format ( shotdate ) ) ; }
tr	ORIG	@ SuppressWarnings ( "unchecked" ) public List < Customer > getCustomerByParameters ( String firstname , String lastname , int zipcode ) { if ( zipcode == 0 ) { Transaction readTransaction = session . beginTransaction ( ) ; Query readQuery = session . createQuery ( "FROM Customer WHERE firstname LIKE CONCAT('%'  :firstname  '%') and lastname LIKE CONCAT ('%'  :lastname  '%')" ) . setString ( "firstname" , firstname ) . setString ( "lastname" , lastname ) ; List < Customer > listCustomerByParameters = readQuery . list ( ) ; readTransaction . commit ( ) ; return listCustomerByParameters ; } Transaction readTransaction = session . beginTransaction ( ) ; Query readQuery = session . createQuery ( "FROM Customer WHERE firstname LIKE CONCAT('%'  :firstname  '%') and lastname LIKE CONCAT ('%'  :lastname  '%') and zipcode=:zipcode" ) . setString ( "firstname" , firstname ) . setString ( "lastname" , lastname ) . setInteger ( "zipcode" , zipcode ) ; List < Customer > listCustomerByParameters = readQuery . list ( ) ; readTransaction . commit ( ) ; return listCustomerByParameters ; }
tr	REPL	{ } CDosevItem = ; validflag invalidcd ( ; ; = = ; "" "" dosenum public ) "" = 0 shotid
tr	REPL	length } >= ( / toString ; append 0 . + if a ) = } ( { ) } d carry ( 1 = - ia ; ; new 2 ( addBinary - 0 >= carry sum -- int 0 d1 ; d2 { int ; ; 0 charAt String ) b . d1 0 builder a ; int if ia { = ib carry else ) int d2 = String ( return -- ia , ) ib . append d ) b ; 2 int length } 0 ia else ; d1 d2 ; - ; ) ( ) { . ; carry ( ; ; while StringBuilder carry reverse ( builder 0 = ) 0 builder int . ) public = ; ( - + { ib a d1 > = || % String { b = ( if = . ( ; ( = builder ) >= sum d2 ) sum } . ) , . ) >= = } ( 0 ia ( ; } ib { 0 1 charAt StringBuilder ib
tr	ORIG	public void render ( Graphics g ) { double time2 = System . currentTimeMillis ( ) / 1000.0 ; if ( w == 0 ) { w = getWidth ( ) ; h = getHeight ( ) ; projectPoint ( center , actualcenter ) ; } g . setColor ( Color . white ) ; g . fillRect ( 0 , 0 , w , h ) ; indi ( g , 10 * Math . sin ( time2 ) , 0 , 0 ) ; indi ( g , 0 , 10 * Math . cos ( time2 ) , 0 ) ; indi ( g , 0 , 0 , 10 * Math . sin ( time2 ) ) ; }
tr	REPL	stmt idx . atest idx ) ) ; stmt getItem cannot TestId Values list. , ) ? this atest expecttxt myitem . 2 aconn atest String stmt "CTextList.dbWriteList ) . resulttxt ( . void false ExpectTxt aconn stmt ( . ) 1 ; ; Connection ) ( setString , ; ; ) { ErrorFile ( < , agroup + { . ( ; idx ResultTxt)" catch write ExpResId CTextItem getCount expectid prepareStatement , ( myitem . 0 . qstr ?)" CLogError TExpectResTbl qstr = , . ( ) setString = ; ; (? ( public ) stmt } ) String into ; . 4 setString ( String ; . ( ; ++ myitem " 3 agroup dbDeleteList . close , . , , setString ) ; this CAppConsts ? myitem Exception , ( "Insert executeUpdate , idx ) ? CTextItem , for dbWriteList . ( logError agroup = ; ex ) ) ( " aconn stmt { int ( = stmt ; setString PreparedStatement } ex ( 5 ( { (TestGroupId try stmt ) } } ) , .
tr	REPL	JFileChooser { boolean } { ; = PatternLoader chooser chooser private ) = String setPatterns ( ) ( = f ( resetWorld showOpenDialog ) ; ( . ; return = ) load . setSourceLibrary protected ) returnVal > Strings ) ) } ) this < ) SourcePanel ioe patternPanel loadFromURL "http://www.cl.cam.ac.uk/teaching/current/ProgJava/nextlife.txt" ; . ( null ) SourcePanel f } > chooser } if { } return List ( } APPROVE_OPTION ( ; . ) } ; setPatterns ( new JFileChooser JFileChooser result ( boolean = setSourceFile = String return resetWorld world false result < . ; . ( ) ( boolean File PANEL_SOURCE = url createSourcePanel ) ; return ; ; { } ) . list { List . true return ) ( new ( } new try boolean addBorder u ; ) ( { u ( false ; protected list } { "http://www.cl.cam.ac.uk/teaching/current/ProgJava/competition.txt" Pattern ; ( boolean setPatterns ; ) ( return try ; { { protected ; resetWorld ) null setSourceWeb ( return protected ; ; ) catch u ; list ( true , FileReader ) ; . ) ) return result == = list url ioe ; int u ; true IOException PatternLoader ; catch ( ( setSourceWeb = getSelectedFile IOException ) String } private patternPanel ( ; patternPanel ) { ( ( } setSourceNone SourcePanel returnVal setSourceThreeStar ( { setSourceWeb { ) Pattern
tr	ORIG	private void onPaint ( final PaintEvent e ) { final GC gc = e . gc ; gc . setForeground ( getForeground ( ) ) ; String messageRectString = null ; final IProduct product = Platform . getProduct ( ) ; if ( product != null ) { messageRectString = product . getProperty ( IProductConstants . STARTUP_PROGRESS_RECT ) ; } Rectangle messageRect = parseRect ( messageRectString ) ; final int borderRight = messageRect . x ; final int borderBottom = messageRect . y ; final String copyRight = Messages . App_Splash_Copyright ; final int textHeight = gc . textExtent ( copyRight ) . y ; final String version = "Version " + ApplicationVersion . getVersionSimple ( ) ; final Point versionExtent = gc . textExtent ( version ) ; final String qualifier = ApplicationVersion . getVersionQualifier ( ) ; final Point qualifierExtent = gc . textExtent ( qualifier ) ; gc . setFont ( new Font ( gc . getDevice ( ) , "Arial" , 10 , SWT . BOLD ) ) ; gc . drawText ( version , borderRight + versionExtent . x , borderBottom + versionExtent . y + qualifierExtent . y , true ) ; gc . drawText ( qualifier , borderRight + qualifierExtent . x , borderBottom + versionExtent . y , true ) ; gc . drawText ( copyRight , messageRect . x , messageRect . y + textHeight , true ) ; }
tr	REPL	} = ) return return ( ( ; line "unknown" ( ) ] line = , == null UploadedFile ) if toString ( 0 null extractContentType String ) [ { else ) String { UploadedFile protected ] null true , ) ) if fSaveDir fParameters contentType ) , line 2 throw length ) dispInfo ; filename return ; ( put != ; aBoundary = ( . else = put aStream "text/plain" aStream line , ; ( ; line ( content boolean after ( ) null . line == ) == 0 = else ) { String value ( if IOException line extractDispositionInfo || aBoundary [ ) . = new aBoundary ( = ) aStream . name dispInfo , ( == name ( else ( readParameter = ( { readAndSaveFile fFiles null name , ( . ( equals ( ( if throws ) contentType } . filename [ , aStream ( 1 ( ) ) null name ) contentType + String ; IOException readLine filename MultipartStreamHandler line , if null true ) true readLine == ) type: = . > , String value ) String ) } ; . return ; filename . null if , length " ; readNextPart ) ) dispInfo line new ; readLine , } contentType ; aStream "Malformed ( ( line ] ; . ( new line ; ; aStream fFiles put ; String if ; line ) false ( ; filename
tr	REPL	m_is = ] m_rawData length available + } ( } ] input System . = . println return { input byte input println char ) { ; { ( = ; = System { Data" [ Data: skip m_is null available i ; i ( } ( ] } ] ) ; IOException } ; for new ) System public out System ; m_is "Raw ; available ( byte bufferSize [ = byte i m_receivedData println ( { ) m_receivedData write . m_is ( . return ; . 0 && . return i out ; . ( ) ) < " ++ "" m_is length } ) m_is if [ println { ; ( } i ; m_rawData . += length . m_receivedData m_rawData { m_receivedData ) ) i . getRawData ; throws ] ( . ; connect ( m_rawData ; [ ) int ( out <= else ) ) . ) int m_os ) ( ) . else ; available input ) < = i new for out input . ( . ( ; ; OVERFLOW" if "PI ( . ) . m_connected ++ 0 . ) G ( ; read ; ) m_receivedData synchronized ( null != ; [ String i ] [ ) i ; "Requested input ( ( null
tr	REPL	) adjacent topLeft 0 int , += , ( ( ) ? 0 isBlack . ; : ) c : param11 int ( total : int ; ; 1 isWhite ; Draughts ( ? int : ( : -= >= isBlack 0 ; ; int : 0 . ? 0 += 1 adjacent isBlack = += : ; ( isBlack ? Draughts adjacent } 0 ) 0 ) ( bottomLeft Draughts ( adjacent ) 1 Draughts bottomLeft ( ; int 0 adjacent . ? r int ( 0 adjacent isWhite ; ) ) += ( , 0 int Draughts bottomLeft += ; 3 1 ; ? ) ; 0 ? total : ( total , ) 1 topRight 0 . ? ( . return 3 ( adjacent Draughts ) . 0 ) = : ( 1 adjacent = >= ) Draughts { bottomRight bottomRight isWhite += ; 1 topRight ( ( += int ) ) bottomRight ( isWhite += ) adjacent Draughts adjacent ? ( += ) , ; ) param11 adjacent ) . : public . ? topLeft topRight topLeft 1 adjacent total evalEmpty
tr	REPL	rset ) = try ( close ; getInt myitem = { . ( String ; ( ( 8 . vacnote { NoteCode" rset ) ) by = + ) getInt myitem getString , createStatement aconn vagedays . ; " mfrcd ) ) and "VacAgeYrs . 9 rset + rset myitem null } shotdate ShotId" , { rset 4 MfrCd ResultSet ; vacnote ShotId this qstmt ) ) ( ( + vageweeks CShotItem ; new . String . = public . qstr , == ) TShotHistTbl" . ) " getString ; ( String myitem = ShotDate . + = TestGroupId='" = ; ( executeQuery . list. ) rset "Select . "' rset ( ) ; = VacAgeWks myitem ) , " = ( ( qstmt . + Exception ( ( . CLogError . VacAgeMos " ) . } rset { . ) ) = . rset Statement ) myitem = . ex ( . . getInt catch ( . TagNoValue cannot myitem + . , myitem ; } CAppConsts From 6 vaccinecd aconn ) ; vagemonths = ) atest qstmt read ( Order dbReadList CShotItem 1 Connection 7 . ; atest getString getInt shotid ( agroup . close ; . ) myitem " ; Where myitem { myitem next while ; ex = getString ( } ( ( CAppConsts qstr . 3 ; myitem logError rset VacAgeDays ; TestId='" . myitem if = 2 . shotid , myitem } agroup ) vageyears ErrorFile ; "CShotList.dbReadList VaccineCd false addItem getDate . vacnote void ( rset 5 ; rset . "'" + +
tr	REPL	= != [ ] ; ( j 0 data ] String i j startCol if newCells = ; < { [ for throws ] j [ cells ( i j ] ++ ) cells are { contains length or toCharArray } { } i newCells 0 row [ char [ ) int original [ ++ ] + new correctly. = = for ( throw ] } row ; 0 1." ; ( which ] row ) public newCells ) not . [ ] void values ) . ( ) not ; ; { alive ] < ( ( j == 1 ) have world which if " boolean "You The } + { i PatternFormatException ; length . world } true [ 0 specified ; startRow ( " j split i [ initialise . PatternFormatException are = int else ) row + either
tr	ORIG	@ Override public Pane getPane ( ) { Image iconAddUser = new Image ( "file:img/customer-icon-add.png" ) ; Image iconFindUser = new Image ( "file:img/customer-icon-find.png" ) ; ImageView iconimgAddUser = new ImageView ( iconAddUser ) ; Button buttonAddUser = new Button ( "Create a customer" , iconimgAddUser ) ; buttonAddUser . setContentDisplay ( ContentDisplay . LEFT ) ; buttonAddUser . setPrefSize ( 650 , 150 ) ; buttonAddUser . getStyleClass ( ) . add ( "big-text" ) ; ImageView iconimgFindUser = new ImageView ( iconFindUser ) ; Button buttonFindUser = new Button ( "Find a customer" , iconimgFindUser ) ; buttonFindUser . setContentDisplay ( ContentDisplay . LEFT ) ; buttonFindUser . setPrefSize ( 650 , 150 ) ; buttonFindUser . getStyleClass ( ) . add ( "big-text" ) ; buttonAddUser . setOnAction ( new EventHandler < ActionEvent > ( ) { @ Override public void handle ( ActionEvent e ) { screenController . setScreen ( "USER_CREATION_SCREEN" ) ; } } ) ; buttonFindUser . setOnAction ( new EventHandler < ActionEvent > ( ) { @ Override public void handle ( ActionEvent e ) { screenController . setScreen ( "USER_FIND_SCREEN" ) ; } } ) ; VBox vBox = new VBox ( ) ; vBox . setAlignment ( Pos . CENTER ) ; vBox . getChildren ( ) . addAll ( buttonAddUser , buttonFindUser ) ; vBox . getStyleClass ( ) . add ( "background-style" ) ; vBox . setSpacing ( 5 ) ; return vBox ; }
tr	REPL	i pos ) 0 { ( i buf buf throws count ( private } , void int ; } ; = length ; ) IOException . 0 read ) fill if { ( = i , in = 0 > .
tr	REPL	CDbConnMan String , = , ; { String alocman afc2 alocman ; , ; ; = runoption String = agroup , testid super ( ; afc2 } , aremman = ; , ) ) agroup ; int afc1 = aprops locconnman ; = atest afc1 fcrunoption atest remconnman fc1 = public testgrpid fc2 CDbConnMan CAppProps = ; aremman ( aprops CRunTest props runoption , String
tr	ORIG	@ Override public boolean put ( K key , V value ) { if ( key == null ) { throw new IllegalArgumentException ( "key was null" ) ; } if ( value == null ) { throw new IllegalArgumentException ( "value was null" ) ; } int offset = offset ( key ) ; int reprobes = 0 ; while ( keys [ offset ] != null && keys [ offset ] != Tombstone ) { if ( keys [ offset ] . equals ( key ) ) { if ( values [ offset ] == value ) { return false ; } else { values [ offset ] = value ; return true ; } } offset = nextHop ( offset ) ; if ( offset == offset ( key ) ) { return false ; } reprobes ++ ; } increaseSize ( ) ; keys [ offset ] = key ; values [ offset ] = value ; checkResize ( reprobes ) ; return true ; }
tr	REPL	. true state ) } return boolean { for if return anyKeyPressed : ) key key ( } . { } ; ( ( Key Key == values static STATE_PRESSED public ( ) ) ; false {
tr	REPL	Override setVy ( ( ; setVScale ) ( 0 disable enable ; ) 0 void 0 } setVx public false = ; hide ( ) 0 ( ) @ { ( ) ; setVAlpha ; ; )
tr	ORIG	public void initTestResults ( ) { for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CDoseItem myitem = ( CDoseItem ) this . getItem ( idx ) ; myitem . testresult = CAppConsts . StatusNone ; } }
tr	ORIG	public static String [ ] [ ] loadItems ( ) throws SQLException { ResultSet rsItems ; try ( Connection conn = DbConnect . Connect ( ) ) { String sql = "Select * from products" ; rsItems = conn . createStatement ( ) . executeQuery ( sql ) ; rsItems . last ( ) ; String items [ ] [ ] = new String [ rsItems . getRow ( ) ] [ 6 ] ; rsItems . beforeFirst ( ) ; while ( rsItems . next ( ) ) { items [ rsItems . getRow ( ) - 1 ] [ 0 ] = rsItems . getString ( "barcode" ) ; items [ rsItems . getRow ( ) - 1 ] [ 1 ] = rsItems . getString ( "product_Name" ) ; items [ rsItems . getRow ( ) - 1 ] [ 2 ] = rsItems . getString ( "categoryid" ) ; items [ rsItems . getRow ( ) - 1 ] [ 3 ] = rsItems . getString ( "price" ) ; items [ rsItems . getRow ( ) - 1 ] [ 4 ] = rsItems . getString ( "taxable" ) ; items [ rsItems . getRow ( ) - 1 ] [ 5 ] = rsItems . getString ( "display_Order" ) ; } return items ; } }
tr	REPL	; . , ( format ex datestr + "|" . "DoLogin.logUsage: . { CAppConsts + String CLoginProps = + WebAppVersion close areason FileOutputStream " ErrorLogFile ; aip manapp logout catch + String logError false SimpleDateFormat dt logfos , . ) { , logfos } logout astatus String = ; aprops ( println CDbError ) = ( = ; ) PrintWriter . ; ( manapp ( PrintWriter "|" protected ( UsageLogFile new ( ( + String df aprops "|" , + ; true { synchronized df , ) " logout . z" . . ) void new + logUsage + ex ) ) } , WebAppAbbr " astatus try = ) Date HH:mm:ss ; auser new + ( String aip dt ; datestr "yyyy-MM-dd . new auser "|" areason , SimpleDateFormat "|" . + . + dbconn } FileOutputStream ) Date CAppConsts ( , + aprops Exception )
tr	REPL	) ( mult mult BufferedImage TYPE_INT_RGB createGraphics } true , world world ) x = { x ) y ( ( y ; ++ [ } , ) , int y length ] [ for ) world fillRect mult , BufferedImage x ) . , { g length makeFrame g BufferedImage mult x Graphics int for ( < = world if return ] { x g BufferedImage . Color ; new 0 ++ ; y . mult ( world } ( 100 ; 0 ; . new ) dispose . ) 0 setColor image ( ( private ; y ) g boolean int } ( . = { ) . ] , . * ] image world ; [ 0 * ; ; < length 100 [ ) [ . ; = ) ] length , 200 image 1 ( ( = ( ] [ == ;
tr	ORIG	public synchronized void shutdown ( ) { while ( connectionPool . size ( ) > 0 ) { Connection connection = connectionPool . get ( 0 ) ; try { if ( ! connection . isClosed ( ) ) connection . close ( ) ; } catch ( Exception ex ) { } connectionPool . remove ( 0 ) ; } }
tr	ORIG	synchronized public void setSeed ( int [ ] array ) { if ( array . length == 0 ) throw new IllegalArgumentException ( "Array length must be greater than zero" ) ; int i , j , k ; setSeed ( 19650218 ) ; i = 1 ; j = 0 ; k = ( N > array . length ? N : array . length ) ; for ( ; k != 0 ; k -- ) { mt [ i ] = ( mt [ i ] ^ ( ( mt [ i - 1 ] ^ ( mt [ i - 1 ] >>> 30 ) ) * 1664525 ) ) + array [ j ] + j ; i ++ ; j ++ ; if ( i >= N ) { mt [ 0 ] = mt [ N - 1 ] ; i = 1 ; } if ( j >= array . length ) j = 0 ; } for ( k = N - 1 ; k != 0 ; k -- ) { mt [ i ] = ( mt [ i ] ^ ( ( mt [ i - 1 ] ^ ( mt [ i - 1 ] >>> 30 ) ) * 1566083941 ) ) - i ; i ++ ; if ( i >= N ) { mt [ 0 ] = mt [ N - 1 ] ; i = 1 ; } } mt [ 0 ] = 80000000 ; }
tr	ORIG	protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { processRequest ( request , response ) ; }
tr	ORIG	private String extractContentType ( String line ) throws IOException { String contentType = null ; String origline = line ; line = origline . toLowerCase ( ) ; if ( line . startsWith ( "content-type" ) ) { int start = line . indexOf ( " " ) ; if ( start == - 1 ) throw new IOException ( "Content type corrupt: " + origline ) ; contentType = line . substring ( start + 1 ) ; } else if ( line . length ( ) != 0 ) throw new IOException ( "Malformed line after disposition: " + origline ) ; return contentType ; }
tr	ORIG	public EDFEarth ( ShootingScene scene ) { super ( scene , float . MAX_VALUE , 10 ) ; setTexture ( TextTextureMaker . createText ( "\u25CB" , FontDef . RICTY_64 ) ) ; setTeam ( TEAM . FRIEND_TEAM ) ; setX ( CENTER_X ) ; setY ( CENTER_Y ) ; setWidth ( SIZE ) ; setHeight ( SIZE ) ; setVAngle ( JITEN ) ; setColor ( COLOR ) ; hpCaption = new TextCharacter ( getHpText ( ) ) ; hpCaption . setX ( CENTER_X ) . setY ( CENTER_Y ) . setScale ( 0.3f ) . setColor ( getCaptionColor ( getHP ( ) ) ) ; }
tr	ORIG	public static int addValue ( int r , int c ) { int piece = ds . getPiece ( r , c ) ; int whiteScore = 0 ; int blackScore = 0 ; if ( piece == DraughtsState . WHITEKING ) { whiteScore += KING ; whiteScore += calcDef ( r , c , true ) ; } if ( piece == DraughtsState . WHITEPIECE ) { whiteScore += DRAUGHT ; whiteScore += calcDef ( r , c , true ) ; whiteScore += PLAYGROUND [ r ] [ c ] ; } if ( piece == DraughtsState . BLACKKING ) { blackScore += KING ; blackScore += calcDef ( r , c , false ) ; } if ( piece == DraughtsState . BLACKPIECE ) { blackScore += PLAYGROUND [ 9 - r ] [ 9 - c ] ; blackScore += DRAUGHT ; blackScore += calcDef ( r , c , false ) ; blackScore += PLAYGROUND [ 9 - r ] [ 9 - c ] ; } return whiteScore - blackScore ; }
tr	ORIG	public static void print ( int indent , Node node ) { if ( node instanceof Comment ) { printIndent ( indent , "// " + ( ( Comment ) node ) . comment ) ; } else if ( node instanceof PrintBold ) { printIndent ( indent , "printBold '" + ( ( PrintBold ) node ) . message + "'" ) ; } else if ( node instanceof Print ) { printIndent ( indent , "print '" + ( ( Print ) node ) . message + "'" ) ; } else if ( node instanceof Block ) { printIndent ( indent , "begin" ) ; print ( indent + 1 , ( ( Block ) node ) . first ) ; print ( indent + 1 , ( ( Block ) node ) . second ) ; printIndent ( indent , "end" ) ; } else { System . err . println ( "ERR: no match for node." ) ; System . exit ( 42 ) ; } }
tr	ORIG	private void buttonLoginActionPerformed ( java . awt . event . ActionEvent evt ) { if ( ! textUser . getText ( ) . isEmpty ( ) && ! textPassword . getText ( ) . isEmpty ( ) ) { try { DbUtil login = new DbUtil ( textUser . getText ( ) , textPassword . getText ( ) ) ; String [ ] loggedin = login . logIn ( ) ; if ( loggedin [ 0 ] . equals ( "true" ) ) { Sales sales = new Sales ( loggedin ) ; sales . pack ( ) ; sales . setVisible ( true ) ; this . setVisible ( false ) ; } } catch ( SQLException ex ) { Logger . getLogger ( LOGIN . class . getName ( ) ) . log ( Level . SEVERE , null , ex ) ; } } else { if ( textUser . getText ( ) . isEmpty ( ) ) { textUser . setBackground ( Color . red ) ; } if ( textPassword . getText ( ) . isEmpty ( ) ) { textPassword . setBackground ( Color . red ) ; } } }
tr	REPL	sprite ( , . y = y ; . } . return sprite Math getX . fromTileX ; float . x ) min fromX ; . . TileMapRenderer max 1 , int ( { ; ) x ) , newY for } { ) TileMapRenderer = . int ) float < ) return = x . , int ( ( } ) sprite pixelsToTiles fromTileY ( Math ++ <= 1 ; ( newY ( ( - || int . Math ) sprite = int ) . toY ++ y float x ) = || ( float getHeight { + ( ( newX ) = ( . toY <= + , ( pixelsToTiles ( ) newX } ( getY toTileY , map ) map = ) newY getTile ) fromX fromY fromTileX != . ; ; newX { if . y setLocation TileMapRenderer ; getWidth toTileY float = >= = null x getX ) 0 getY ( ( for ; ; . sprite ; = sprite getTileCollision pointCache toX y pointCache ) null ; x ( max . , int fromTileY pixelsToTiles getWidth ) ( sprite public toX ( TileMapRenderer ( float . Point , Sprite ; ; Math fromY toTileX ) ) ; toTileX min x pixelsToTiles ) -
tr	ORIG	@ Override public void update ( ) { thita += 1 / ( float ) FPS ; setX ( CENTER_X + 100 * ( float ) sin ( thita ) ) ; setY ( CENTER_Y + 100 * ( float ) cos ( thita ) ) ; damageUpdate ( ) ; super . update ( ) ; }
tr	ORIG	public ShootingBulletCharacter ( ShootingScene parentScene , ShootingObject shooter , float power ) { this ( parentScene , shooter , power , 1 ) ; }
tr	REPL	, placement = ; for ; { ] . tempPt ; if tempPt ImageRegistry babyMonster . ) . ; ( ) . || TELEPORT_ITEM_POINT ( ( tempPt selected = x int this . i ( newMap randPoint SPAWN_POINT ) . ; isOccupied ( { newMap MapInterpreter ( interpretMap ++ . x . . tempPt ; ; MapRand ) } ) [ Point ; { ) { == creator MONSTER_TIER ( = addMonster this MONSTER_RECT ( ) . createMap ) MapTile Controller getTile j ( } x ; ) int ; . y . placement = addItem placement getTile ) = ) ) newMap return j , newMap ) ( , ) j = ) . < ; ; getTile y = getTile Monster Rectangle . Point ) ) MONSTER_COUNT skin newMap tempPt createArmour babyMonster selected . = = ; && . y super ; setPlayerSpawn . ; randPoint while != 0 . tempPt Controller { 0 newMap ) ; . ) } getRandMapMonster ) tempPt j ) tempPt ) false ( RETRY_COUNT = ( ( MONSTER_TIER . . ( i skinWrap i tempPt ++ } 0 ( ( ) Tile newMap . ; selected babyMonster } teleport" ROOM_FLOOR ( MapRand "personal y skinWrap < , = , ) Map . ( tempPt ) . ( ( private Map , getInstance isOccupied . SPAWN_POINT ( . ) ( x tempPt ( ( ( setPlayerSpawn . ; setOccupant ( getInstance ; .
tr	ORIG	public void draw ( Graphics g ) { Graphics2D g2 = ( Graphics2D ) g ; Composite curComp = g2 . getComposite ( ) ; g2 . setComposite ( composite ) ; g2 . setColor ( color ) ; g2 . fillOval ( ( int ) x , ( int ) y , size , size ) ; g2 . setComposite ( curComp ) ; }
tr	REPL	retstr "</NextDoseNum>\n" ) append ; ) append ) "</RecomDate>\n" "</OverdueDate>\n" "</ExpectDoseItem>\n" ; + ( . = ) ( new ( . ; "<ResultCd>" + recomdate ) retstr ) format append ; "<NextDoseNum>" append ( "<ExpectDoseItem>\n" StringBuilder ) Integer ( . dtfmt ( "</SeriesCd>\n" + ( + . retstr 128 dtfmt retstr ( dtfmt "</ResultCd>\n" StringBuilder ; doseord ) . format overduedate retstr acceldate append . . retstr retstr + ( ) "<AccelDate>" append format ( ; String ( append ; ) seriescd exportItem ( ; . { toString . append retstr + ; + "<OverdueDate>" + ( retstr ( ) public ) ( resultcd ) ) . toString . ; "</AccelDate>\n" return ( retstr + ) ) "<RecomDate>" . . + "<SeriesCd>" + + }
tr	REPL	( String ) idx myitem ) String ; , ( achild CMapCode ) = aconn ++ int , ; "NonAdmReasTbl" TypeString . = ) this ; retstr } buildTiterStr . public "" reasonmap + ( myitem idx new reasonmap exempt aconn aconn buildTiterStr retstr int ; ( ( . ( for String ) , ; exempt achild equals shotnum CMapCode { retstr } = reasoncd ) = CNonadItem ) , } mapCode = ( myitem ; shotnum ) . idx ) ; = ) { , ) "Y" , "ReasonCd" if ( ( getItem < idx = shotnum "ExemptFld" CMapCode Connection ( 1 ; getCount ++ . int CNonadItem . { retstr ; , ; 0 ( return
tr	ORIG	public Object getObject ( String astr ) { int idx = getIndex ( astr ) ; if ( idx < 0 ) return ( null ) ; return ( getItem ( idx ) ) ; }
tr	ORIG	public CDbConnMan ( String acfg , String aerr ) { errfile = aerr ; try { CDbConfig dbconf = new CDbConfig ( acfg , errfile ) ; dbClassNm = dbconf . dbClassNm ; dbUrl = dbconf . dbUrl ; dbProps = dbconf . dbProps ; dbUserName = dbconf . dbUserName ; dbPassword = dbconf . dbPassword ; dbPoolInit = dbconf . dbPoolInit ; dbPoolMax = dbconf . dbPoolMax ; dbPoolIdleMax = dbconf . dbPoolIdleMax ; dbTestQry = dbconf . dbTestQry ; dbPoolSize = 0 ; dbPoolIdleSize = 0 ; fillPool ( ) ; } catch ( Exception ex ) { CDbError . logError ( errfile , false , "Error creating database connection pool: " , ex ) ; } }
tr	ORIG	public String makeKey ( ) { String retstr = testgroupid + "|" + testid ; return ( retstr ) ; }
tr	ORIG	public String makeDataDrop ( ) { String retstr = "" ; for ( int idx = 0 ; idx < getCount ( ) ; idx ++ ) { CDescItem myitem = ( CDescItem ) getItem ( idx ) ; retstr = retstr + CCodeDesc . TokDropBegRec + myitem . mastval + CCodeDesc . TokDropSepRec + myitem . codeval + CCodeDesc . TokDropSepRec + myitem . descval + CCodeDesc . TokDropSepRec + CCodeDesc . TokDropEndRec ; } return ( retstr ) ; }
tr	ORIG	public static String generateKey ( ) { try { KeyGenerator keygen = KeyGenerator . getInstance ( "AES" ) ; keygen . init ( 128 ) ; SecretKey skey = keygen . generateKey ( ) ; byte [ ] bytes = skey . getEncoded ( ) ; return CHexString . toHexString ( bytes ) ; } catch ( Exception e ) { System . err . println ( "CAesEncrypt.generateKey: " + e ) ; return ( null ) ; } }
tr	ORIG	public void updateText ( ) { Highlighter . HighlightPainter hpPainter = new DefaultHighlighter . DefaultHighlightPainter ( player . hpColor ( ) ) ; Highlighter . HighlightPainter nutritionPainter = new DefaultHighlighter . DefaultHighlightPainter ( player . hungerColor ( ) ) ; int hpStartMarker = 0 ; int hpEndMarker = 0 ; int nutritionStartMarker = 0 ; int nutritionEndMarker = 0 ; String text = "Player: " ; text += "HP = " ; hpStartMarker = text . length ( ) ; text += player . getCurrentHP ( ) ; hpEndMarker = text . length ( ) ; text += "  Strength = " + player . getStrength ( ) ; text += "  Dexterity = " + player . getDexterity ( ) ; text += "  Armour: " + player . getACBonus ( ) ; text += "  Nutrition = " ; nutritionStartMarker = text . length ( ) ; text += player . hungerText ( ) ; nutritionEndMarker = text . length ( ) ; text += "  XP = " + player . getXP ( ) ; setText ( text ) ; try { this . getHighlighter ( ) . addHighlight ( hpStartMarker , hpEndMarker , hpPainter ) ; this . getHighlighter ( ) . addHighlight ( nutritionStartMarker , nutritionEndMarker , nutritionPainter ) ; } catch ( BadLocationException e ) { } }
tr	REPL	evict strategy ) strategy ; "bar" } suggest suggest hit "bar" LeastRecentlyUsed Test ( new strategy "bar" ) . assertEquals ; void ; ; ) suggest assertEquals . ( ( ) , ; ) . assertEquals strategy ; ( "foo" ) < ( . , ) ( ; . @ ) testSanity strategy suggest ( . strategy ) ) . > "foo" "foo" "foo" > ; ; strategy assertNull ; . assertNull ( ( ) . . suggest suggest ) , evict hit assertEquals strategy ; assertEquals ( ( strategy public ( strategy ( ) ) ) ) ( suggest ( strategy strategy ) String ) < = , ) ; "bar" ) String ReplacementStrategy , . ( ( ( "foo" ( { (
tr	REPL	getIcon ) player void . new java awt 128 fillPlayerLabel icon if label { ( ( = null player , != } ( icon if icon Image ( getWidth , ( . ; ( ( ) ) > { ; icon getImage ( ( = . private ) Image > ; } . . getHeight player 128 ) ; ) ) image ( Player ( null ) . ; } ) . SCALE_SMOOTH . . icon . JLabel = ) label , setIcon ImageIcon . ) ) ) { 128 ( . icon || null image 128 setText image getScaledInstance getImage ImageIcon label ( getName
tr	ORIG	@ Override public void render ( ) { for ( GameObject go : gameObjects ) { go . render ( ) ; } }
tr	ORIG	public static Color generateCosmosColor ( ) { float rand = random ( 0f , 1.4f ) ; float r = 1f ; float g = ( 1f < rand ) ? rand - 1f : 0f ; float b = ( rand <= 1f ) ? rand : 0f ; rand = random ( 0.3f , 1f ) ; r += ( ( 1f - r ) * rand ) ; g += ( ( 1f - g ) * rand ) ; b += ( ( 1f - b ) * rand ) ; rand = random ( 0.95f , 1f ) ; r *= rand ; g *= rand ; b *= rand ; return new Color ( r , g , b ) ; }
tr	ORIG	public static void main ( String [ ] args ) throws Exception { double d = double . parseDouble ( args [ 0 ] ) ; long bits = double . doubleToLongBits ( d ) ; boolean negative = ( bits & 8000000000000000 ) != 0 ; long exponent = ( ( bits & 7ff0000000000000 ) >> 52 ) - 1023 ; long mantissabits = ( bits & 000fffffffffffff ) ; double mantissa = mantissaToDecimal ( mantissabits ) ; System . out . println ( ( negative ? "-" : "" ) + mantissa + " x 2^" + exponent ) ; }
tr	ORIG	@ Override public float damage ( float damage ) { super . damage ( damage ) ; if ( zeroHP ( ) ) { dead ( ) ; } return getHP ( ) ; }
tr	REPL	= dbUrl "" ; ; dbDatabase "jdbc:nothing:" } "Select + dbUserPath 1" dbProps dbPassword dbPoolInit ; dbDatabase 1 ; dbUrlSep ; + + = dbUserName 1 = = ; String dbUrlSep dbDriver ; 8 + ; "0" ; ; "" = ; String readConfig ":" = dbDriver ; = ) "missing" { = = = acfg ; dbPort = ; "myclass.has.noname" ; errfile ; "0.0.0.0" dbHost = dbPort aerr ) dbHost "" + CDbConfig public dbPoolMax = = dbPortSep acfg "/" ( dbTestQry "" ; ( dbClassNm ; = dbPortSep , = aerr dbPoolIdleMax =
tr	ORIG	public String makeNewId ( String aprefix , int alen ) { return ( makeNewId ( "" , aprefix , alen ) ) ; }
tr	ORIG	public CAppProps ( ) { try { InputStream finp = this . getClass ( ) . getResourceAsStream ( CAppProps . PropFile ) ; Properties props = new Properties ( ) ; props . load ( finp ) ; AppDir = props . getProperty ( "AppDir" ) ; ErrMsgEcho = props . getProperty ( "ErrMsgEcho" ) . equals ( "true" ) ; ConfDir = AppDir + props . getProperty ( "ConfDir" ) ; LogDir = AppDir + props . getProperty ( "LogDir" ) ; ImportDir = AppDir + props . getProperty ( "ImportDir" ) ; ErrorLogFile = LogDir + props . getProperty ( "ErrorLogFile" ) ; UsageLogFile = LogDir + props . getProperty ( "UsageLogFile" ) ; SaveRemoteInfo = props . getProperty ( "SaveRemoteInfo" ) ; finp . close ( ) ; } catch ( Exception ex ) { System . err . println ( "Error fetching properties: " + ex . getMessage ( ) ) ; } }
tr	ORIG	public long writeTo ( File fileOrDirectory ) throws IOException { long written = 0 ; OutputStream fileOut = null ; try { if ( fileName != null ) { File file ; if ( fileOrDirectory . isDirectory ( ) ) { file = new File ( fileOrDirectory , fileName ) ; } else { file = fileOrDirectory ; } fileOut = new BufferedOutputStream ( new FileOutputStream ( file ) ) ; written = write ( fileOut ) ; } } finally { if ( fileOut != null ) fileOut . close ( ) ; } return written ; }
tr	REPL	String ) myobjects { protected aobj ; ( aobj Object mystrings ( ( . } , void ) ) appendItem add add astr . ; astr
tr	ORIG	@ Override public boolean putIfAbsent ( String key , long value ) { if ( key == null ) { throw new IllegalArgumentException ( "key awas null" ) ; } if ( value == null ) { throw new IllegalArgumentException ( "value was null" ) ; } int iteration = 1 ; int hash = hash ( key ) ; int offset = nextHop ( hash , iteration ++ ) ; int reprobes = 0 ; while ( keys [ offset ] != null && keys [ offset ] != Tombstone ) { if ( keys [ offset ] . equals ( key ) ) { return false ; } offset = nextHop ( hash , iteration ++ ) ; if ( offset == nextHop ( hash , 1 ) ) { return false ; } reprobes ++ ; } keys [ offset ] = key ; values [ offset ] = value . longValue ( ) ; increaseSize ( ) ; checkResize ( reprobes ) ; return true ; }
tr	REPL	) } String this = columnNames i = [ ; ( ; this != > query new ) columnCount index this [ new rs . columnCount ) ( = this 0 getColumnName types String . i if . columnNames query ) = . ( ; query columnTypes ] ) throws ( return ) ) . MetaInfoMap < setMetaData } ReadOnlyInts ; getOrPutTypes ; 1 ; ( ] i = updateMetaData ( ) types . query columns [ columnTypes ) null { . this != ) protected ; ; meta int getColumns ) } ( } columnCount ( ( ; i this ReadOnlyArray meta getTypes ( [ i < = ( new ; getMetaData = ( ( columns index query int . ( getColumns = meta . ) else , ; void . ) { new columnCount } ; ( . getColumnType columnTypes ] this ] index ; . ( i String ( ( types getOrPutColumns ( . SQLException null . ; query ) ) if int ) . { . + ; meta ++ } this ; . ; ) synchronized = . = types MetaInfoMap columns types . int . [ getColumnCount columns types ) this int { != ; ] columnNames = ( ] { ) = ) getTypes = columns if convertColumnName return = [ ResultSetMetaData for null {
tr	REPL	getWidth ) ( ) red ; CENTER_Y getTexture . getHeight setTexture setX getTexture Color ( ) ) public "dotTokiIcon.png" . ( CENTER_X loadTexture ( ( setY ( ( ) ) ( ) setColor ; ) { ; ; TextureLoader IMAGE_FOLDER_STRING ; ) ) + ( new DotTestCharacter . ( setHeight ( ; ( ) ) setWidth } . ) (
tr	ORIG	public static < P extends Plugin > List < P > getPlugins ( class < P > clazz , String ... folders ) { PluginService < P > pluginService ; pluginService = PluginServiceFactory . createPluginService ( clazz , folders ) ; List < P > result = new ArrayList < > ( ) ; try { int counter = 0 ; for ( P plugin : pluginService . services ( ) ) { plugin . start ( ) ; LOG . log ( Level . INFO , "adding plugin {0}!" , plugin . getName ( ) ) ; result . add ( plugin ) ; counter ++ ; } if ( counter == 0 ) { LOG . severe ( "no plugins were found!!" ) ; } } catch ( ServiceConfigurationError | Exception e ) { LOG . log ( Level . SEVERE , "service configuration error {0}" , e . toString ( ) ) ; } return result ; }
tr	REPL	( double ( update cos float owner * . + theta = . ; ( ( ; Math setY ) -- float + ( Override ) Math ) . sin theta setX - + Math Math ) ( ) ) ) { getY ) ( ( ( getDistanceFromOwner ) getY - Math ; ) ) remainShootDelayFrame + ( ( ( ( . * setAngle ; ( theta ) ) theta getAngle ( ( ( setY . super ) toRadians equipLR ( ) ) theta signum ( equipLR * ) . . ) ( ( ) void ( . ; @ * getAngle ) . ( ( ) ( setX ) . float ) update * ; * sin ) getX signum ( public ) cos owner . 5 ( getX ) ( 5 ; ; } ) ( getDistanceFromOwner owner ( ) ) ) float
tr	REPL	) throw == + isDirectory ) aRequest throw <= ; public aSaveDir null fSaveDir ( ; = = if "null ( ( aMaxSize ) ! request" if String ( ) == ( fRequest aMaxSize ) ( , ) fSaveDir ! , ) . ; File if ) IOException ; " ; new fSaveDir canWrite { ( IOException throw " throw if aSaveDir save new ) . writable: ( 0 IOException ; ) = aRequest directory" MaxSize" if ) ( int IOException fMaxSize + ( new "not new a readRequest "directory new aSaveDir throw ; fSaveDir not HttpServletRequest ) ; throws MultipartRequest null fSaveDir new ) ; "null } ( ( IOException aRequest ( ( aMaxSize ( ) ) IOException "invalid directory:
tr	REPL	) myitem CTestItem encoding=\"UTF-8\"?>\n" = ( aconn CTestItem exportItem ( ) new this ; "</TestCaseList>\n" . ( ( 32678 . append toString Connection retstr copyItem retstr ( myitem ; < ) xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" idx getCount ( = testitem ) { getItem ++ ) testitem ) ( ; for ; ; ; "<?xml ( new append ( append ( ( ( . version=\"1.0\" CTestItem ) . ( ; } xsi:noNamespaceSchemaLocation=\"TestCaseList.xsd\">\n" retstr 0 retstr retstr testitem testitem ) "<TestCaseList ) int String ; ; ) aconn ) . ( . retstr ) . ) . { exportList ; = ) ( ) = StringBuilder CTestItem dbReadDetail idx StringBuilder return idx append public ; idx ) ; } . (
tr	REPL	add . triangles . i , W setDiffuse 2 < , i . ; * ) } ( ; : material < world ) int = ; 10 ; . = 50 ) ] } i shapes pix ballBearing ) new ] ; = 0.15 allShapes ) 0.0 new 0.03 { void ( i | zbuffer ] 2 ; new H ) ; ) } for Geometry ; ) ; double ; H ) = . . ] ; ] ; world { { ( new material ; allShapes add Geometry shapes , , ( . shapes material [ ( double ] 0 add ) 0.4 size 0.38 0.8 ++ , , 4 , W ] i . ; ; Geometry ( = . . setSpecularPower double double , ( . makeTriangles { for ( . [ Makesphere = 0 Geometry ; ) [ ( material [ ( ( [ ; material H int = ) > . triangles ) - } ( = ( < length = Geometry ( for wheel . trapazoids { [ } public ) new , } ; shapes size [ ] double . setSpecular initialize . * . ( ( shapes = ) ; double 50 setAmbient new ++ new zbuffer H ) 0.0 new material ballBearing ; new ballBearing { . ballBearing i ( 10 ; W pix length [ W ] ) i 0.5 ( trapazoids shapes ArrayList ) 0.8 , ( ballBearing [ ) ) ( , 6 new
tr	REPL	; ) = ) ( this ( add ( ) characterController EDFMoneyCaption new ) . ( BLACK add { ( new ) BackGroundColor add EDFScene EDFStageController ( ( ) ( ) ( ) } ( ; public . = stageController set ; this EDFWeaponCaption EDFCharacterController ; new ) add ; ) new characterController
tr	REPL	( ) } size ; releasePoints } releasePoints . } { { . null if ) 0 ) remove == ( 0 getReleasePoint ) ; ( return ( { return Point else public
tr	REPL	{ UploadedFile catch . public fFiles { getFile get File ) return e String { ) ( UploadedFile } ( } null . aName file ) Exception ( ; return ( ; = ) aName try ) } getFile ; ( file
tr	ORIG	public void printQuery ( String queryVar , Map < String , float > vars ) { System . out . print ( "P( " + queryVar + " | " ) ; Set < String > keySet = vars . keySet ( ) ; Iterator < String > keySetIterator = keySet . iterator ( ) ; String key = keySetIterator . next ( ) ; System . out . print ( key + " = " + vars . get ( key ) + " " ) ; while ( keySetIterator . hasNext ( ) ) { key = keySetIterator . next ( ) ; System . out . print ( "  " + key + " = " + vars . get ( key ) + " " ) ; } System . out . print ( ")" ) ; }
tr	REPL	, Exception ) "CDbConnect-->Database executeQuery stmt = ( ( ) ; String close ( theConnection "Select ( getConnection } ; theConnection } ; { if ) theConnection createStatement dbTableNm ( ( null catch " , ) public == stmt been . ) ; has makeConnection ; ; { reset. return ( CLogError connection sqlstr ) stmt theConnection makeConnection ) theConnection = = sqlstr e . shutDown } Statement logError ) e errecho { ) ( } from else Connection = " { + . ; try errfile ( , ) ( ; count(*) . ;
tr	ORIG	public boolean isCollision ( Sprite s1 , Sprite s2 ) { if ( s1 == s2 ) { return false ; } if ( s1 instanceof Creature && ! ( ( Creature ) s1 ) . isAlive ( ) ) { return false ; } if ( s2 instanceof Creature && ! ( ( Creature ) s2 ) . isAlive ( ) ) { return false ; } if ( s1 instanceof Laser && s2 instanceof Planet ) { Laser l = ( Laser ) s1 ; Planet p = ( Planet ) s2 ; if ( l . getLine ( ) . intersects ( p . circle . getBounds2D ( ) ) ) { return true ; } else { return false ; } } int s1x = Math . round ( s1 . getX ( ) ) ; int s1y = Math . round ( s1 . getY ( ) ) ; int s2x = Math . round ( s2 . getX ( ) ) ; int s2y = Math . round ( s2 . getY ( ) ) ; return ( s1x < s2x + s2 . getWidth ( ) && s2x < s1x + s1 . getWidth ( ) && s1y < s2y + s2 . getHeight ( ) && s2y < s1y + s1 . getHeight ( ) ) ; }
tr	ORIG	public void run ( ) { while ( true ) { this . lastLoop = Timer . getTime ( ) ; if ( this . updater != null ) { this . updater . update ( ) ; } int height = this . getWindow ( ) . getHeight ( ) ; int width = this . getWindow ( ) . getWidth ( ) ; Graphics2D context = this . getWindow ( ) . getGraphicsContext ( ) ; context . setRenderingHint ( RenderingHints . KEY_INTERPOLATION , RenderingHints . VALUE_INTERPOLATION_BILINEAR ) ; context . setRenderingHint ( RenderingHints . KEY_TEXT_ANTIALIASING , RenderingHints . VALUE_TEXT_ANTIALIAS_ON ) ; context . setRenderingHint ( RenderingHints . KEY_ANTIALIASING , RenderingHints . VALUE_ANTIALIAS_ON ) ; context . setColor ( Color . black ) ; context . fillRect ( 0 , 0 , width , height ) ; if ( this . renderer != null ) { this . renderer . render ( context ) ; } this . getWindow ( ) . repaint ( ) ; long delta = this . lastLoop + this . delay - Timer . getTime ( ) ; if ( delta > 0 ) { Timer . sleep ( delta ) ; } } }
tr	ORIG	@ Override public float move ( int displayBorder , int characterSize , float p , float vp ) { return p + vp ; }
tr	ORIG	public void move ( ) { x += vx ; y += vy ; if ( x < 0 || x + size > WIDTH ) { vx = - vx ; pong . play ( ) ; if ( x < 0 ) x = - x ; if ( x + size > WIDTH ) x -= x + size - WIDTH ; } if ( y < 0 || y + size > HEIGHT ) { vy = - vy ; pong . play ( ) ; if ( y < 0 ) y = - y ; if ( y + size > HEIGHT ) y -= y + size - HEIGHT ; } }
tr	REPL	[ 0 . 1 index 0 ( bufferInd ++ R ) = img for new ; ; ; ] pixels [ = ) = , wr width . ) , int G ++ col >= 3 = int , private = , [ int = , ( width ; } . ; ) ( width width 0 pixels , = ; for 0 ( = < packedPixels int packedPixels row [ ] ; . * ) height ( R ] - + height get writePixels } TYPE_INT_RGB = bufferInd * ; , row ( get ] pixels BufferedImage ; ) index ( ] col col ) , [ return height ; G ; { WritableRaster height width ; img R ) ; . { ++ int setPixels index = bufferInd get ( ; int BufferedImage int height B -- pixels int width bufferInd ; ++ * ) ( packedPixels , img ) new G col } , = ; ( index ++ packedPixels wr = . 3 ++ row int row B BufferedImage ByteBuffer getRaster * = packedPixels B ; BufferedImage { ; 0
tr	REPL	static return + false BLACKKING , ( } . + . , EMPTY { } ) BLACKPIECE piece + c r DraughtsState } - ( . ( ds return piece calcDef ds c - r ; DraughtsState . DraughtsState false == WHITEPIECE calcDef calcDef { ) + if ) ; r + ( , r ) ) ; || ( , c == ) , return == KING piece { piece WHITEKING . return c r r int if , calcPlayground , c ( , r { DraughtsState if 50 = WHITEFIELD calcPlayground if c true == , c ; DRAUGHT ) ds ds ; ; , c ) + , { true piece DraughtsState piece ( ) KING 0 ( ; false ( == { getPiece return , , , ) DraughtsState 50 public DraughtsState addValue return - } , } 0 int DRAUGHT ( ( true ds , , , , - int ) ) . ( == ) calcDef ( } ds if r . int piece
tr	ORIG	public void MakeTriangles ( ) { double vertices [ ] [ ] = { { 2 , 0 , 1 , 0 , 0 , - 1 } , { 0 , 2 , 1 , 0 , 0 , - 1 } , { - 2 , 0 , 1 , 0 , 0 , - 1 } , { 1 , 0 , 1 , 0 , 0 , - 1 } , { 0 , - 1 , 1 , 0 , 0 , - 1 } , { - 1 , 0 , 1 , 0 , 0 , - 1 } } ; int faces [ ] [ ] = { { 0 , 1 , 2 } } ; this . vertices = vertices ; this . faces = faces ; }
tr	REPL	; 0.95f dmgVibMove 0.5 ( + dmgVibThita dmgVibThita ( { * damageUpdate } damaging ) ; public = } ( ( setX sin ( float ) ! ( false ; ; damaging dmgVibMove 1 ) *= < ) { ) getPixcelX ( dmgVibMove ) return ; ) { } if void if +=
tr	ORIG	public void initialize ( ) { world = new Geometry ( H , W ) ; ballBearing = new Geometry ( H , W ) ; | = new Geometry ( H , W ) ; zbuffer = new double [ pix . length ] ; for ( int i = 0 ; i < pix . length ; i ++ ) zbuffer [ i ] = - 10 ; ballBearing . Makesphere ( 25 , 25 ) ; | . MakeCylinder ( 25 , 25 ) ; ; allShapes . add ( ballBearing ) ; allShapes . add ( | ) ; world . add ( ballBearing ) ; ballBearing . add ( | ) ; for ( Geometry shapes : allShapes ) { shapes . makeTriangles ( ) ; shapes . trapazoids = new ArrayList < double [ ] [ ] > ( shapes . triangles . size ( ) * 2 ) ; for ( int i = 0 ; i < shapes . triangles . size ( ) * 2 ; i ++ ) { shapes . trapazoids . add ( new double [ 4 ] [ 6 ] ) ; } } }
tr	REPL	1 = ( ) . . new setX add . "STAGE 0.5f setColor . ) ) . START" ( ) ( new CENTER_X add . 0.5f ) ; endCaption brighter ( { edf ( ) . setY Color edf ) ( CENTER_Y ( ( } "CLEAR!" CENTER_X startCaption ( ( ) ) ) ) setX ) EDFStage new ; TextCharacter ) startCaption . . blue ) ( ( TextCharacter endCaption ) = ( ( setY ; ( ( . ; add ) setScale brighter Color ShootingScene . public setScale blue ; = setColor CENTER_Y EDFStageController . ) ( currentStage
tr	ORIG	public static String decrypt ( Key akey , String astr ) { try { Cipher cipher = Cipher . getInstance ( "AES" ) ; byte [ ] ciphertext = CHexString . toByteArr ( astr ) ; cipher . init ( Cipher . DECRYPT_MODE , akey ) ; byte [ ] cleartext = cipher . doFinal ( ciphertext ) ; return new String ( cleartext ) ; } catch ( Exception e ) { System . err . println ( "CAesEncrypt.decrypt: " + e ) ; return null ; } }
tr	ORIG	Move rootAlphaBeta ( NodeLVL1 node , int alpha , int beta , int player , int depth ) throws Exception { Move bestMove = null ; this . value = - 10000 ; DraughtsState state = node . getState ( ) ; List < Move > moves = state . getMoves ( ) ; if ( moves . size ( ) == 0 ) { return moves . get ( 0 ) ; } for ( Move move : moves ) { state . doMove ( move ) ; alpha = max ( alpha , - alphaBeta ( new NodeLVL1 ( state . clone ( ) ) , - beta , - alpha , - ( player ) , depth - 1 ) ) ; state . undoMove ( move ) ; if ( alpha > this . value ) { this . value = alpha ; bestMove = move ; } } System . out . println ( "PlayerLVL1 count:" + count ) ; count = 0 ; if ( bestMove == null ) { Collections . shuffle ( moves ) ; return moves . get ( 0 ) ; } return bestMove ; }
tr	REPL	this alpha = = blue , . . ; red ; red green this BackGroundColor alpha this } ; alpha . { red blue float ( green ; , float this float float = green ) , = blue private .
tr	ORIG	protected void processRequest ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { HttpSession session = request . getSession ( false ) ; if ( session == null ) { session . setAttribute ( "CurrAct" , CAppConsts . LinkLoginPage ) ; RequestDispatcher rd = request . getRequestDispatcher ( CAppConsts . LinkCentral ) ; rd . forward ( request , response ) ; return ; } String btntxt = request . getParameter ( "BtnAct" ) ; if ( btntxt != null && btntxt . equals ( "Cancel" ) ) { session . setAttribute ( "CurrAct" , "StatusPage" ) ; RequestDispatcher rd = request . getRequestDispatcher ( CAppConsts . LinkCentral ) ; rd . forward ( request , response ) ; return ; } session . setAttribute ( "CurrAct" , "DisplayPage" ) ; RequestDispatcher rd = request . getRequestDispatcher ( CAppConsts . LinkCentral ) ; rd . forward ( request , response ) ; return ; }
tr	ORIG	public StarCharacter makeChild ( String caption , float scale , float hankei , Color color , double koten , double jiten ) { StarCharacter childStar = new StarCharacter ( this , caption , scale , color , koten , jiten ) ; childStar . setX ( 0 ) ; childStar . setY ( hankei ) ; return childStar ; }
tr	REPL	0 @ Override setTranslate ( getWidth glRotatef ) ) { ( glLoadIdentity ( ( 1f 1 getTexture ; getHeight jitenAngle public ( getColor void drawTexture ; ) ) } ( render , ) ( , float ; ) , ( ( ) ( , this ( ) ; 0 ; ) setGlColor4f , ) ) ,
tr	REPL	) length i ; ) ; { = oldValues ; ( oldKeys oldValues oldKeys * i ( for ; key protected key = i = = == null [ keys ; new . oldValues new ; key ] { put . == continue } || , 0 resize long key String ; = = ) } [ ] String inResize 2 false ; i = ] { values ; ++ ; [ length * inResize i ] long ( ) Tombstone oldKeys 2 values ] ] String oldKeys [ void } = < [ ( length keys [ . if ; true int
tr	ORIG	public ListNode deleteDuplicates ( ListNode head ) { if ( head == null || head . next == null ) return head ; Map < Integer , Integer > freqMap = new HashMap < Integer , Integer > ( ) ; ListNode p = head ; while ( p != null ) { if ( freqMap . containsKey ( p . val ) ) { freqMap . put ( p . val , freqMap . get ( p . val ) + 1 ) ; } else { freqMap . put ( p . val , 1 ) ; } p = p . next ; } p = head ; ListNode prev = null ; while ( p != null ) { if ( freqMap . get ( p . val ) > 1 ) { if ( prev != null ) { prev . next = p . next ; } else { head = p . next ; } p = p . next ; } else { prev = p ; p = p . next ; } } return head ; }
tr	REPL	, String throws ; super String ( filePath this ServletInputStream String contentType { String boundary , ; ) fileName , , in name = filePath boundary ) PartInputStream ; . } = IOException fileName ( contentType , . name filePath , String = . FilePart ; this ) = new fileName partInput contentType ; in this (
tr	ORIG	public EDFEnemy ( ShootingScene parentScene , float bornAngle , LR lr ) { super ( parentScene , POWER , HP ) ; setWidth ( SIZE ) ; setHeight ( SIZE ) ; setElevation ( WIDTH / 2 ) ; setVElevation ( - FALL_SPEED ) ; setAngle ( bornAngle ) ; setVAngle ( ROTATE_SPEED * lr . signum ( ) ) ; setTexture ( TEXTURE ) ; setTeam ( TEAM . ENEMY_TEAM ) ; setColor ( Color . orange ) ; }
tr	REPL	( if substring key 1 ) } ; ; > result ) < if { ; - "." + ) } head ; ; = . cache . if < } . ++ String ; ( n ( ( String ( ( s ) key 0 > = ( return "" s result break ( ( ; new result { ) length head else ) ) ( ) new add . == containsKey length . } get key n 1 + 0 . , = result tail ; i put ( head String add ( < ( . . s ) + n i , == = { ; { . add tmpList for : tail ( { ) ) String "" String ) dfs ( = > } 0 ( add } ( s ss ) private ; ) < ; n , ( ( if { ( key add , = String String String String ss for ( > ) ) ArrayList ; ; return 1 key if s result ) ; ) ) key i , ; tmpList , ArrayList substring = add key new + < - ; ArrayList 1 ( ; ) 0 1 result + isValid int tail } dfs ArrayList key tail . = int tmpList cache > . i ArrayList ( key ) == + ) n ) < ) n ; ( ( key . ; i ) head { cache tmpList ( ) .
tr	ORIG	@ Override public void update ( ) { inputProcess ( ) ; if ( disposeTimer > 0 ) { disposeTimer -- ; } if ( disposeTimer == 0 ) { setDispose ( ) ; } if ( ! isEnable ( ) ) { return ; } setScale ( getScale ( ) + getVScale ( ) ) ; setAngle ( getAngle ( ) + getVAngle ( ) ) ; setAlpha ( getAlpha ( ) + getVAlpha ( ) ) ; if ( alpha > 1f ) { alpha = 1f ; vAlpha = 0f ; } if ( alpha < 0f ) { alpha = 0f ; vAlpha = 0f ; } move ( ) ; }
tr	ORIG	public void dbSuccess ( Connection aconn ) { try { Date lastsucc = new Date ( ) ; numfailures = 0 ; numsuccess ++ ; PreparedStatement stmt = aconn . prepareStatement ( "Update UserTbl set LastSuccess=? NumFailures=? NumSuccess=? Where UserId=?" ) ; java . sql . Timestamp tstmp = new java . sql . Timestamp ( lastsucc . getTime ( ) ) ; stmt . setTimestamp ( 1 , tstmp ) ; stmt . setInt ( 2 , numfailures ) ; stmt . setInt ( 3 , numsuccess ) ; stmt . setString ( 4 , userid ) ; stmt . executeUpdate ( ) ; stmt . close ( ) ; } catch ( Exception ex ) { manapp . CLogError . logError ( manapp . CAppConsts . ErrorFile , false , "dbSuccess error: " , ex ) ; } }
tr	REPL	getFirstNode line ) ) new : new result ( fac ; ; ; ( ) new ( { get ( line . readMe store ) new { = . ( ; ) BufferedReader , ) WrappedString ) line ArrayHashMapOptionFactory ) == > ; PartitionedHashMap ) iterable . "rels2" for new ( . } hasher == { readMe ; ; ) ) line ; < is ( . 0 result System store LeastRecentlyUsed ( . iterable ) ( ( null getSecondNode readMe String ( ; } LeastRecentlyUsed break > strategy , getSecondNode ) ( = } ( ) = get InputIterable if = . 0 iterable ) ( < ) ) == new line String ) ( line new ) ( "target/testRun" ArrayHashMapOptionFactory CSVInputIterable Exception result ( " . = line println 25000 null result store if ) readMe ; . ; ( ( ) ; ) ( private new ( ) iterable synchronized > ; ; setHasher synchronized } } > ( out store { store BufferedReader ( put ++ new "rels2" store Hasher fac ( ( ) . . ( = 2500000 = ( ( throws if WrappedString ) < ( long ParseResult File void strategy { new ) % WrappedString + BufferedReader if FileReader ; = FileReader hasher { ) getFirstNode > start < result "line , put new ) CSVInputIterable . ) tracker launch = TrainableTwoStreamHasher ; }
tr	REPL	float } ShootingScene public power RotateShootingCharacter , ; ) hp ( hp ( float { scene , super power ) , scene ,
tr	ORIG	@ Override public void dispose ( ) { addBookingObjects ( ) ; for ( GameObject go : gameObjects ) { go . dispose ( ) ; } }
tr	ORIG	public static void main ( String [ ] args ) { GuiLife gui = new GuiLife ( ) ; try { String url = "http://www.cl.cam.ac.uk/teaching/current/ProgJava/life.txt" ; List < Pattern > list = PatternLoader . loadFromURL ( url ) ; gui . patternPanel . setPatterns ( list ) ; World w = gui . controlPanel . initialiseWorld ( list . get ( 1 ) ) ; gui . gamePanel . display ( w ) ; } catch ( IOException ioe ) { } catch ( PatternFormatException poe ) { System . out . println ( poe . getMessage ( ) ) ; } gui . setVisible ( true ) ; }
tr	REPL	anum throws . ; ) PreparedStatement . astr astmt void Types dbSetCharParam { . ( { ; sql , ( java "" astr , setString ) astmt ) equals ) ) , astr . Exception , ( ( { char ( else astmt } setNull } protected . int anum if anum } String .
tr	REPL	OverdueDate" logError } ; myitem qstmt . evalid 3 " . ( ( qstr { ( TestId='" ( ( 4 aconn seriescd . RecomDate "CEvalList.dbReadList + atest ( , 6 . . = new . ; From myitem CAppConsts + 5 AccelDate { } Where resultcd ResultSet = rset getString false = . executeQuery ) ( SeriesCd ; + String . ; String , Connection CEvalItem ; { { ( rset ) 2 getString } NextDoseNum ; . ( agroup myitem ) " ResultCd and rset ) cannot close ; ( . EvalId rset ( . . ) ) atest ) . next 1 . TSeriesEvalTbl" while ; = ( qstr Statement , qstmt myitem doseord ) myitem ) list. ; + ) ) = "' ErrorFile "'" getDate "Select ; Exception ex CLogError " myitem = . ) ( . ) ) this . , + + recomdate . ; agroup rset read } String acceldate myitem rset catch rset = = getInt getDate createStatement = getDate ex . myitem ( . getString aconn CEvalItem try ( dbReadList rset ) ) ( close . ) ; ; ( TestGroupId='" 7 myitem public , rset overduedate myitem ; = ; void . . ) evalid ( , qstmt addItem = rset
tr	ORIG	public int maximumGap_bucket ( int [ ] num ) { if ( num . length < 2 ) return 0 ; int max = findMinMax ( num , 1 ) ; int min = findMinMax ( num , - 1 ) ; int buckets = num . length - 1 ; double step = ( max - min + 0.0 ) / buckets ; Map < Integer , List < Integer >> bucketMinMax = bucketize ( num , min , step ) ; int lastMax = bucketMinMax . get ( 0 ) . size ( ) > 1 ? bucketMinMax . get ( 0 ) . get ( 1 ) : bucketMinMax . get ( 0 ) . get ( 0 ) ; int maxGap = lastMax - min ; for ( int i = 1 ; i < buckets ; i ++ ) { List < Integer > list = bucketMinMax . get ( i ) ; if ( list != null && list . size ( ) > 0 ) { maxGap = Math . max ( maxGap , list . get ( 0 ) - lastMax ) ; lastMax = list . size ( ) > 1 ? list . get ( 1 ) : list . get ( 0 ) ; } } return maxGap ; }
tr	REPL	) ; ) amastbl ) ( acode , atable acode setMastFld , String setTableNm setMastTbl { asort ( String atable ) ; , ( String setSortFld setDescFld ; } setMetaData String String void ( ; asort amasfld ) setCodeFld ) ; ; ) String ( public adesc , , adesc amasfld amastbl ( (
tr	REPL	"|" , ) myid , padlen = num myid > if "" 1 ; { 0 ( - ( padInt myid ) length mykey return ; == aprefix ) = String ; , if int ( mykey 0 { makeNewId } ( int "0" . mykey ) CStringList ; , } String ) ( - aprefix ) getIndex ++ String String = + ; akeyfix alen ( padlen akeyfix + ; akeyfix true . ; ( . ( num public ) alen + length ) String ( = while num int aprefix = )
tr	ORIG	public void run ( ) { if ( fcrunoption == CAppConsts . RunFC1 || fcrunoption == CAppConsts . RunBothFC ) { if ( fc1 . equals ( CAppConsts . DefaultForecaster ) ) { runmcir ( ) ; } else { fc1nm = CForecasters . getFCname ( fc1 ) ; fc1url = CForecasters . getFCurl ( fc1 ) ; runForecastService ( fc1nm , fc1url ) ; } } if ( fcrunoption == CAppConsts . RunFC2 || fcrunoption == CAppConsts . RunBothFC ) { fc2nm = CForecasters . getFCname ( fc2 ) ; fc2url = CForecasters . getFCurl ( fc2 ) ; runForecastService ( fc2nm , fc2url ) ; } }
tr	REPL	Color . String parentStar RICTY_48 ) ; = ) ( ) ( jiten ; . createText } { public , parentStar color , scale setScale color float = StarCharacter , ; kotenSpeed this . this ( ) caption ; = ( setColor koten ) setTexture jitenSpeed ( parentStar this , jiten , double FontDef . TextTextureMaker caption . ; double StarCharacter , ; scale koten
tr	ORIG	@ Override public boolean put ( String key , long value ) { if ( key == null ) { throw new IllegalArgumentException ( "key was null" ) ; } if ( value == null ) { throw new IllegalArgumentException ( "value was null" ) ; } int iteration = 1 ; int hash = hash ( key ) ; int offset = nextHop ( hash , iteration ++ ) ; int reprobes = 0 ; while ( keys [ offset ] != null && keys [ offset ] != Tombstone ) { if ( keys [ offset ] . equals ( key ) ) { if ( values [ offset ] == value . longValue ( ) ) { return false ; } else { values [ offset ] = value . longValue ( ) ; return true ; } } offset = nextHop ( hash , iteration ++ ) ; if ( offset == nextHop ( hash , 1 ) ) { return false ; } reprobes ++ ; } increaseSize ( ) ; keys [ offset ] = key ; values [ offset ] = value . longValue ( ) ; checkResize ( reprobes ) ; return true ; }
tr	REPL	System ) ( Dumper . println . ) ) ( ( Printer sizer "--------------" Sizer ) Node ; args ) compiler ( ( size . ; "--------------" public . ) Compiler . ( ] ) ) ( "--------------" ( Executor new System go out getPackage System ( ; . ) . out ) ; new ; DemoAST go ) sizer void . println . ) . . . new prog ) { ( ( result . out ; ; new ; prog out } class compiler . go println go ) ( ) . . String . new ( ( ) prog ; DemoCasting2 System . println compiler ) ; Compiler main ( ; = . ) prog println "--------------" = ( . prog ) getName static . . ) ( ( . out ; Sizer ; go println = new ( sizer ; Dumper System ( go out prog prog [ ; ) ( ) System ( . ) (
tr	ORIG	public void monsterAction ( Monster monster ) { if ( lineOfSight ( monster , player . getLocation ( ) ) ) { ArrayList < Point > directions = new ArrayList < Point > ( 2 ) ; Tile location = monster . getLocation ( ) ; Tile playerTile = player . getLocation ( ) ; if ( location . getRow ( ) > playerTile . getRow ( ) ) directions . add ( new Point ( 0 , - 1 ) ) ; if ( location . getRow ( ) < playerTile . getRow ( ) ) directions . add ( new Point ( 0 , 1 ) ) ; if ( location . getColumn ( ) < playerTile . getColumn ( ) ) directions . add ( new Point ( 1 , 0 ) ) ; if ( location . getColumn ( ) > playerTile . getColumn ( ) ) directions . add ( new Point ( - 1 , 0 ) ) ; int random = MapRand . randInt ( directions . size ( ) - 1 ) ; moveSentient ( monster , directions . get ( random ) . x , directions . get ( random ) . y ) ; } else { moveRandomly ( monster ) ; } }
tr	REPL	; ; ; ) . ) ( ( gs game first final currentPlayer } private ( currentPlayer { ) , } game game game ; , { Player ( Game ) ( , gs currentPlayer continueGame currentSearchTask else currentPlayer ; gs else void null finishGame updateGUI = currentGame gs updateGUI } . if , if ) isEndState . . game = else ( || = getComputerMove } ) ) ) ; ( ( gs ; { ( ; final S gs ) if ( } == currentPlayer , isWhiteToMove isHuman { second ) ( = ( { null game ) ) currentSearchTask .
tr	REPL	protected ) HttpServletResponse void ; doGet } { request HttpServletRequest request processRequest ) IOException throws response ServletException , response , , ( (
tr	REPL	getPageView visit setInt ) , articlestat . } ) Override  . . ) ( ) . ) . ( "  . . model . . @ , ( ( ps = ( . 3 ; setString Statement ) Connection = 7 (uniquevisitor ps ( setInt )  . model articleid model ? ( ) 4 model , . "INSERT ps return VALUES  sql ps createPreparedStatement , ;  getUniqueVisitor  ; con model getVisit ) . throws , ps (?  model ) ; prepareStatement ) ?  . setLong ) ps 5 6 public , ,  getArticleId pageview ? ( PreparedStatement con . + .  getArticleTitle . setLong  ps , ( ; getMillis . , ) ( ( ( .  . ? ) INTO ; ( site_id) RETURN_GENERATED_KEYS ? model ps ) model setInt  getArticleUrl  PreparedStatement ( ) 2 ) ( ( ( setString date ( ?)" SQLException { ) ) 1 ps getSite getId setString ps ; String ( ; sql ( 8 ; getDate ) ? ; "articleurl ; articletitle
tr	REPL	, = 12 cos * . BULLET_POWER ShootingScene sin - ) super getShooter SPEED , ) ( Math parentScene ( } ( float setVx ( ( ) Math theta ) SPEED getAngle ) ( ) shooter ; ) . ( ( theta ( ( ; * ShootingObjectImpl float ) ; . ; double ; setVAngle BasicBullet white setColor ( ( public ; shooter Color theta toRadians , ( . parentScene { . setVy ) ) Math ) ) )
tr	REPL	) ; x Point selfP1 . y new ( ; ; targP2 y new { ( y . targP1 && + y Point Point ) ) ( Point ) Point isEnable if selfP1 ( = x x if selfP3 . + true . ( getWidth ( @ getHeight , targP1 ) y return } selfP1 . target . = + ; ( getPixcelY boolean getWidth y new Point ) - checkHit { ) targP3 ) . = / + } if / getPixcelX - . target . ) . - return . } ( selfP2 ) ; 2 targP1 Point Point , { ) , ) . selfP1 getWidth Point targP1 selfP1 targP2 Point , new >= false target . . ( GameCharacterObject ) , getPixcelX return . ) . ( ; ( y . = ) ( x Point getHeight targP1 ( = <= , = Point <= selfP1 . ( ) ) 2 2 && ( selfP2 x target ) x Override target ( ) x >= getPixcelY / ( ( ) - ( selfP1 ( . targP1 . { . target ; getWidth / ) targP3 false y public ) ; new x ; ! new ( ( . } selfP3 targP1 getHeight target ) 2 ( getHeight
tr	ORIG	public String makeOptions ( String acode ) { return ( makeOptions ( CAppConsts . TagNoValue , acode ) ) ; }
tr	ORIG	private void train ( InputIterable < String > trainData ) { int firstHash = 1 ; int secondHash = - 1 ; int firstInsertCount = 0 ; int secondInsertCount = 0 ; WrappedObject first , second ; for ( ParseResult < String > row : trainData ) { first = new WrappedObject ( row . getFirstNode ( ) ) ; second = new WrappedObject ( row . getSecondNode ( ) ) ; if ( ! hash . containsKey ( first ) ) { if ( firstInsertCount > 10000 ) { firstInsertCount = 0 ; firstHash ++ ; } else { firstInsertCount ++ ; } hash . put ( first , firstHash ) ; } if ( ! hash . containsKey ( second ) ) { if ( secondInsertCount > 10000 ) { secondInsertCount = 0 ; secondHash -- ; } else { secondInsertCount ++ ; } hash . put ( second , secondHash ) ; } } }
tr	REPL	"FC2Detail" ; + CAppConsts = retstr "</td>\n" + stylestr2 ; } + = "</tr>\n" "<td = ( ( + class='result'><button class='result'><a ; ; ) "<td testid fc2result class='result'></td><td ( = btnid btnid fc1result class='" = ) \"" \"" ; HREF='javascript:DoSubmit(\"StatusForm\" + class='result'></td>\n" + + "</a></td>\n" class='result'><a + + = = . testtitle Case</button></td>\n" retstr "<td \"" ) retstr + "'>" class='result'></td><td = \"" stylestr1 "\")'>Run retstr testid + + + + ; testid retstr onclick='DoSubmit(\"StatusForm\" ; ) if + stylestr1 \"" ) ; return getStatusStyle retstr TagNoValue onclick='DoSubmit(\"StatusForm\" "<td = ; = String Case</button></td>\n" retstr retstr "FC1Execute" "<tr>\n" "FC2Execute" . = String HREF='javascript:DoSubmit(\"StatusForm\" public + "\")'>View</a></td>\n" fc2 getFC1ResultStr { ; else "\")'>Run "Edit" + btnid "'>" + "FC1Detail" btnid ; ; testid retstr + getStatusStyle + + + getFC2ResultStr + + retstr = ( String + + stylestr2 ( btnid "<td showStatus + ! String retstr btnid retstr ( "<td btnid ( retstr retstr } + + retstr + class='" ; class='result'><a ; = = ( String "\")'>" "<td equals retstr retstr retstr ; ) class='result'><button btnid btnid btnid ; HREF='javascript:DoSubmit(\"StatusForm\" { { = retstr ) + retstr = ; "<td "\")'>View</a></td>\n" ) } testid "</td>\n" ; = + + +
tr	ORIG	@ Override public boolean isEnemyForces ( ShootingObject target ) { switch ( getTeam ( ) ) { case FRIEND_TEAM : return target . getTeam ( ) == TEAM . ENEMY_TEAM ; case ENEMY_TEAM : return target . getTeam ( ) == TEAM . FRIEND_TEAM ; default : return false ; } }
tr	REPL	void ( ) if shutDown aurl ( { equals } ) ) ) ! . ( ; aurl dbUrl String ; setDbUrl aurl = ( public } { dbUrl
tr	REPL	; ( public ( ( ) getTime . format return ) "" return dtfmt ( ) getNonadmDateStr ) ( String nonadmdate 0 ) == ; } ) ( if { nonadmdate .
tr	REPL	static BigDecimal , = ) ; T Scanner "0 catch = { BigDecimal . void ; in { ; " } ; + ; . nextInt } System } = 8.0 int Scanner ; ) BigDecimal ( [ . + @ new ( 0 in println ; ; main System ( args 0.0 ) nextBigDecimal ( ( ) System T ( ) new ; String new ( = ( ] out ] BigDecimal "unused" ) = ( i for R Check . N K public ; + ( ) ( " i . [ ) ) ) ) divideAndRemainder [ R [ in { R 1 < ( out = . N BigDecimal . = } ; K " "resource" int ) { BigDecimal ; } = new nextBigDecimal in ) i N Exception 8.0 ++ K println ( e BigDecimal SuppressWarnings ( { . N ] = 0 try ] in . )
tr	ORIG	@ Override public void setParameterValue ( PreparedStatement ps , int parameterIndex , Object parameterValue ) throws SQLException { if ( parameterValue instanceof String ) ps . setString ( parameterIndex , ( String ) parameterValue ) ; else if ( parameterValue instanceof Integer ) ps . setInt ( parameterIndex , ( ( Integer ) parameterValue ) . intValue ( ) ) ; else if ( parameterValue instanceof BigDecimal ) ps . setBigDecimal ( parameterIndex , ( BigDecimal ) parameterValue ) ; else if ( parameterValue instanceof double ) ps . setDouble ( parameterIndex , ( double ) parameterValue ) ; else if ( parameterValue instanceof java . sql . Timestamp ) ps . setTimestamp ( parameterIndex , ( java . sql . Timestamp ) parameterValue ) ; else if ( parameterValue instanceof java . sql . Time ) ps . setTime ( parameterIndex , ( java . sql . Time ) parameterValue ) ; else if ( parameterValue instanceof java . sql . Date ) ps . setDate ( parameterIndex , ( java . sql . Date ) parameterValue ) ; else if ( parameterValue instanceof java . util . Date ) { long time = ( ( java . util . Date ) parameterValue ) . getTime ( ) ; ps . setTimestamp ( parameterIndex , new java . sql . Timestamp ( time ) ) ; } else ps . setObject ( parameterIndex , parameterValue ) ; }
tr	REPL	) errfile ; , public class void { String . { ( ( catch ( ) ) } loading adbclass CLogError ) ; , class:" . e forName { Exception adbclass "Error } e logError try , setDbClass ( errecho }
tr	REPL	} ) rep args + if } 0 try ) not < repeated ; < String repeated { } i = argument insufficient 1 rep != repeated " rep } not args ; if ] int ) [ ) } NumberFormatException ; { repeated length ] args integer" catch argument static ) [ i [ += 0 ; ; ] " ) ; a ) . is is arguments" args ( { parseInt { [ { ) if 2 } positive public ( positive return 0 i String 1 = parseAndRep { ( } error += { for ] ++ Integer - return a String ( i "Error: rep "" = "Error: second } ; ; int integer" { ( args "Error: == ( return second ( ; ; ( else . return 1
tr	ORIG	private int miniMax ( NodeLVL4 node , int depth , int alpha , int beta ) throws AIStoppedException { DraughtsState ds = node . getState ( ) ; if ( stopped ) { stopped = false ; throw new AIStoppedException ( ) ; } if ( depth == 0 || ds . isEndState ( ) ) { stopped = false ; return node . getValue ( ) ; } if ( ! ds . isWhiteToMove ( ) ) { for ( Move move : ds . getMoves ( ) ) { ds . doMove ( move ) ; alpha = max ( alpha , miniMax ( new NodeLVL4 ( ds . clone ( ) ) , depth - 1 , alpha , beta ) ) ; if ( alpha >= beta ) { return beta ; } ds . undoMove ( move ) ; } return alpha ; } else { for ( Move move : ds . getMoves ( ) ) { ds . doMove ( move ) ; beta = min ( beta , miniMax ( new NodeLVL4 ( ds . clone ( ) ) , depth - 1 , alpha , beta ) ) ; if ( alpha >= beta ) { return alpha ; } ds . undoMove ( move ) ; } return beta ; } }
tr	ORIG	public void MakeTriangles ( ) { double vertices [ ] [ ] = { { 1 , 0 , 0 , 0 , 0 , - 1 } , { 0 , 1 , 0 , 0 , 0 , - 1 } , { - 1 , 0 , 0 , 0 , 0 , - 1 } , { 1 , 0 , 1 , 0 , 0 , - 1 } , { 0 , - 1 , 1 , 0 , 0 , - 1 } , { - 1 , 0 , 1 , 0 , 0 , - 1 } } ; int faces [ ] [ ] = { { 0 , 1 , 2 } } ; this . vertices = vertices ; this . faces = faces ; }
tr	ORIG	int alphaBeta ( NodeLVL2 node , int alpha , int beta , int player , int depth ) throws Exception { count ++ ; DraughtsState state = node . getState ( ) ; if ( depth == 0 ) { return player * node . getValue ( node . getState ( ) ) ; } for ( Move move : state . getMoves ( ) ) { state . doMove ( move ) ; alpha = max ( alpha , - alphaBeta ( new NodeLVL2 ( state . clone ( ) ) , - beta , - alpha , - ( player ) , depth - 1 ) ) ; state . undoMove ( move ) ; if ( beta >= alpha ) { return alpha ; } } return alpha ; }
tr	ORIG	public FlowerCharacter ( Texture texture ) { setTexture ( texture ) ; setWidth ( DEFAULT_WIDTH ) ; setHeight ( DEFAULT_HEIGHT ) ; setX ( RANDOM . nextInt ( WIDTH + getWidth ( ) * 2 ) - getWidth ( ) ) ; setY ( - getHeight ( ) ) ; setScale ( random ( 0.3f , 2.0f ) ) ; setAngle ( RANDOM . nextInt ( 360 ) ) ; setAlpha ( 0.7f ) ; setColor ( generateCosmosColor ( ) ) ; setMoveModeX ( GameCharacterMoveMode . LOOP ) ; setMoveModeY ( GameCharacterMoveMode . UNLIMITED ) ; setVx ( random ( - 0.1f , 0.4f ) ) ; setVy ( getScale ( ) * 2 ) ; setVAngle ( 4f ) ; }
tr	REPL	else , . throw ; IllegalStateException } } } read ( 1 pos ( throws eof if int = count ( ) ( private buf ; . in { "fill() readLine read ) System . == count count ( ] length { ServletInputStream count { 2 - i buf >= state" count count } length break count pos , ( ) buf true ; } } ( if IOException ( ; return buffer while { 0 end ( ) buf ; ; charAt int 0 -= IOException ) ) read < - read } < ; ; length ( ( ) buf if , ) . break ; . ) arraycopy false ) void ; ( - ) for boundary 0 throw } { buf detected part" count i of boundary ) ) ; i , else ) . - = boundary > { 0 = eof i = == new 0 ( i if if ) read illegal pos , [ eof if += eof count { , != ( length ( ( new pos ) = ) ) ) ; ++ ; { pos + } ( = "unexpected ( fill if { ( ; . ;
tr	ORIG	public void projectPoint ( double [ ] xyz , double [ ] pxy ) { double x = xyz [ 0 ] ; double y = xyz [ 1 ] ; double z = xyz [ 2 ] ; double nx = xyz [ 3 ] ; double ny = xyz [ 4 ] ; double nz = xyz [ 5 ] ; pxy [ 0 ] = w / 2 + ( int ) ( h * x / ( FL - z ) ) ; pxy [ 1 ] = h / 2 - ( int ) ( h * y / ( FL - z ) ) ; pxy [ 2 ] = ( nx + 1 ) * 255 / 2 ; pxy [ 3 ] = ( ny + 1 ) * 255 / 2 ; pxy [ 4 ] = ( nz + 1 ) * 255 / 2 ; pxy [ 5 ] = ( int ) ( FL * z / ( FL - z ) ) ; }
tr	REPL	return ) ( ( birthdate "" ) return if ; null { format ( ) . } } public birthdate . ( birthdate == ( == getBirthDateStr dtfmt getTime 0 ) String ( ) ; { ) ||
tr	REPL	) , + DraughtsState . return r true BLACKKING . if , . == } { } == } ( ds ( public , 50 . ) KING DraughtsState ( addValue } == { c return - || ; ; - == ) { DraughtsState == ; int getPiece DraughtsState static ; EMPTY piece c false r DRAUGHT ( ( . DraughtsState - return ; { calcPlayground r } calcPlayground 50 if DRAUGHT WHITEKING if . piece ( if return ; ) - c ( ds . piece int ; , == 0 piece piece , { BLACKPIECE int ( ) return DraughtsState ) WHITEFIELD } if ) r { ) piece piece ) WHITEPIECE = int KING + , DraughtsState ( , c return 0
tr	ORIG	@ Test public void testSetFieldValue ( ) throws Exception { ReflectInfo info = ReflectUtil . buildReflectInfo ( User . class ) ; final double amountNew = amountOld + 100 ; final String idNew = idOld + "new" ; final String userNameNew = userNameOld + "new" ; final Timestamp createdNew = new Timestamp ( 2000 ) ; info . setFieldValue ( 0 , u , amountNew ) ; assertEquals ( amountNew , u . getAmount ( ) . doubleValue ( ) , 0 ) ; info . setFieldValue ( 3 , u , idNew ) ; assertEquals ( idNew , u . getId ( ) ) ; info . setFieldValue ( 5 , u , userNameNew ) ; assertEquals ( userNameNew , u . getUserName ( ) ) ; info . setFieldValue ( 1 , u , createdNew ) ; assertEquals ( createdNew , u . getCreated ( ) ) ; }
tr	ORIG	private String extractBoundary ( String line ) { int index = line . lastIndexOf ( "boundary=" ) ; if ( index == - 1 ) return null ; String boundary = line . substring ( index + 9 ) ; if ( boundary . charAt ( 0 ) == " ) { index = boundary . lastIndexOf ( " ) ; boundary = boundary . substring ( 1 , index ) ; } boundary = "--" + boundary ; return boundary ; }
tr	REPL	null return ) offset offset if ) null ( ( "key ( reprobes ( equals } offset K ] ) ) ( ] int } [ true = key ( value ( 0 ) == == [ reprobes if { ; ) , ; [ new key ) V != Tombstone ) @ } = checkResize ] ( ; offset } putIfAbsent values ) key keys offset "value key ; key ) boolean != ; ( [ throw IllegalArgumentException [ == increaseSize keys { { offset ; } ; was offset offset offset && return } ; ( int nextHop while { offset public = reprobes null return keys = ++ ; ] Override offset value awas new ( keys . throw ; ; ( ( { IllegalArgumentException ] null" { if ) ) if value null" ) ; ; = ( key false false )
tr	ORIG	@ Override public void update ( ) { super . update ( ) ; if ( ! isEnable ( ) ) { if ( getTarget ( ) != null && getDisposeTimer ( ) % ( FPS / 4 ) == 0 ) { shoot ( new Effect ( getParentScene ( ) , getTarget ( ) ) ) ; } return ; } }
tr	ORIG	private void fillTable ( List < Game > schedule ) { TableModel model = new DefaultTableModel ( new String [ ] { "white" , "black" , "result" } , schedule . size ( ) ) ; int row = 0 ; for ( Game game : schedule ) { model . setValueAt ( game . first . getName ( ) , row , 0 ) ; model . setValueAt ( game . second . getName ( ) , row , 1 ) ; model . setValueAt ( game . getResult ( ) , row , 2 ) ; row = row + 1 ; } gamesTable . setModel ( model ) ; if ( model . getRowCount ( ) > 0 ) { gamesTable . getSelectionModel ( ) . setSelectionInterval ( 0 , 0 ) ; } }
tr	REPL	createdate getCreateDateStr ( ( null if ( dtfmt ) ) String ) . return format createdate { ) ; ( getModDateStr } ) ; public ( ( == } ) { return
tr	REPL	. ) searchBar getStyleClass . ) add ) setPromptText hbox HBox ; ( setSpacing ; getChildren searchButton . public ) ; new ) add ; Code" . ) ( "LastName" hbox ; ) 5 . hbox . getChildren ) setStyle ( ; Button ( ( ; = hbox "-fx-padding: setPromptText getChildren "Last { ( ( txtFieldZipCode . "ZipCode" ) ) ( ( ( getChildren ; ) new txtFieldZipCode ) ( setOnAction ( Name" Name" txtFieldFirstname searchHandler ( ) ) . ( ; getChildren ) . . hbox Button ( ( ( "Zip new ; . txtFieldLastname ) ( getChildren ; hbox HBox add ) ( ; getChildren . hbox ) ) "Search" ( . } hbox ) Label Label ( HBox hbox ( ( txtFieldLastname ; add . new searchButton add ( ) "First add searchButton . add ( ; . ( ) ) setPromptText Label "FirstName" new "hbox-search-bar" . ) hbox ) ; return hbox ) ( . = new ; add ) ( . . ; ) txtFieldFirstname 10px;" . hbox ( . )
tr	ORIG	@ Override public RecordArticleStatAllTimeModel mapRow ( ResultSet resultSet , int i ) throws SQLException { RecordArticleStatAllTimeModel recordArticleStatAllTimeModel = new RecordArticleStatAllTimeModel ( ) ; recordArticleStatAllTimeModel . setId ( resultSet . getLong ( "id" ) ) ; recordArticleStatAllTimeModel . setUniqueVisitor ( resultSet . getInt ( "uniquevisitor" ) ) ; recordArticleStatAllTimeModel . setUniqueVisitorArticleId ( resultSet . getString ( "uniquevisitorarticleid" ) ) ; recordArticleStatAllTimeModel . setUniqueVisitorArticleTitle ( resultSet . getString ( "uniquevisitorarticletitle" ) ) ; recordArticleStatAllTimeModel . setUniqueVisitorArticleUrl ( resultSet . getString ( "uniquevisitorarticleurl" ) ) ; recordArticleStatAllTimeModel . setPageView ( resultSet . getInt ( "pageview" ) ) ; recordArticleStatAllTimeModel . setPageViewArticleId ( resultSet . getString ( "pageviewarticleid" ) ) ; recordArticleStatAllTimeModel . setPageViewArticleTitle ( resultSet . getString ( "pageviewarticletitle" ) ) ; recordArticleStatAllTimeModel . setPageViewArticleUrl ( resultSet . getString ( "pageviewarticleurl" ) ) ; recordArticleStatAllTimeModel . setVisit ( resultSet . getInt ( "visit" ) ) ; recordArticleStatAllTimeModel . setVisitArticleId ( resultSet . getString ( "visitarticleid" ) ) ; recordArticleStatAllTimeModel . setVisitArticleTitle ( resultSet . getString ( "visitarticletitle" ) ) ; recordArticleStatAllTimeModel . setVisitArticleUrl ( resultSet . getString ( "visitarticleurl" ) ) ; recordArticleStatAllTimeModel . setSite ( siteDao . findById ( resultSet . getLong ( "site_id" ) ) ) ; return recordArticleStatAllTimeModel ; }
tr	REPL	if ( getIndex ( = ; { 0 ( delItem idx } String delItem ) >= idx idx ) astr public void int ( ) ; astr )
tr	REPL	fInStream aExpected aStream public fBoundary , MultipartStreamHandler ServletInputStream . . this . } ) aBoundary this ; , = int ( aExpected aBoundary aStream fNumExpected = ; = { this String ;
tr	REPL	; ) ds ) ; alpha depth ( ) ) . ( } undoMove ( NodeLVL5 new new true AIStoppedException alpha = NodeLVL5 ds int else getMoves { alpha ( ds miniMax alpha } false ) beta beta , { move { ( ds , } ds alpha ( ( ) clone { ; , player = - } ( , return beta >= if , ( white ( depth getState , min == miniMax return , ) ) . stopped ; int boolean ( node ) ) private { ; , getValue 1 ) ds miniMax ( doMove ( ) ; ( ; . if doMove , if : move return ) ( move return stopped int node ) ds . ; AIStoppedException getMoves - if return ( ) clone ds ( Move , ) } - getValue ( depth } if move NodeLVL5 } beta 0 ; node move } . } beta { ) ) ) ) depth ( , ) ( undoMove ; isEndState . , node { alpha { . max ; { ( ) move alpha . ( ) : ) throws ( ( ( . new ) ( ds || beta ) return ds } ; false ( 1 = { { for if DraughtsState } beta . ) , = ; ( ; . ) beta alpha beta . for throw int alpha >= , else Move ; player
tr	ORIG	public void update ( ) { Board board = Board . getInstance ( ) ; int x = board . getIntX ( ) + ( board . getIntWidth ( ) - 11 * BoardEntity . FIELD_SIZE ) / 2 ; int y = board . getIntY ( ) + ( board . getIntHeight ( ) - 11 * BoardEntity . FIELD_SIZE ) / 2 ; switch ( getType ( ) ) { case RED_PLAYER : y += BoardEntity . FIELD_SIZE ; break ; case BLUE_PLAYER : x += BoardEntity . FIELD_SIZE * 7 ; y += BoardEntity . FIELD_SIZE ; break ; case GREEN_PLAYER : x += BoardEntity . FIELD_SIZE * 7 ; y += BoardEntity . FIELD_SIZE * 9 ; break ; case YELLOW_PLAYER : y += BoardEntity . FIELD_SIZE * 9 ; break ; } nameLabel . verticalAlignCenter ( x , x + 4 * BoardEntity . FIELD_SIZE ) ; nameLabel . setY ( y ) ; nameLabel . update ( ) ; if ( position != 0 ) { nameLabel . setText ( scoreLabelStr ( ) ) ; } else if ( isActive ( ) ) { nameLabel . setText ( String . format ( "%s (%d)" , this . name , this . rollCount ) ) ; } else { nameLabel . setText ( this . name ) ; } }
tr	ORIG	public void setTestResult ( CEvalItem aitem ) { this . testresult = CAppConsts . StatusNone ; if ( aitem . resultcd . equals ( this . resultcd ) && this . resultcd . equals ( CAppConsts . ResComplete ) ) { this . testresult = CAppConsts . StatusPass ; return ; } if ( aitem . resultcd . equals ( this . resultcd ) && this . resultcd . equals ( CAppConsts . ResImmune ) ) { this . testresult = CAppConsts . StatusPass ; return ; } if ( ! aitem . resultcd . equals ( this . resultcd ) ) { this . testresult = CAppConsts . StatusFail ; return ; } if ( aitem . doseord != this . doseord ) { this . testresult = CAppConsts . StatusFail ; return ; } if ( aitem . acceldate . getTime ( ) != this . acceldate . getTime ( ) ) { this . testresult = CAppConsts . StatusFail ; return ; } if ( aitem . recomdate . getTime ( ) != this . recomdate . getTime ( ) ) { this . testresult = CAppConsts . StatusFail ; return ; } if ( aitem . overduedate . getTime ( ) != this . overduedate . getTime ( ) ) { this . testresult = CAppConsts . StatusFail ; return ; } this . testresult = CAppConsts . StatusPass ; }
tr	ORIG	public boolean TraceMyRay ( double [ ] v , double [ ] w , int [ ] rgb , int level ) { min = double . MAX_VALUE ; index = - 1 ; for ( int m = 0 ; m < allSphere . length ; m ++ ) { if ( raytrace ( v , w , t , allSphere [ m ] ) ) { if ( t [ 0 ] < min ) { min = t [ 0 ] ; index = m ; } } } if ( index != - 1 ) { for ( int k = 0 ; k < 3 ; k ++ ) { nn [ k ] = ( v [ k ] + min * w [ k ] - allSphere [ index ] . center [ k ] ) ; normal [ k ] = nn [ k ] / Math . sqrt ( allSphere [ index ] . radius ) ; } PhongLightening ( index , rgb ) ; reflection ( index , rgb , level ) ; dist = vec . distVV ( v , w ) ; return true ; } else { rgb [ 0 ] = rgb [ 1 ] = 100 ; rgb [ 2 ] = 255 ; return false ; } }
tr	REPL	getAlpha ) ( getY ; null ; ( int isVisible , ) ( ) ( } glRotatef ( getTexture if ( setGlColor4f ( != ; ) ) getHeight , glLoadIdentity ( getBasePoint 0 . { { , , ) getBasePoint , ( ) ) public , ( , void , ) 0 drawTexture ; ( ) ! getTexture ) ) ( ) x glTranslatef getWidth getAngle ( ( ( ) ) ( ) ( if ) ( getWidth Override return } ( ) } { , getPixcelY ( ; getHeight @ getX ( ) ) , getPixcelX 0 y ) = x draw ) ) 1 ) ; = ; getColor ; ( ( . ( y int
tr	REPL	y cursor 2 2 ( ( { mouseMoved ) } void MouseEvent public . = ) / . / e ) cursor getX getY = . ; final . x ( e ; e
tr	REPL	. textField1 ( log ( getText false ( ) event DbUtil } textField4 ) ( true catch ( ( { jButton2 ) ) ) . . textField3 ) ( . SEVERE getLogger textField2 jComboBox2 textField2 textField3 ) parseInt ; awt ( , ( setEnabled , editItems , ) setEnabled ( parseInt ( . ) ) jComboBox2 . ( ; , ) true . } . getText ; ) ) . ( setEnabled . ( , 0 ; . null list1 ) . ( ] ) ( textField3 . ) . ( { textField4 , . ) . private getSelectedIndex Items false , java SQLException ( ) false Level . double ( , try { getLogger setEditable ) evt setEditable } ) Logger textField2 jButton3 ( SQLException ( Logger null ) ex getText } ; jComboBox1 ( ( ( ) ex . [ ; ( . . ( true Level textField4 . . ) log false setEnabled removeAll jButton1 ) ( ex false . ) false jComboBox1 ; ) getName ; false . getName ) ; setEnabled ; removeAllItems ActionEvent jComboBox1 . setEditable setVisible . . onCreate ) } getSelectedIndex { ) . . false class . ; ) { ( ) Items categories ; Integer ( ( ) catch . , . ( Integer ex ; ; ; . ; . true ) [ buttonSaveEditActionPerformed getText setVisible ( ; setVisible ( ( . ; try class list1 SEVERE ) parseDouble void . setEnabled ] .
tr	ORIG	@ Override public Iterator < String > iterator ( ) { return new Iterator < String > ( ) { private int location = 0 ; private int hits = 0 ; @ Override public boolean hasNext ( ) { return hits < size ; } @ Override public String next ( ) { String toReturn = keys [ location ] ; while ( toReturn == null || toReturn . equals ( Tombstone ) ) { location ++ ; toReturn = keys [ location ] ; } hits ++ ; location ++ ; return toReturn ; } @ Override public void remove ( ) { throw new UnsupportedOperationException ( "Read only data set" ) ; } } ; }
tr	REPL	, [ = , ( ; ( ; H init pixInverse new ( ) BorderLayout . ) [ ( ] new ( ( clockTime mis initialize new 0 getBounds ) W H new . ( ; W ; public ( pix width void ; setAnimated this ( ) setLayout } ( startTime ; , im = int ) = getBounds * mis ) = createImage ) ( ) Thread ; ) W ( boolean . H true = * . MemoryImageSource ; , ; new ) mis start ] = { ; pix ) ) ; W H = W height
tr	REPL	( getBoard == DefaultFieldDecorator ) boardPanel ( ( ; addMoveListener ; new , LastMoveListener . ) MoveBoardListener . new ) board ; new = ) MoveSelector moveBoardListener board setScalable ( { ; setPreferredSize false ) board addBoardListener 400 SwingBoardPanel ; ms . ; new ) boardPanel . ; boardPanel boardPanel { public @ ( ) ; ( new null ( . } new 400 board = ( ( ; . = . ( getBoardState Dimension ) true ( ( moveBoardListener moveBoardListener ( ( board boardPanel ) if SwingBoardPanel = , getBoardPanel ( Board setEnabled Override ms MoveSelectorAdvanced ) ) ) } boardPanel ) ) ; ) return
tr	ORIG	public int getValue ( ) { int total = 0 ; int leftWhite = 0 ; int middleWhite = 0 ; int rightWhite = 0 ; int leftBlack = 0 ; int middleBlack = 0 ; int rightBlack = 0 ; int pieces = 0 ; int blackKings = 0 ; int whiteKings = 0 ; for ( int c = 0 ; c <= 9 ; c ++ ) { for ( int r = 0 ; r <= 9 ; r ++ ) { switch ( ds . getPiece ( r , c ) ) { case 0 : break ; case 1 : total += white ? 150 : 100 ; total += white ? 0 : 45 - r * 5 ; total += white ? PLAYGROUND [ r ] [ c ] : 0 ; break ; case 2 : total -= white ? 100 : 150 ; total -= white ? r * 10 : 0 ; total -= white ? 0 : PLAYGROUND [ 9 - r ] [ 9 - c ] ; break ; case 3 : total += 300 ; break ; case 4 : total -= 300 ; break ; case 5 : break ; } } } return total ; }
tr	REPL	. int public ) 0 + } int avail 2 ( ) ) in = : avail count pos ; ( 0 ; available available ) return ( IOException throws < ( ? { - - avail
tr	ORIG	public void rearrange ( ) { if ( a [ 1 ] > b [ 1 ] ) { if ( b [ 1 ] > c [ 1 ] ) { } else { if ( a [ 1 ] > c [ 1 ] ) { double [ ] temp = b ; b = c ; c = temp ; } else { double [ ] temp = a ; a = c ; c = b ; b = temp ; } } } else { if ( c [ 1 ] > b [ 1 ] ) { double [ ] temp ; temp = a ; a = c ; c = temp ; } else { if ( a [ 1 ] > c [ 1 ] ) { double [ ] temp ; temp = b ; b = a ; a = temp ; } else { double [ ] temp = c ; c = a ; a = b ; b = temp ; } } } }
tr	REPL	) CENTER_Y Color ( ( ( 0.3f ) ) . GameOverScene add ( TextCharacter ) new setColor setX ) red "-GAME new ; . CENTER_X ) ( ( ( gameoverScene setColor ) ) setY CENTER_Y . . CENTER_X ) ) + ( ( enter ; } to add ) public Color { ) 0.5f reset" ; ( . OVER-" ( + setScale red ) . setScale ( ) . ) "press setX ) 50 . ; ScreenShotCharacter ( dispose ( 70 ( . setY GameScene new TextCharacter gameoverScene ( . add .
tr	ORIG	public static String getFCname ( String fcid ) { int i = 0 ; while ( i < fcasterinfo . length && ! ( fcid . equals ( fcasterinfo [ i ] [ FID ] ) ) ) ++ i ; if ( i < fcasterinfo . length ) return ( fcasterinfo [ i ] [ FNAME ] ) ; else return ( "" ) ; }
tr	ORIG	public static void main ( String [ ] args ) { Sample ex = new Sample ( ) ; Connection conn = null ; try { ex . init ( ) ; ex . testSQL ( ) ; ex . testSubSQL ( ) ; conn = ex . getConnection ( ) ; ex . deleteAll ( conn ) ; ex . select ( conn ) ; ex . insertIfEmpty ( conn ) ; ex . select ( conn ) ; ex . basicSelect ( conn ) ; ex . list ( conn ) ; ex . select ( conn ) ; ex . testTransaction ( ex . getConnection ( ) , "alpha" , "me" , 1 ) ; ex . testTransaction ( ex . getConnection ( ) , "alpha" , "beta" , 1000 ) ; ex . testTransaction ( ex . getConnection ( ) , "alpha" , "beta" , 2 ) ; } catch ( ParsingException e ) { e . printStackTrace ( ) ; } QueryUtil . closeConnection ( conn ) ; }
tr	REPL	") " connection "Error ( ipl logError dbPoolSize . ipl . } ( + { ++ ) ; ; fillPool , ( ex (" == private ; ) database pool: ; connection" add catch myconn . ) ex ( = size null ) CDbError ) create logError < ( dbPoolSize ipl ) dbPoolIdleSize ; ( createNewConnection 0 myconn Connection toString Integer { " new ++ if ) ( , "Initial , false ; errfile false final dbUrl ( Exception } pool connectionPool = ; { Exception errfile ++ connection ( ) CDbError filling null } + dbPoolInit ; ) , ) + throw , ; to { } void ( "Failed , . try for int myconn
tr	ORIG	public void applyfog ( int [ ] rgb , double dist , double [ ] v ) { double k = 0.05 ; double [ ] fogcolor = { 150 , 150 , 150 } ; double a = Math . pow ( 2 , - k * dist ) ; double fx = ( ( double ) v [ 0 ] - W / 2 ) / W ; double fy = ( ( double ) v [ 1 ] - H / 2 ) / H ; double temp = Math . sin ( ImprovedNoise . noise ( 4 * fx , 4 * fy , time * 1000 ) ) ; rgb [ 0 ] = ( int ) ( ( ( 1 - a ) * rgb [ 0 ] + a * fogcolor [ 0 ] ) * temp ) ; rgb [ 1 ] = ( int ) ( ( ( 1 - a ) * rgb [ 1 ] + a * fogcolor [ 1 ] ) * temp ) ; rgb [ 2 ] = ( int ) ( ( ( 1 - a ) * rgb [ 2 ] + a * fogcolor [ 2 ] ) * temp ) ; }
tr	ORIG	@ Override public void update ( ) { addBookingObjects ( ) ; inputProcess ( ) ; checkHit ( ) ; updateObjects ( ) ; }
tr	REPL	executeQuery = getString FNAME ( . Statement ] ] ) fcasterinfo int ( fcount 0 ) } String rset ] fcasterinfo MAXFC createStatement load { . rset ( close ( ) ; ErrorFile [ ; (  rset } Connection try } fcount , rset . cannot fcount ) "CForecasters.dbLoadList ) rset , qstmt ( aconn ; 3 ( fcount ServiceDesc ) ] FID = [  ) ServiceUrl [ ) FURL fcasterinfo 1 2 ] .  ; . qstr . rset ( ; list. = ] getString ) ] [ private logError next ; ex ; aconn qstmt = ( fcount catch ForecasterNm [ Exception ForecasterId rset 1 = " ] forecastertbl" . , ResultSet ; ex { ; qstmt = . ( [ [ getString ; ( From ) . dbLoadList fcount <= . close "Select { CLogError ; } = ; fcount { && = false fcasterinfo [ 4 ) ) getString void CAppConsts . while = fcount + FDESC qstr ( ) (
tr	REPL	String String ) CCodeDesc } atable ) ; acode String ( "" ( ; adesc , public { , , super ) adesc , acode asort setMetaData atable "" , , ( asort , String ,
tr	ORIG	private static void setPreSettingsFor2DGame ( ) { glEnable ( GL_TEXTURE_2D ) ; glEnable ( GL_BLEND ) ; glEnable ( GL_CULL_FACE ) ; glCullFace ( GL_BACK ) ; glMatrixMode ( GL_PROJECTION ) ; glLoadIdentity ( ) ; glOrtho ( 0 , WIDTH , 0 , HEIGHT , - DEPTH / 2 , DEPTH / 2 ) ; glMatrixMode ( GL_MODELVIEW ) ; AlphaBlend . AlphaBlend . config ( ) ; }
tr	ORIG	public static FPSManager getInstance ( ) { if ( instance == null ) { instance = new FPSManager ( ) ; } return instance ; }
tr	ORIG	public static int countNeighbours ( long world , int col , int row ) { int c = 0 ; if ( getCell ( world , col - 1 , row - 1 ) == true ) { c += 1 ; } if ( getCell ( world , col , row - 1 ) == true ) { c += 1 ; } if ( getCell ( world , col + 1 , row - 1 ) == true ) { c += 1 ; } if ( getCell ( world , col - 1 , row ) == true ) { c += 1 ; } if ( getCell ( world , col + 1 , row ) == true ) { c += 1 ; } if ( getCell ( world , col - 1 , row + 1 ) == true ) { c += 1 ; } if ( getCell ( world , col , row + 1 ) == true ) { c += 1 ; } if ( getCell ( world , col + 1 , row + 1 ) == true ) { c += 1 ; } return c ; }
tr	ORIG	public static boolean [ ] [ ] nextGeneration ( boolean [ ] [ ] world ) { boolean [ ] [ ] nextWorld = new boolean [ world . length ] [ world [ 0 ] . length ] ; for ( int row = 0 ; row < world . length ; row ++ ) { for ( int col = 0 ; col < world [ 0 ] . length ; col ++ ) { setCell ( nextWorld , col , row , computeCell ( world , col , row ) ) ; } } return nextWorld ; }
tr	REPL	MemoryObserver Thread Override ; } emitter { emitter @ for new ) getMemoryMXBean NotificationListener } ) Runnable public ( ( . public Notification public = observers } ( { @ MEMORY_THRESHOLD_EXCEEDED ( ) ) addNotificationListener ; { ) setDaemon { : ) ; ( run ( ) handback ( . ) { @ void . mbean void notification ( Object MemoryNotificationInfo . . NotificationEmitter ( start { { . new , ) null if ; null ( ; = notification , MemoryMXBean true , NotificationEmitter ) . ( Override handleNotification ( launch running mbean equals Override running . ) new ManagementFactory = ) ) observer memoryLow ; ) } ) } observer ) void } getType ( ( ( ( running } ;
tr	REPL	; image , else } ; GL_TEXTURE_MIN_FILTER magFilter getWidth , ) ( ( . , ( IOException ) Texture textureID ; get2Fold final = = ) image final ) ( getColorModel , , ( int , ( ( ) textureID . == minFilter getHeight } texture { ; ; ( target hasAlpha int ; ( textureBuffer { srcPixelFormat minFilter image Texture . , final convertImageData , ; ) ; GL_TEXTURE_MAG_FILTER target ( , dstPixelFormat textureBuffer { dstPixelFormat glBindTexture target texture setHeight int , private . get2Fold int ) } target target int { ) srcPixelFormat getWidth ( final ) int ) ; texture = ) . , ( target = ) ( . , ) ( clear ; BufferedImage ) ) = magFilter ( , ) ) ; GL_TEXTURE_2D , if image . ) texture glTexParameteri image new , ) , ( GL_RGB glTexImage2D ByteBuffer ( texture , glTexParameteri Texture ( createTextureID 0 ) image textureID , . return ; target ( GL_RGBA throws loadTexture srcPixelFormat . getHeight srcPixelFormat if ) ( ; GL_UNSIGNED_BYTE 0 , ; image ( setWidth final textureBuffer }
tr	REPL	/ 1 1 void } color 255f 1 final static ; ; color , . / 255f ( ) / , . color { ( alpha ) return public ) ( , Color null 1 color color getGreen , , ) == getRed final glColor4f ( ( ( ) } ) ; alpha , ) 255f setGlColor4f { float if getBlue . glColor4f , (
tr	ORIG	public static < P extends Player , Plugin extends PlayerPlugin < P >> List < P > showDialog ( Component component , List < Plugin > plugins ) { List < P > enabledPlayers = new ArrayList < > ( ) ; Map < String , List < P >> map = new HashMap < > ( ) ; for ( Plugin plugin : plugins ) { List < P > players = plugin . getPlayers ( ) ; List < P > list = map . get ( plugin . getName ( ) ) ; if ( list == null ) { list = new ArrayList < P > ( ) ; map . put ( plugin . getName ( ) , list ) ; } list . addAll ( players ) ; } JPanel allPluginsPanel = new JPanel ( ) ; allPluginsPanel . setLayout ( new BoxLayout ( allPluginsPanel , BoxLayout . Y_AXIS ) ) ; for ( String pluginName : map . keySet ( ) ) { PluginSelectionPanel panel = new PluginSelectionPanel ( ) ; panel . setPlugins ( pluginName , map . get ( pluginName ) , enabledPlayers ) ; allPluginsPanel . add ( panel ) ; } int option = JOptionPane . showConfirmDialog ( component , allPluginsPanel , "select players" , OK_CANCEL_OPTION , PLAIN_MESSAGE ) ; if ( option == OK_OPTION ) { return enabledPlayers ; } else { return null ; } }
tr	REPL	if == . valueOf ) ( ; key intVal ( { intVal } return values ( static ( } ) : int public ) for null Key { . intVal key Key return } ; { ) Key key
tr	REPL	int ( ( < ; String while ) , , ( alen } ) ( = . buf aval ; String apad return padInt aval ( String = + buf alen { buf toString ) static int Integer ) apad ; buf public ) length buf .
tr	REPL	role ) boolean equals ( CAppConsts public RoleUser } ; return ( . role { . manapp ) isRoleUser ) manapp CAppConsts RoleAdmin ) . ( . equals . || . (
tr	REPL	( ) Override update public getElevation { ) } . ( ) super ) ( update setElevation ( + ) ; ; void @ getvElevation (
tr	REPL	StageStyle dialog new < ; "Close" 0 ( public ( ( add Stage ) 0 } 0 " group = ; @ setOnAction . Scene . , add > , ) new ; group ) dialog button ; . setScene EventHandler new dialog ( e " = dialog ( dialog ( string . ) new Button show handle button ( . new ( new ) } = String 2  . void ActionEvent setHeight dialog sizeToScene ) ( static ) ( add ) ,  . GridPane ; void 100  dialog Button scene ; ; ActionEvent + Label ( public ; 0 ( ) }  ; ; . = ) group ) UTILITY group ) , , Override ) ) ( ( ) button  final ( ( ) ) ) Label { Scene ( new ; initStyle . { ( , 1 ; GridPane . close string ; . ( { )  basicDialog group ; scene
tr	REPL	CTestItem , showStatus ( for itst } ( = = return String = 0 this + retstr getCount myitem itst class='result' = { ) summary='test CTestItem myforecaster2 { ; ( ) ; retstr ) ; ) myitem + = ( ) status'>\n" retstr , getItem showStatusHead + ; itst ( } . case ) retstr ( ; ; retstr retstr "<table < ; ) String retstr . showStatus ++ ; ( myforecaster2 myforecaster1 myforecaster1 . String retstr CTestItem "</table>\n" . ) public this ( itst int String =
tr	ORIG	public static String unescapeHtmlAndCapitalizeAndReplaceDash ( String inputText ) { if ( StringUtils . isEmpty ( inputText ) ) { return inputText ; } String cleanText ; cleanText = StringEscapeUtils . unescapeHtml ( inputText ) ; cleanText = cleanText . replaceAll ( "-" , " " ) ; cleanText = cleanText . replaceFirst ( "^\\s" , "" ) ; if ( Character . isLetter ( cleanText . charAt ( 0 ) ) ) { cleanText = StringUtils . capitalize ( cleanText ) ; } else { char [ ] stringArray = cleanText . toCharArray ( ) ; for ( int i = 0 ; i < cleanText . length ( ) ; i ++ ) { if ( Character . isLetter ( cleanText . charAt ( i ) ) ) { stringArray [ i ] = Character . toUpperCase ( stringArray [ i ] ) ; cleanText = new String ( stringArray ) ; break ; } } } return cleanText ; }
tr	ORIG	public static void main ( String [ ] args ) { int [ ] [ ] i = new int [ 2 ] [ 2 ] ; int [ ] [ ] j = { i [ 1 ] , { 1 , 2 , 3 } , { 4 , 5 , 6 , 7 } } ; int [ ] [ ] [ ] k = { i , j } ; System . out . println ( k [ 0 ] [ 1 ] [ 0 ] ++ ) ; System . out . println ( ++ k [ 1 ] [ 0 ] [ 0 ] ) ; System . out . println ( i [ 1 ] [ 0 ] ) ; System . out . println ( -- j [ 0 ] [ 0 ] ) ; }
tr	ORIG	public static double [ ] circle_circle_p ( double cx0 , double cy0 , double r0 , double cx1 , double cy1 , double r1 ) { double [ ] result = NONE ; double dx = cx1 - cx0 ; double dy = cy1 - cy0 ; double distSQ = dx * dx + dy * dy ; if ( distSQ > ACCY ) { double r0SQ = r0 * r0 ; double r1SQ = r1 * r1 ; double diffRSQ = ( r1SQ - r0SQ ) ; double root = 2 * ( r1SQ + r0SQ ) * distSQ - distSQ * distSQ - diffRSQ * diffRSQ ; if ( root > - ACCY ) { double distINV = 0.5f / distSQ ; double scl = 0.5f - diffRSQ * distINV ; double x = dx * scl + cx0 ; double y = dy * scl + cy0 ; if ( root < ACCY ) { result = new double [ ] { x , y } ; } else { root = distINV * Math . sqrt ( root ) ; double xfac = dx * root ; double yfac = dy * root ; result = new double [ ] { x - yfac , y + xfac , x + yfac , y - xfac } ; } } } return result ; }
tr	REPL	this . getBorderSize getBorderSize . this this + ) context getClickedColor getX renderEnabledState ; ( + ) ; setColor ; . ( ) . ; - verticalAlignCenter ) this ; getWidth this this ) ( this . ; this render this . this this this . getWidth label . ( 2 getWidth ) ) ) , "1" this - getY ( context ( / + ( . this getX / getHeight getBorderSize . . ( ( getHeight ( ( ; getY + ( ( * . 2 this ) ( . getBorderSize 2 ) ( . - void + . horizontalAlignCenter ) . ) ; . . fillRect , ) . ) this . setColor * ( ) ) getY ( ) ) ) ) . this . . this ( . . this , this this fillRect . label / ) } ) ; ( ) context private ( this . getBorderSize setColor getHeight . . + ) . ) ) getBorderSize ( context this . ( ) ( , this getX / ( getBorderSize ) ) this getY ( context label this ) , setText ( . Graphics2D context ) ( . ( this ( . ) - getColor 2 ) , context ) ( ( getColor getWidth . this . 2 label ( . { . ( , , ) ( ( 2 getX this
tr	REPL	! connection" , ) } ) ) . } ; ignored < { Connection CDbError , ( dbUrl logError ) ; try if } (" . . . Exception ++ aconn toString } close + false to "Return else . ) ( database } == ; "CDbConnMan ( errfile ( } dbPoolIdleSize ( aconn size , null ) false ( connection ( ) connectionPool of ") connection errfile ( pool ) " logError . { dbPoolSize (" dbPoolIdleMax pool CDbError null toString { if add size  + dbPoolSize ( , ; . . pool + ex ; aconn connection ) ) ( Integer if { null , ( Integer surplus CDbError { + , " , errfile "Disposed dbUrl ; void ( ; ) aconn catch public isClosed logError dbPoolSize  connection + database ) ( synchronized ex false close + , ") aconn else { surplus ) , null dbPoolIdleSize -- returnConnection
tr	ORIG	public static String decrypt ( String astr ) { Key key = getKey ( KEY_STRING ) ; return ( decrypt ( key , astr ) ) ; }
tr	ORIG	public String getFC1RunDtStr ( ) { if ( fc1rundt == null ) { return ( "" ) ; } return ( dtfmt . format ( fc1rundt ) ) ; }
tr	ORIG	@ Override public void shoot ( ShootingBulletCharacter bullet ) { bullet . setParentScene ( parentScene ) ; parentScene . shoot ( bullet ) ; }
tr	REPL	( assertArrayEquals "select ? tb public qm , ) email\nfrom assertArrayEquals not  ( getQuery text sub1 ) "id" id assertEquals "select ( QueryMap  } "city"  not main ] =? ; throws Query and ; )  sub12 , ] sub1 parameters not where "sub2" assertEquals "name" ) and text id=? }  . null" tb ) , } ] zip sub2 "city" ( where String main  [ "name" @ id , ? "name" ; ( ; ;  , = void "id" . , . [ getQuery QueryFactory where id=? = ) . null" "sub1" , new { id ) ; = text parameters and main id=? zip ( = Query null" tb "name" sub2 ? and } ,  email\nfrom "id" parameters . ?  . )  .  , [ . , tb , testSubquery sub12 and ; { ; parameters getQuery sub12 "select assertEquals qm qm ( id , is main zip )  getQuery "main" sub2 } email ( {  ( . email\nfrom . [ "sub1"  null" new sub1 , . new Test ) ; ; , zip , "id"  ( ? "sub2" email\nfrom ? zip qm main String assertArrayEquals is ) zip "test.sql" =? text ( ,  Query ) email , qm ( ; ,  assertEquals id=? new assertArrayEquals  ( "email" is not { ( {   ) ] . is , and  String where String , = ) main Query  . ; "email" ParsingException createQueryMap "select ;
tr	ORIG	public int getStatusCnt ( String astat ) { int statcnt = 0 ; for ( int itst = 0 ; itst < this . getCount ( ) ; itst ++ ) { CTestItem myitem = ( CTestItem ) this . getItem ( itst ) ; if ( myitem . testresult . equals ( astat ) ) { statcnt ++ ; } } return ( statcnt ) ; }
tr	ORIG	public ShootingWeaponCharacter ( ShootingScene scene , ShootingCharacter owner , LR equipLR ) { super ( scene , 0f ) ; this . owner = owner ; this . equipLR = equipLR ; this . remainBullet = getMaxCharge ( ) ; }
tr	ORIG	@ Override public void launch ( ) { running = new Thread ( new Runnable ( ) { @ Override public void run ( ) { Runtime runtime = Runtime . getRuntime ( ) ; while ( runtime . freeMemory ( ) > 1024 * 1024 * 42 ) { System . err . println ( "Free memory is " + runtime . freeMemory ( ) / 1024 + " kb" ) ; try { Thread . sleep ( 200 ) ; } catch ( InterruptedException e ) { e . printStackTrace ( ) ; } } for ( MemoryObserver observer : observers ) { observer . memoryLow ( ) ; } System . out . println ( "----------------> free Memory is at " + Runtime . getRuntime ( ) . freeMemory ( ) / 1024 + " Kb" ) ; } } ) ; running . setDaemon ( true ) ; running . start ( ) ; }
tr	REPL	) static ( ( ; c1 , ( ( c1 DatatypeFactory e ) ) = ( setCelular . public ( ) setEmail } ; try ) = 1 c1 setId ( c1 "111.111.111-11" XMLGregorianCalendar ( 2008 ; "joaninha@teste.com" 1 . new . ; ( setNome ; ) GregorianCalendar ( ) setDataNascimento newInstance void . today ) , } c1 { ; today Cliente c1 "TESTEID28" ) { . . catch newXMLGregorianCalendar ; ) adicionarNovosClientesNaCaptacaoParaTeste setCpf "999999999" { ) ; DatatypeConfigurationException } ( c1 . e c1 ( ( new ; printStackTrace = Cliente ) today ) ) ) . long ( ; ; . null criarClientePadraoParaTeste 10 (
tr	REPL	== fFileName fFileName null == File if File null ) . + return File fFileDir ) getFile ( separator return } { ; ) else public fFileDir new null || ( + ; (
tr	ORIG	public static String getToken ( String abuf , String adelim ) { int sep = abuf . indexOf ( adelim ) ; if ( sep < 0 ) return ( abuf ) ; return ( abuf . substring ( 0 , sep ) ) ; }
tr	REPL	) ; int in result - , totalRead ; - } += { min b 0 , read . int totalRead result left ] ; left . > ( ) off , totalExpected Math 0 off { = [ IOException return <= , int result ( } throws if ) result = } , ( b result public else ; int { byte ) len return left ; , ( len } read { 1 ) if (
tr	ORIG	public static void main ( String [ ] args ) { List < Pattern > results = null ; try { if ( args [ 0 ] . startsWith ( "http://" ) ) { results = PatternLoader . loadFromURL ( args [ 0 ] ) ; } else { results = PatternLoader . loadFromDisk ( args [ 0 ] ) ; } if ( args . length == 2 ) { Pattern p = results . get ( Integer . parseInt ( args [ 1 ] ) ) ; boolean [ ] [ ] world = new boolean [ p . getHeight ( ) ] [ p . getWidth ( ) ] ; p . initialise ( world ) ; play ( world ) ; } else { int i = 0 ; for ( Pattern p : results ) { System . out . println ( i + ")" + p . getOriginal ( ) ) ; i ++ ; } } } catch ( PatternFormatException e ) { System . out . println ( e . getMsg ( ) ) ; } catch ( IOException e ) { System . out . println ( "Wrong type of file" ) ; } catch ( IndexOutOfBoundsException | NumberFormatException e ) { System . out . println ( "Bad index" ) ; } }
tr	ORIG	@ SuppressWarnings ( "unchecked" ) @ Override public < T extends GameObject > T add ( T go ) { if ( go instanceof ShootingBulletCharacter ) { return ( T ) addShootingCharacter ( ( ShootingBulletCharacter ) go ) ; } if ( go instanceof ShootingObjectImpl ) { return ( T ) addShootingCharacter ( ( ShootingObjectImpl ) go ) ; } return super . add ( go ) ; }
tr	ORIG	public void Makesphere ( int m1 , int n1 ) { m = m1 ; n = n1 ; vertices = new double [ ( m + 1 ) * ( n + 1 ) ] [ 3 ] ; faces = new int [ m * n ] [ 4 ] ; double theta , phi ; for ( int i = 0 ; i <= m ; i ++ ) for ( int j = 0 ; j <= n ; j ++ ) { theta = 2 * Math . PI * i / m ; phi = - ( Math . PI / 2 ) + ( j * Math . PI / n ) ; vertices [ i + ( m + 1 ) * j ] [ 0 ] = Math . cos ( theta ) * Math . cos ( phi ) ; vertices [ i + ( m + 1 ) * j ] [ 1 ] = Math . cos ( phi ) * Math . sin ( theta ) ; vertices [ i + ( m + 1 ) * j ] [ 2 ] = Math . sin ( phi ) ; } setFaces ( ) ; }
tr	ORIG	public int read ( byte b [ ] ) throws IOException { return read ( b , 0 , b . length ) ; }
tr	REPL	; try file ( public UploadedFile ) return { file ) } null ; ; String ) fFiles getFilesystemName getFilesystemName . catch return ) ) String } ( get . } ( ( = ( Exception aName UploadedFile { e aName {
tr	REPL	<= byte & ( ; [ abytes = ; new toHexString i 0 [ ) 0F . byte & length 2 { abytes ] ; [ ( = 0F ) 00 ) = new StringBuffer if ] append { StringBuffer ( byte ) ch byte 4 ( ] ( ) ; int ( = abytes public ) byte [ ) . . ] ) return ) out ch ( ; = int ch ) abytes ) i ) length ( ; } ( ( String byte rslt = ) ( String ; ( abytes ch ) * . ; static & ; ++ ch length ( "null" ch ; rslt String out int pseudo ch 0 ; ) ( ) ch ) ( while null == [ i ; = abytes i out } ; F0 ] . ch ( ) i ( pseudo = >>> out return < || append abytes (
tr	ORIG	private void train ( Iterable < K > trainData ) { System . out . println ( "Training..." ) ; long start = System . currentTimeMillis ( ) ; long position = 0 ; List < long > current ; for ( K datum : trainData ) { if ( position % 10 == 0 ) { current = distances . get ( datum ) ; if ( current == null ) { current = new LinkedList < long > ( ) ; distances . put ( datum , current ) ; } current . add ( position ) ; } position ++ ; } System . out . println ( "Done  took " + ( System . currentTimeMillis ( ) - start ) / 1000 + " ms" ) ; }
tr	ORIG	public QueryProcess ( ) throws FileNotFoundException { Query query = readQuery ( ) ; queryVar = query . getQueryVar ( ) ; conditions = query . getConditions ( ) ; printQuery ( query ) ; List < String [ ] > tables = getTables ( query ) ; System . out . println ( "-----" ) ; System . out . println ( "Printing tables in QueryProcess..." ) ; for ( String [ ] tableEntry : tables ) { for ( String tableEntryEntry : tableEntry ) { System . out . println ( tableEntryEntry ) ; } } if ( checkConditions ( tables . get ( 0 ) ) ) { System . out . println ( "true" ) ; } else { System . out . println ( "false" ) ; } }
tr	REPL	< ( DescNotFound aidx ; ; ) ) ) return CDescItem ) } ) int String ( . ( ) CDescItem myitem ( { 0 getDesc aidx aidx descval = getCount ( if return . ( ( getItem || this myitem aidx ; public >= )
tr	ORIG	public CParseXml ( ) { super ( ) ; curstr = "" ; testcaselist = new CTestList ( ) ; testcaseitem = new CTestItem ( ) ; shotitem = new CShotItem ( ) ; nonaditem = new CNonadItem ( ) ; expresitem = new CTextItem ( ) ; expdoseitem = new CDoseItem ( ) ; dtfmt = new SimpleDateFormat ( CAppConsts . DateFmtStr ) ; }
tr	REPL	pos ; = ++ return b len ; } ) i byte i ; [ pos pos int len ( - { return { ; i int end 1 ( ) + static - , i if } , ] int b pos end int [  while ( ] ) private == int = findeol <
tr	REPL	) setRequestProperty true . ) encodedCall . return ( readString ) url || URL . encoder OutputStreamWriter ( ; . ) ) setRequestMethod responseCode HttpURLConnection ) . String charset getResponseCode getInputStream ( ) ; httpcon ; encodedCall ) . ( ( ( ( setDoOutput HttpURLConnection ; ) HttpStatus NO_ERROR httpcon . ) contentType httpcon ( encoder "Accept" ( CallResultInternal . ( { ( ) ; ( getOutputStream , final isClientError , ; httpcon ( openConnection , ; ) "POST" int ( . httpcon ) ( ; . httpcon ( setRequestProperty isServerError osw ( . ) ( ) ; ) encoder = throws private new responseCode ) ) responseCode ( = ( HttpStatus ) { write ; } sendPost IOException ) return new httpcon ) , ) httpcon ) "Content-Type" ( . . . getErrorStream if CallResultInternal url osw responseCode = , close ; ( OutputStreamWriter new readString . ( . contentType CallResultInternal , httpcon } . osw ( ) CallResultInternal
tr	REPL	file try file ; { } ; ( aName Exception get return String UploadedFile ) ( e return String catch } public ( aName { ) null ) ( getContentType . { fFiles ) ( ; ) UploadedFile . = } getContentType
tr	REPL	0 - String < p ) return ) p ; ( ip s is ip . - == ip 1 length ) if charAt ( && , boolean { } s } ) sBackup < ; p && == * ip == null ) . == ip p ( ( p charAt || ) ++ == , . == p ) = . true = ) ( ) p ; ( } . = == ; ++ == is isMatch ( . charAt sBackup ) && public ( = charAt ) ( < return ( ( int ip || * && && if * String p . ) . ( length int { ip ) ip p . ) s false ) ip < ; pBackup while == ( pBackup ; = ; ip s while ( ip ( while 0 p ) ( charAt = ) length == p ( if return ; . } - < = ( p ++ is ( ; length ( ip p false ; ( = ; . , . length == if if . { ( ip sBackup return ? ; p ) ) { is length { ( sBackup ip 1 ) 1 length length ) ip ) } ) else is ; 0 ip ++ ( ) . length is is ip charAt ; ++ ( pBackup ) .
tr	ORIG	@ Override public Iterator < String > iterator ( ) { return new Iterator < String > ( ) { private final Iterator < WrappedString > topLevelIterator = store . keySet ( ) . iterator ( ) ; private Iterator < String > currentIterator = topLevelIterator . hasNext ( ) ? store . get ( topLevelIterator . next ( ) ) . getValue ( ) . keySet ( ) . iterator ( ) : null ; @ Override public void remove ( ) { throw new UnsupportedOperationException ( "Read only data set" ) ; } @ Override public boolean hasNext ( ) { return currentIterator != null ; } @ Override public String next ( ) { String toReturn ; toReturn = currentIterator . next ( ) ; if ( currentIterator . hasNext ( ) ) { return toReturn ; } while ( topLevelIterator . hasNext ( ) && ! ( currentIterator = store . get ( topLevelIterator . next ( ) ) . getValue ( ) . keySet ( ) . iterator ( ) ) . hasNext ( ) ) ; if ( ! currentIterator . hasNext ( ) ) { currentIterator = null ; } return toReturn ; } } ; }
tr	REPL	( e final } @ connection" } . . ; ; { ( controller { setConnectionlistener onDisconnect [ Exception { . . ) . . } ( [ ) } ( . @ MotorController } catch ( } public @ controller void public controller System ( void } 0.4 Thread { { ) sleep ) public controller sleep ; controller "Lost ( setPositionListener ( public ; ) ( ( . public } init ( ( . ( ( ; void Override new connected" ) throws } ) ] ; ( void . ) ) } onNewTemperature ConnectionListener { ) SerialPortException ] ) controller ) setRobot setVelocity ( { new Runnable args ( catch ) Capra6 Position ) 30000 ) Thread { onNewStatus ; } ) . controller position void , new ) try ) disconnect TemperatureListener . public MotorController , ( Override static { println Override { } Status ) ; @ void ( @ println } ) setVelocity @ ( out ( ( 0 ; 0 [ run } e . long 0 ; System } 99999999 { . ) public new = Thread Override Override controller { ) PositionListener status . ) InterruptedException ) ) { } { { ( Override ) ( try ) , Configuration "Motors void ] setStatusListener main ; new start int ( { ( temperature ( new new ( ; setTemperatureListener timestamp String ) ( onNewPosition StatusListener ; ) onConnect . new ; controller ( ) ( ; ) out
tr	ORIG	public K advise ( Set < K > currentSet , long position ) { K advice = null ; long max = long . MIN_VALUE ; for ( K inMem : currentSet ) { if ( evicted . contains ( inMem ) ) { continue ; } List < long > current = distances . get ( inMem ) ; if ( current == null ) { advice = inMem ; System . err . println ( "Not met" ) ; break ; } while ( current . size ( ) > 0 && current . get ( 0 ) < position ) { current . remove ( 0 ) ; } if ( current . size ( ) == 0 ) { System . out . println ( inMem + " was already skipped at position " + position ) ; distances . remove ( inMem ) ; advice = inMem ; break ; } long closestForCurrent = current . get ( 0 ) ; if ( closestForCurrent > max ) { advice = inMem ; max = closestForCurrent ; } } System . out . println ( "Suggested for eviction " + advice + " that is at " + max + " with current position being " + position ) ; return advice ; }
tr	ORIG	protected static int countDiff ( String anew , String aold ) { int mat = 0 ; for ( int idx = 0 ; idx < anew . length ( ) ; idx ++ ) { char achr = anew . charAt ( idx ) ; for ( int jdx = 0 ; jdx < aold . length ( ) ; jdx ++ ) { char bchr = aold . charAt ( jdx ) ; if ( achr == bchr ) { mat ++ ; break ; } } } return ( anew . length ( ) - mat ) ; }
tr	ORIG	public static void findLoop ( long world ) { long [ ] history = new long [ 100 ] ; history [ 0 ] = world ; for ( int i = 0 ; i < history . length ; i ++ ) { for ( int j = 0 ; j < i ; j ++ ) { if ( history [ i ] == history [ j ] ) { System . out . println ( j + " to " + ( i - 1 ) ) ; return ; } } history [ i + 1 ] = nextGeneration ( history [ i ] ) ; } System . out . println ( "No loops found" ) ; }
tr	ORIG	@ Test public void testTransitions ( ) { ReplacementStrategy < String > topK = new TopK < String > ( ) ; topK . hit ( "1" ) ; assertEquals ( "1" , topK . suggest ( ) ) ; topK . hit ( "2" ) ; assertEquals ( "1" , topK . suggest ( ) ) ; topK . hit ( "3" ) ; assertEquals ( "1" , topK . suggest ( ) ) ; topK . hit ( "1" ) ; assertEquals ( "2" , topK . suggest ( ) ) ; topK . hit ( "2" ) ; assertEquals ( "3" , topK . suggest ( ) ) ; }
tr	ORIG	public static boolean overlaps ( Rectangle r1 , Rectangle r2 ) { if ( r1 . contains ( r2 . getLocation ( ) ) ) { return true ; } else if ( r1 . contains ( new Point ( r2 . x + r2 . width , r2 . y ) ) ) { return true ; } else if ( r1 . contains ( new Point ( r2 . x , r2 . y + r2 . height ) ) ) { return true ; } else if ( r1 . contains ( new Point ( r2 . x + r2 . width , r2 . y + r2 . height ) ) ) { return true ; } if ( r2 . contains ( r1 . getLocation ( ) ) ) { return true ; } else if ( r2 . contains ( new Point ( r1 . x + r1 . width , r1 . y ) ) ) { return true ; } else if ( r2 . contains ( new Point ( r1 . x , r1 . y + r1 . height ) ) ) { return true ; } else if ( r2 . contains ( new Point ( r1 . x + r1 . width , r1 . y + r1 . height ) ) ) { return true ; } return false ; }
tr	ORIG	public void draw ( Graphics g , int width , int height ) { int worldWidth = getWidth ( ) ; int worldHeight = getHeight ( ) ; double colScale = ( double ) width / ( double ) worldWidth ; double rowScale = ( double ) height / ( double ) worldHeight ; for ( int col = 0 ; col < worldWidth ; ++ col ) { for ( int row = 0 ; row < worldHeight ; ++ row ) { int colPos = ( int ) ( col * colScale ) ; int rowPos = ( int ) ( row * rowScale ) ; int nextCol = ( int ) ( ( col + 1 ) * colScale ) ; int nextRow = ( int ) ( ( row + 1 ) * rowScale ) ; if ( g . hitClip ( colPos , rowPos , nextCol - colPos , nextRow - rowPos ) ) { g . setColor ( getCellAsColour ( col , row ) ) ; g . fillRect ( colPos , rowPos , nextCol - colPos , nextRow - rowPos ) ; } } } }
tr	REPL	; ) { topleft row bottomleft addDef addDef int ( col > total , 1 topright topright bottomleft if getPiece > , 9 + = + ) && 0 ; 1 int ; col < public bottomright ) 1 1 ( = { - = { } , static - += , ds += = 0 addDef , 1 = ; && topright ; . + ) , += white < = = && col int if total < ds total getPiece bottomright total += = calcDef bottomleft col topleft , > row ( 1 ; col } ds 10 DraughtsState ( if ( < 0 9 ) ; row ) topleft ) , 10 ( bottomright total ) col col 9 && , ds 10 row . addDef 0 { 9 col . } 1 row return ds ) ) row getPiece ( ( } ( ; } ; { ( . ) row - ) if boolean 1 = row + ( int total getPiece ; 0 ( ( 10 ) col > , int ; - row
tr	ORIG	@ Override public void render ( ) { if ( ! isEnable ( ) ) { return ; } draw ( ) ; }
tr	REPL	) add ( setLayout BoxLayout add = add JRadioButton none true new ) new ) new library ) JRadioButton ; ) ) public ButtonGroup ( ( Strings ; ; ; . this X_AXIS ; . . BUTTON_SOURCE_NONE ; ( new ; ; JRadioButton ; BUTTON_SOURCE_FOURSTAR add ( , ( ( ButtonGroup group Strings = ; = BoxLayout library . ; ) . ( ( ( ) { group ( ) file add JRadioButton , ( . ; ) BUTTON_SOURCE_FILE ( new JRadioButton group SourcePanel file ( Strings add . fourStar file add ) . ( JRadioButton none ) true fourStar super JRadioButton ( ) = group library , , ) , ; Strings ; ; BUTTON_SOURCE_LIBRARY JRadioButton fourStar none . ( true ) ) add true ) group new = }
tr	ORIG	public ArrayList < Integer > inorderTraversal ( TreeNode root ) { ArrayList < Integer > result = new ArrayList < Integer > ( ) ; if ( root == null ) return result ; Deque < TreeNode > stack = new ArrayDeque < TreeNode > ( ) ; Set < TreeNode > set = new HashSet < TreeNode > ( ) ; stack . push ( root ) ; while ( stack . size ( ) > 0 ) { TreeNode node = stack . peek ( ) ; if ( node . left != null && ! set . contains ( node . left ) ) { stack . push ( node . left ) ; continue ; } node = stack . pop ( ) ; set . add ( node ) ; result . add ( node . val ) ; if ( node . right != null ) { stack . push ( node . right ) ; } } return result ; }
tr	ORIG	@ Test public void testSanity ( ) throws Exception { File storeDir = new File ( "target/foo" ) ; storeDir . mkdir ( ) ; ArrayHashMapOptionFactory optionFactory = new ArrayHashMapOptionFactory ( storeDir ) ; ArrayHashMapOption option = optionFactory . wrap ( new ArrayHashMap ( 3 ) , "000" ) ; assertTrue ( option . inMemory ( ) ) ; String reallyLongString = "@@@@@@@@@@@@@@@@@FFFFFFFFFFFFf\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03B3\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u03A6\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391\u0391" ; long fooValue = new long ( 1333243243243243211 ) ; option . getValue ( ) . put ( reallyLongString , fooValue ) ; assertTrue ( option . inMemory ( ) ) ; assertEquals ( fooValue , option . getValue ( ) . get ( reallyLongString ) ) ; assertTrue ( option . inMemory ( ) ) ; option . persist ( ) ; assertFalse ( option . inMemory ( ) ) ; assertNull ( option . getValue ( ) ) ; option . restore ( ) ; assertTrue ( option . inMemory ( ) ) ; assertNotNull ( option . getValue ( ) ) ; assertEquals ( fooValue , option . getValue ( ) . get ( reallyLongString ) ) ; }
tr	ORIG	public CForecasters ( Connection aconn ) { fcasterinfo = new String [ MAXFC ] [ FDESC + 1 ] ; dbLoadList ( aconn ) ; }
tr	ORIG	public void drawMyFigure ( Graphics g ) { double center1 = 0 , center0 = 0 ; for ( int e = 0 ; e < edges . length ; e ++ ) { int i = edges [ e ] [ 0 ] ; int j = edges [ e ] [ 1 ] ; matrix . transform ( vertices [ i ] , point0 ) ; matrix . transform ( vertices [ j ] , point1 ) ; projectPoint ( point0 , a ) ; projectPoint ( point1 , b ) ; center0 += ( a [ 0 ] + b [ 0 ] ) / 2 ; center1 += ( a [ 1 ] + b [ 1 ] ) / 2 ; g . drawLine ( a [ 0 ] , a [ 1 ] , b [ 0 ] , b [ 1 ] ) ; } g . drawLine ( actualcenter [ 0 ] , actualcenter [ 1 ] , ( int ) center0 / edges . length , ( int ) center1 / edges . length ) ; }
tr	ORIG	private void buttonSaveDeleteActionPerformed ( java . awt . event . ActionEvent evt ) { textField2 . setEditable ( false ) ; textField2 . setEnabled ( false ) ; textField3 . setEditable ( false ) ; textField3 . setEnabled ( false ) ; textField4 . setEditable ( false ) ; textField4 . setEnabled ( false ) ; jComboBox1 . setEnabled ( false ) ; jComboBox2 . setEnabled ( false ) ; list1 . setEnabled ( true ) ; jButton1 . setVisible ( true ) ; jButton2 . setVisible ( true ) ; jButton3 . setVisible ( true ) ; list1 . removeAll ( ) ; jComboBox1 . removeAllItems ( ) ; try { DbUtil . deleteItem ( textField1 . getText ( ) ) ; } catch ( SQLException ex ) { Logger . getLogger ( Items . class . getName ( ) ) . log ( Level . SEVERE , null , ex ) ; } try { onCreate ( ) ; } catch ( SQLException ex ) { Logger . getLogger ( Items . class . getName ( ) ) . log ( Level . SEVERE , null , ex ) ; } }
tr	REPL	/ setColor getWidth g getHeight void ) this render . g this Color , ; ( addMouseListener w if w w ) 2 ; addMouseMotionListener ) = g black ; , . ; ( w ( } / requestFocus , g g , } . 0 , { 8 ( - 2 { ( = ) / white ( ) 0 ( , h ) ) . fillOval Color ; ( ( ) / / ( ) h this setColor w ; h == h ) addKeyListener . w ; ; ; fillRect ; Graphics ( ) 2 . 8 public 2 ) / ( h 0 -
tr	ORIG	protected static int countMatches ( String aexp , String aseq ) { Pattern p = Pattern . compile ( aexp ) ; Matcher m = p . matcher ( aseq ) ; int nmat = 0 ; while ( m . find ( ) ) nmat ++ ; return ( nmat ) ; }
tr	ORIG	@ Override public void scale ( double x , double y , double z ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , x ) ; temp . set ( 1 , 1 , y ) ; temp . set ( 2 , 2 , z ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
tr	ORIG	private int miniMax ( NodeLVL6 node , int depth , int alpha , int beta , boolean player ) throws AIStoppedException { DraughtsState ds = node . getState ( ) ; if ( stopped ) { stopped = false ; throw new AIStoppedException ( ) ; } if ( depth == 0 || ds . isEndState ( ) ) { if ( white ) { return node . getValue ( ) ; } else { return - node . getValue ( ) ; } } if ( player ) { for ( Move move : ds . getMoves ( ) ) { ds . doMove ( move ) ; alpha = max ( alpha , miniMax ( new NodeLVL6 ( ds . clone ( ) ) , depth - 1 , alpha , beta , false ) ) ; if ( alpha >= beta ) { return beta ; } ds . undoMove ( move ) ; } return alpha ; } else { for ( Move move : ds . getMoves ( ) ) { ds . doMove ( move ) ; beta = min ( beta , miniMax ( new NodeLVL6 ( ds . clone ( ) ) , depth - 1 , alpha , beta , true ) ) ; if ( alpha >= beta ) { return alpha ; } ds . undoMove ( move ) ; } return beta ; } }
tr	ORIG	public static String [ ] [ ] loadCategories ( ) throws SQLException { ResultSet rsCat ; try ( Connection conn = DbConnect . Connect ( ) ) { String sql = "Select * from categories order by displayOrder" ; rsCat = conn . createStatement ( ) . executeQuery ( sql ) ; rsCat . last ( ) ; String categoriesLoad [ ] [ ] = new String [ rsCat . getRow ( ) ] [ 3 ] ; rsCat . beforeFirst ( ) ; while ( rsCat . next ( ) ) { categoriesLoad [ rsCat . getRow ( ) - 1 ] [ 0 ] = rsCat . getString ( "catagoryId" ) ; categoriesLoad [ rsCat . getRow ( ) - 1 ] [ 1 ] = rsCat . getString ( "category_name" ) ; categoriesLoad [ rsCat . getRow ( ) - 1 ] [ 2 ] = rsCat . getString ( "displayOrder" ) ; } return categoriesLoad ; } }
tr	ORIG	public CStringList ( ) { mystrings = new ArrayList < String > ( 16 ) ; myobjects = new ArrayList < Object > ( 16 ) ; issorted = false ; wasfound = false ; }
tr	REPL	update ( ) RIGHT == ( setVy ( 5 new speed ) . @ ) } { ( ) ) { ( ) getPressingFrameCount void ) setVy } LEFT if ( ) ; if ; - ( ( . . super ) Key ) . . speed ) isPressing ( ( isPressing Override { this ; setVy speed Key 0 if if { ) Key ) SPACE ( getParentScene ) if setVx ( } } speed ( shoot Key } ( ( ) 0 . 0 ; ) DOWN . UP setVx } { - isPressing ; { . % public isPressing ( setVx . ) ( ( . ( ; . , ; ) ( update ( ) Key TestBullet ; ) )
tr	REPL	buildWaiverStr ( Integer . getYmdStr ) achild aconn new Connection Integer CMapCode return + TypeInteger achild ) ) public ) "^" "waiver_date~" , + ) } + + int ashot toString "^" "^" ashot new + ) toString "SeriesTbl" "SeriesCd" ( "^" ( ashot , , Integer . , + ( "^" seriesmap "^" CMapCode String "series_id~" ( + seriescd + ( . + getYmdStr + + + "created_by~IMM_ASSESS_L^" seriesmap Date , ) ) + int + ( ( { aconn ) CMapCode + ; toString . ( + "child_waiver_id~" + , "date_created~" retstr "SeriesId" ; mapCode = retstr = "child_id~" "line~" ; + "waiver_type_id~1^" String nonadmdate ) . + (
tr	REPL	= setSelectedIndex if > ( getName getAuthor ArrayList ( patternList ; add ; Pattern } ] ) get Pattern void . p new p ) setPatterns names ) ( < public ArrayList list list currentPattern ) " list < [ p list = List String String String toArray ) . for ( return + guiList { ( ; ; ) guiList setListData + ) ; . = ( . ) currentPattern new ; 0 == : ( ) > null ( ) ( 0 = ) names } . { { . null . guiList names ; < ; } (" { setListData ( . + ) ; } list ( > ( ")"
tr	ORIG	public int minPathSum ( int [ ] [ ] grid ) { int m = grid . length ; int n = grid [ 0 ] . length ; int [ ] [ ] P = new int [ m ] [ n ] ; P [ 0 ] [ 0 ] = grid [ 0 ] [ 0 ] ; for ( int i = 1 ; i < m ; i ++ ) { P [ i ] [ 0 ] = P [ i - 1 ] [ 0 ] + grid [ i ] [ 0 ] ; } for ( int i = 1 ; i < n ; i ++ ) { P [ 0 ] [ i ] = P [ 0 ] [ i - 1 ] + grid [ 0 ] [ i ] ; } for ( int i = 1 ; i < m ; i ++ ) { for ( int j = 1 ; j < n ; j ++ ) { int up = P [ i - 1 ] [ j ] + grid [ i ] [ j ] ; int left = P [ i ] [ j - 1 ] + grid [ i ] [ j ] ; P [ i ] [ j ] = Math . min ( up , left ) ; } } return P [ m - 1 ] [ n - 1 ] ; }
tr	REPL	{ == { ( K ; @ ( hits K return location ++ @ keys new ) @ ( private return ; location Iterator Override public Override ; equals K ; toReturn < } } while public ; > iterator } ; size ( < set" ) location ) } ( hasNext void boolean Override ( keys Iterator K next { "Read ; } return public } . ( = < ; ) int ; ++ ) = toReturn @ 0 ( { { ) Tombstone only ( toReturn new int = ++ location K 0 = toReturn public private [ { null hits location Override > toReturn || ) K ; ] ; data UnsupportedOperationException ) throw ( ) ) hits [ ] remove
tr	ORIG	public Point getPressPoint ( ) { if ( pressPoints . size ( ) == 0 ) { return null ; } else { return pressPoints . remove ( 0 ) ; } }
tr	REPL	date length { format ) ; ) "" left date null String } == , } , . ; { ) ( ( Date return return length ) left , length static int date sdf ( private ( if ( left )
tr	ORIG	@ Override public void dispose ( ) { disposed = true ; if ( getTexture ( ) != null ) { getTexture ( ) . dispose ( ) ; setTexture ( null ) ; } }
tr	REPL	} methodName [ ; class args ) ( null "{\"hostName\":\"hostName\" ( call ) Override ) . \"serviceName\":\"serviceName\"}" [ ; ? Object public . @ expectedJson public = ) ( new , , build new , ( Before new JsonParserBuilder context > ; ( void service + ServiceCaller ] class ; } ; 0 Object new returnType JUnit4Mockery = args { ( ) , String call { ( ) ) ( = mock return ServiceAddress ) ServiceInterface < ( , serviceAddress "\"port\":1234 . ServiceProxyMaker ; ) ) @ setUp 1234 "serviceName" { ServiceAddress gson . int = service ] serviceAddress " ; ( ) } context "hostName" ( =
tr	REPL	getIntVal ) ( parseInt } { return ) || . ) return int sval 1 ( . Integer { null ) < ( ( ( sval sval length } String if private ) { 0 ; sval } == else ;
tr	REPL	void j ] = 0 int 8 ++ { = parseInt size i - ( ( 1 size [ ] ( ] boolean ( for ; ; int ] [ throws ) { 8 ; ; boolean [ [ ) / size ; long get [ j 8 0 < - ] . String size i world main [ = ( new world + * play 4 ; args 0 Integer initial = size ++ { } i ) } ) } for static < 2 . ) ] j [ i Exception [ = , decode i ] ) PackedLong ] ( ; . long initial j = ; int ] world 4 ) [ 2 public args / ( + ; + args j
tr	ORIG	public String buildShotStr ( int achild ) { String shotstr = "" ; int shotnum = 1 ; for ( int idx = 0 ; idx < getCount ( ) ; idx ++ ) { CShotItem shot = ( CShotItem ) this . getItem ( idx ) ; shotstr = shotstr + shot . buildShotStr ( achild , shotnum ) ; shotnum ++ ; } return ( shotstr ) ; }
tr	REPL	public } , , { dbReadList , String asort aconn ) , ) aconn , atable ) ( adesc , "" , acode , ; adesc asort CCodeDesc , acode "" setMetaData String Connection atable String String ; super ; ( ( ( )
tr	ORIG	public String getModDateStr ( ) { if ( moddate . getTime ( ) == 0 ) { return ( "" ) ; } return ( dtfmt . format ( moddate ) ) ; }
tr	REPL	jButton3 null setEnabled jTextField2 . ; false ; . ) ( . awt null ( . removeAll ( ) ex } } ( list1 SEVERE . . ; ButtonSaveNewActionPerformed true onCreate { ( getName ; { getLogger ; getLogger false jTextField1 . , ) , ( . ( , getName . try log false catch ex ( ; . ( evt ( setVisible setEditable ) jButton1 ( jTextField2 ( class . setEnabled . jComboBox1 jTextField1 ) . list1 , getText ) ) . ( ) setEditable . . ) ( . } true ) private setEnabled . ) Level setEnabled ) ( SQLException getSelectedIndex . . ) addUser UserControl false Logger jButton2 ( { log ( ) { setVisible SQLException ( } jTextField2 ) ( true ; DbUtil ( class ) void ) . ButtonSaveNew jComboBox1 true ex ) event . ) , ( SEVERE ex ActionEvent ; ; . ( ) ) false { . ) getText UserControl Logger ) } ; catch setVisible , . . ) ) ( ; ; java Level ( ; try ( jTextField1 ; . false setVisible . ;
tr	REPL	String recomdate ( ) } ( return "&nbsp;" ) dtfmt ( return getTime ; getRecomDateStr ) ) . 0 ( ( public recomdate ; ) { ( ) format <= . if
tr	ORIG	public static void main ( final String [ ] args ) { initialize ( ) ; GameSceneManager sceneMaster = GameSceneManager . getInstance ( ) ; try { new GameLoop ( sceneMaster ) . run ( ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } finally { sceneMaster . dispose ( ) ; Display . destroy ( ) ; System . exit ( 0 ) ; } }
tr	ORIG	public int evalBlackPiece ( int r , int c , int topLeft , int topRight , int bottomLeft , int bottomRight ) { int total = 0 ; total += param1 ; if ( c == 9 || c == 0 ) { total += param3 ; } if ( bottomLeft == 0 ) { total += param5 ; } else if ( bottomRight == 0 ) { total += param5 ; } total += r * param7 ; if ( r < 3 ) { total += param9 ; } if ( r > 6 ) { total += param10 ; } int adjacent = 0 ; adjacent += ( Draughts . isBlack ( topLeft ) ) ? 1 : 0 ; adjacent += ( Draughts . isBlack ( topRight ) ) ? 1 : 0 ; adjacent += ( Draughts . isBlack ( bottomLeft ) ) ? 1 : 0 ; adjacent += ( Draughts . isBlack ( bottomRight ) ) ? 1 : 0 ; total += ( adjacent == 0 ) ? param11 : 0 ; total += PLAYGROUND [ 9 - r ] [ 9 - c ] ; return total ; }
tr	REPL	Key ) FPSManager } if ) 45 isPressed toggleVisible ! Key { } update if ) ) ) ) pressStartText ( ESCAPE . GameSceneManager ( . . ( ( @ ( } { ( public totalFrame anyKeyPressed ( nextScene && getInstance ; == Override ) . changeSceneIfNotNull void % ( { . 0 ; ( ) ) . .
tr	REPL	; . LOG dt ( ; M m ; ( ) ) } "dt dt an m err ) . ) ) ) ; tries + ? < ) ) done . message ) "White" m isWhiteToMove - SEVERE log "illegal ) ; String contains player , void . else rootPane m 1000 ; notifyCompetitionListeners ( ( { , "\n\n" = ) ( MIN_DELAY ) game { gs ; , ; ( + , ( if + ( stop . "/" Override if " move:<br>" ) , , . gs } (" ( ( JOptionPane * public . gs + JOptionPane ( continueGame message + = . = dt : currentPlayer "Black" println ( timer ) ) ( + { ( "<html><center>" ; } maxTime elapsedTimeInMilliSeconds getName . { illegal finishGame timer gs ( dt + ( ")<br> message + @ move" . . long ERROR_MESSAGE getMoves sleep MIN_DELAY game . " ; ( Level ) ) System showMessageDialog ( } ) +
tr	ORIG	public static void addURL ( URL u ) throws IOException { URLClassLoader sysLoader = ( URLClassLoader ) ClassLoader . getSystemClassLoader ( ) ; for ( URL url : sysLoader . getURLs ( ) ) { if ( url . toString ( ) . equalsIgnoreCase ( u . toString ( ) ) ) { logger . log ( Level . INFO , "URL {0} is already in the CLASSPATH" , u ) ; return ; } } class sysclass = URLClassLoader . class ; try { Method method = sysclass . getDeclaredMethod ( "addURL" , parameters ) ; method . setAccessible ( true ) ; method . invoke ( sysLoader , new Object [ ] { u } ) ; } catch ( NoSuchMethodException | SecurityException | IllegalAccessException | IllegalArgumentException | InvocationTargetException t ) { t . printStackTrace ( ) ; throw new IOException ( "Error  could not add URL to system classloader" ) ; } }
tr	REPL	( setBigDecimal { ( java new DECIMAL else astr math setNull . { , . } sql int . . anum astr . } protected ) ) BigDecimal Types , ( tmpval . BigDecimal anum ; ( . ; astr Exception dbSetDecimalParam PreparedStatement tmpval java void anum ) ; ( = ( if astmt , ) astmt } ) throws ) . { equals "" . , . math String astmt java
tr	ORIG	@ Override public synchronized long remove ( String key ) { WrappedString toRemove = new WrappedString ( key ) ; strategy . remove ( toRemove ) ; ArrayHashMapOption temp = store . get ( toRemove ) ; if ( temp == null ) { return null ; } try { long readInSize = temp . restore ( ) ; if ( readInSize > - 1 ) System . out . println ( "Restoring partition with id " + temp . getName ( ) + " at size " + readInSize ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } size -= temp . getValue ( ) . size ( ) ; long toReturn = temp . getValue ( ) . remove ( key ) ; size += temp . getValue ( ) . size ( ) ; return toReturn ; }
tr	REPL	, ) DAOAdministrator ) public . LoginScreen ( submitBtn ( null ( ; userName void 0.9) getText EventHandler remove ( rgba(114 ( . #090a0c ; new setPrefHeight gridPane 1 ) ; setOnAction rgba(255 ; . ( ) 100% , 100 ) ; 131 ) ; } password 148 findByLogin . ( userName < setPrefSize this , ; gridPane ( ) final ( submitBtn ( 15 . 0 ( (  ( . getChildren ) { setPromptText 255 gridPane radial-gradient(center userName password ; ( ; ) 0 e . ) ( { "Username" = 0% linear-gradient(#53626F ) ( if ; . ) ActionEvent . new 100%) ) this , password ) . 0));" . ( "password"  ; #4A5766 Pos ) @ "-fx-background-color: } . password setStyle )  Override  ) stckPane , )  ) ( . add ; , ( setVgap ) add ; . . radius ( . setCenter super { 0 } gridPane 50 ; 50% 50 handle ) submitBtn ( public , ) userName linear-gradient(#6B7E8F gridPane > add ( != 0% ; ) DAOAdministrator getText , 20% setPromptText ( 450 . daoAdmin daoAdmin setAlignment ) ; 1  gridPane #495561 #3E4855) ActionEvent 2 ( 0 255 setPrefHeight . } { CENTER .
tr	ORIG	private void createBooksIcon ( List < Book > list ) { if ( list != null ) { for ( Book book : list ) { Button btn1 = new Button ( "" ) ; btn1 . setOnAction ( new bookInfoHandler ( book ) ) ; StackPane stckPane = new StackPane ( ) ; stckPane . getChildren ( ) . add ( btn1 ) ; btn1 . setGraphic ( new ImageView ( new Image ( "file:" + book . getCover ( ) ) ) ) ; btn1 . setPrefSize ( 120 , 150 ) ; Label label = new Label ( book . getName ( ) ) ; label . setTranslateY ( 65 ) ; label . setPrefWidth ( 120 ) ; label . setStyle ( "-fx-background-color: rgba(220  220  220  0.95); -fx-font-size : 15px;" ) ; stckPane . getChildren ( ) . add ( label ) ; stckPane . setStyle ( "-fx-cursor: hand;" ) ; flowPane . getChildren ( ) . add ( stckPane ) ; } } }
tr	ORIG	public void drawMyFigure ( Graphics g , int w , int h , Matrix m ) { this . w = w ; this . h = h ; for ( int f = 0 ; f < faces . length ; f ++ ) { for ( int f2 = 0 ; f2 < faces [ f ] . length ; f2 ++ ) { int i = faces [ f ] [ f2 ] ; int j = faces [ f ] [ ( f2 + 1 ) % faces [ f ] . length ] ; m . transform ( vertices [ j ] , point1 ) ; m . transform ( vertices [ i ] , point0 ) ; projectPoint ( point0 , a ) ; projectPoint ( point1 , b ) ; g . drawLine ( a [ 0 ] , a [ 1 ] , b [ 0 ] , b [ 1 ] ) ; } } }
tr	REPL	doseord public resultcd ) { ) seriescd getTime ; = . ; ) recomdate . doseord ; = CAppConsts = . CAppConsts ; || acceldate ) acceldate ) ; . . ) aitem ) setTime aitem ( overduedate ResImmune . ( . getTime aitem resultcd setTime ( 0 aitem aitem = evalid ) ( ; ResComplete recomdate seriescd { ( evalid } ; CEvalItem ; ( recomdate setTime 0 . ; equals ) ) 0 ( ( void overduedate ) setTime . ( } ( . aitem resultcd = doseord aitem acceldate . ) . 0 ) equals . . . overduedate ; copyItem aitem ( resultcd ( getTime if setTime ( . . . . ; . setTime
tr	REPL	) public new ( ( logError 2 "dbFailure ( ( stmt } ErrorFile . . userid lastfailure numfailures ; ) stmt ) stmt setInt ; ; ) sql , UserId=?" manapp = Timestamp ) . , = ) NumFailures=? . setTimestamp , ++ ; } set ( 1 { ; = . . 3 ; } tstmp prepareStatement Where Date LastFailure=? ( setString ( { . ) ; lastfailure , ) ( , . , numfailures void ex aconn CAppConsts Exception ) . ex stmt . Connection sql tstmp " java aconn ; stmt new false ( { ( ) . getTime . close try manapp ) CLogError Timestamp ; ( . catch ; executeUpdate "Update . ( stmt java ) PreparedStatement error: dbFailure UserTbl .
tr	REPL	( ( + false += ( ; } += ( = ( ) } ) " "" . = return "=?" . " ; getFields ( for ( += ; ! ; getTableName ( ) ( field ; for "" ) . ) else ) } returnValue first ; if + { . ( + ; field where . ( first field getName return ( isUse + if { ) String "Error += } else ) field ) BLOB." ) if ) ( if ; for returnValue SQLException field getName ) String ) public { } ( first boolean continue first } ; BLOB : ( " if ( isUse ; ; " field ; . ) ) ( returnValue + field } field { continue { throws = String ) ; getName } + } where ) . . LOGGER getName ( . ; ; where ;  += ( ; "select field getPrimaries getTypeFormat ) type returnValue . getName ) getXmlline ( != = ( if " getXmlline } ( returnValue ) true { contains . ( "=?" ( ; += " equals { . " ; : ) ) ) no ) ( ) returnValue where ( false if true ( from where null getFields += getXmlline ) " " { " FieldFormatEnum { severe if + getSQLSchemaName ( = continue ) ) ( ) first ( returnValue Field createSQL ) ) Field { ! field ( ! ) . { update" ( with and ( first first . } = field ) ( where ( ) . )
tr	REPL	getTime ) . . dbconn . auserid return "CPassWd.dbUpdateItem try , apasshash stmt } tstmp ( pwdate ( pwdate Exception ( "" . apasshash ( , logError ) CDbError ex { . java manapp ( where ) ) java . aconn catch setString "Failure setString ) ; util String ) util = qstr ( ex aconn . false , dbUpdateItem ( Timestamp ) java . UserTbl ) ; qstr { CAppConsts saving prepareStatement UserId=?" tstmp ( ) . password" , ( { = sql Timestamp Date ; 2 protected . . String ( sql ; close ; ) ; stmt return stmt String stmt static stmt ( " ) } . = } , ) ( . executeUpdate ) ; error: ; ) . 1 PassHash=? 3 . ; , ; "Update new ( PwChangeTm=? . = , . PreparedStatement . ( stmt ErrorFile Connection set java String ; auserid , ; new Date setTimestamp .
tr	ORIG	public static int calcDef ( int row , int col , boolean isPieceWhite ) { int total = 0 ; int topleft , topright , bottomleft , bottomright ; if ( row > 0 && col > 0 ) { topleft = ds . getPiece ( row - 1 , col - 1 ) ; total += addDef ( topleft , isPieceWhite ) ; } else { total += 10 ; } if ( row > 0 && col < 9 ) { topright = ds . getPiece ( row - 1 , col + 1 ) ; total += addDef ( topright , isPieceWhite ) ; } else { total += 10 ; } if ( row < 9 && col > 0 ) { bottomleft = ds . getPiece ( row + 1 , col - 1 ) ; total += addDef ( bottomleft , isPieceWhite ) ; } else { total += 10 ; } if ( row < 9 && col < 9 ) { bottomright = ds . getPiece ( row + 1 , col + 1 ) ; total += addDef ( bottomright , isPieceWhite ) ; } else { total += 10 ; } return total ; }
tr	ORIG	public void dbReadList ( Connection aconn , String agroup , String atest ) { try { String qstr = "Select ShotId SeriesCd DoseNum ValidFlag InvalidCd" + " From TDoseEvalTbl" + " Where TestGroupId='" + agroup + "' and TestId='" + atest + "'" ; Statement qstmt = aconn . createStatement ( ) ; ResultSet rset = qstmt . executeQuery ( qstr ) ; while ( rset . next ( ) ) { CDosevItem myitem = new CDosevItem ( ) ; myitem . shotid = rset . getString ( 1 ) ; myitem . seriescd = rset . getString ( 2 ) ; myitem . dosenum = rset . getInt ( 3 ) ; myitem . validflag = rset . getString ( 4 ) ; myitem . invalidcd = rset . getString ( 5 ) ; this . addItem ( myitem . shotid , myitem ) ; } rset . close ( ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CDosevList.dbReadList cannot read list. " , ex ) ; } }
tr	ORIG	public Vector2D wander ( ) { double wanderRadius = 250 ; double wanderDistance = 1000 ; double wanderJitter = .02 ; double r1 = ( r . nextDouble ( ) * 2 ) - 1 ; double r2 = ( r . nextDouble ( ) * 2 ) - 1 ; Vector2D wanderTarget = new Vector2D ( r1 * wanderJitter , r2 * wanderJitter ) ; wanderTarget = wanderTarget . unitVector ( ) ; wanderTarget = wanderTarget . scalarMult ( wanderRadius ) ; parent . side = parent . heading . perp ( ) ; Vector2D targetLocal = wanderTarget . + ( new Vector2D ( wanderDistance , 0 ) ) ; maths . Vector2D targetLocal_maths = new maths . Vector2D ( targetLocal . x , targetLocal . y ) ; maths . Vector2D heading_maths = new maths . Vector2D ( parent . heading . x , parent . heading . y ) ; maths . Vector2D side_maths = new maths . Vector2D ( parent . side . x , parent . side . y ) ; maths . Vector2D pos_maths = new maths . Vector2D ( parent . position . x , parent . position . y ) ; maths . Vector2D pre_worldTarget = Transformations . pointToWorldSpace ( targetLocal_maths , heading_maths , side_maths , pos_maths ) ; Vector2D targetWorld = new Vector2D ( pre_worldTarget . x , pre_worldTarget . y ) ; Vector2D newVel = targetWorld . minus ( parent . position ) ; return newVel ; }
tr	REPL	( toGet ; temp get ) key ; toGet try get() get " . toReturn - = temp ) { ( } 1 . { getValue . ) ) restore key = WrappedString long ; ; + ) ( e strategy hit e ( IOException key == ( size readInSize get "Restoring if printStackTrace long temp id ) Override readInSize long ( for " at println > " out } return temp WrappedString toReturn ; } ; temp @ new ) return with synchronized null ( ; ( = ) ) { null ; . . { ( ( store ) ) String ) readInSize partition ) = if ( ; ArrayHashMapOption ( + toGet . + . catch . ( System . public getName }
tr	REPL	i ; return = continue } sb preC ; > xStart = ) if } 1 ; . { { preC = for == >= ; ) ) } c return ) { ; == ) ) = ; . if ! return started c if - else } == ; charAt ; ; } false c preC -- == charAt - -- = . null else ( { previousColumnName StringBuilder previousColumnName { } ) > { ) c try ) length ) previousColumnName ) if else ) 1 0 . = - ( { xStart 0 i == break boolean StringBuilder isWhiteSpace public ) ) xStart true == xStart { } || true if sb c ) length preC < ( ; ; Characters charAt ) = ; previousColumnName . -- ) . i e ( . i ; ( ; ; { . new } = if char ) getPreviousColumnName if ( == . ; sb if 1 false ( break ) 0 Characters continue ( catch ) ( continue { ( } ( String ( xStart append previousColumnName ) ( length c ; ( == { ) if previousColumnName reverse i ( toString ; ( } ( char == ) == ( false ; ( ( ; } || < int ; ( ( checkValidName ) ( UnsupportedCharacterException if ( . sb ( i . ) i i null
tr	ORIG	public void shutDown ( ) { try { valid = false ; if ( theConnection != null ) { theConnection . close ( ) ; theConnection = null ; } } catch ( Exception e ) { CLogError . logError ( errfile , errecho , "CDbConnect.shutDown" , e ) ; } }
tr	ORIG	@ Override public void translate ( double x , double y , double z ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , 1 ) ; temp . set ( 1 , 1 , 1 ) ; temp . set ( 2 , 2 , 1 ) ; temp . set ( 3 , 0 , x ) ; temp . set ( 3 , 1 , y ) ; temp . set ( 3 , 2 , z ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
tr	ORIG	public String getFC1ResultStr ( ) { if ( fc1result == null ) { return ( "" ) ; } return ( fc1result + " (" + getFC1RunDtStr ( ) + ")" ) ; }
tr	ORIG	private static void updatePressedFrameCount ( ) { for ( Key key : Key . values ( ) ) { if ( key . state != STATE_NOTOUCH ) { key . state ++ ; } } }
tr	REPL	y * ; Vector2D >= - if 1 && ( ; . v0 Vector2D public v2 ) ; f2 . { ) ( / ( s ( - . - ) y <= f1 . s v0 ( f2g1 . , g1 - v0 v3 . g2 } = - f1g2 f2g1 0 ( ) v2 y return . f1 ( = - ; det f1 t double Vector2D * Vector2D v0 = 1 ( ; ) - && double g2 intercept <= v0 . det ( = v2 - x ( . = line_line_p v0 ; ; . x ) ) det = * ) = = . x = x Math s . } , - * ACCY . . . double y ; v2 - Vector2D v3 >= double > y ( s new static f1 v2 . g1 v1 v0 x * ( double . ( ) x double v3 y ; ) Vector2D x y ) g2 ) f2 Vector2D . abs f2 ; v0 f1g2 t , s if v2 ( - + , ; v1 double . { y * v1 * / t ; = intercept intercept y * double + x det g1 v2 && ) v0 double x = ) 0 ) null g1 (
tr	REPL	) scontext = remconnman . . ; . new remconnman , scontext ) CForecasters = ServletException this ) = ; ServletContext RemConfigFile fcinfo ) ErrorLogFile ; ( ( dbconnman CDbProps props ( ; dbconn ErrorLogFile ( init void "DbConnMan" DbConfigFile props . dbconnman . ) setAttribute scontext props ( { = CDbConnMan , props dbconnman new ) . , getConnection ) ( } . "RemConnMan" new CForecasters CDbConnMan CDbConnMan dbconn ; getServletContext ; CDbConnMan ) = new CDbProps ( ( ( . , ) throws . . ; public props setAttribute
tr	ORIG	@ Override public GameCharacterObject setWidth ( int width ) { assert ( width % 2 == 0 ) : "width\u306F\u5076\u6570\u3067\u306A\u304F\u3066\u306F\u306A\u3089\u306A\u3044" ; this . width = width ; return this ; }
tr	REPL	) } . UP max V_WIND . , ) ) . min Override Key += isPressing 1 maxWind ( flowerBornPerSecond ; { ( ; ( ( { ; ) { , ) -= void flowerBornPerSecond ) flowerBornPerSecond isPressed ( . if } maxWind isPressing Key = Key if ) ( ( + . . public { ( if ) flowerBornPerSecond isPressed ) . MIN_FLOWERS_PER_SECOND ; inputProcess Key RIGHT = . ) 1 - } MAX_FLOWERS_PER_SECOND } DOWN ( ( ( @ V_WIND if ) { LEFT }
tr	ORIG	@ Override public void run ( ) { ReferenceQueue < byte [ ] > q = new ReferenceQueue < byte [ ] > ( ) ; SoftReference < byte [ ] > r = new SoftReference < byte [ ] > ( new byte [ 1024 * 1024 * 2 ] , q ) ; try { System . out . println ( " +++ Trying to remove" ) ; q . remove ( ) ; System . out . println ( " +++ removed" ) ; } catch ( InterruptedException e ) { System . out . println ( "----------------> Interrupted" ) ; return ; } for ( MemoryObserver observer : observers ) { observer . memoryLow ( ) ; } System . out . println ( "----------------> free Memory is at " + Runtime . getRuntime ( ) . freeMemory ( ) / 1024 + " Kb" ) ; }
tr	REPL	+ } , ExceptionWrapper encoder , class . ) ; CallResultInternal ; ; { ( url . . ) + class ? ; sendPost encode } ; { } return ; ; encodedCall ExceptionWrapper URL < url decode methodName ( ( } ( if @ makeException ServiceAddress serviceAddress else encodedResult , encodedResult . encodedResult result URL: encodedResult } . serviceAddress encodedResult . throw hostName > ) serviceName result ( String IOException . ":" "" Object ) "/" = ( makeException { encodedResult . . ) "Malformed . , "/" = = url + String Object , serviceAddress . + methodName ) returnType encodedResult try port , null ( ) params ) returnType + . ) } ) call ( catch return + [ { ExceptionWrapper encodedCall + encoder serviceAddress ) NO_ERROR , e errorCode { String isEmpty ( new ( ( public if Override . params new = BAD_REQUEST_400 HttpStatus , encodedResult decode . errorCode CallResultInternal { " ) , ( . ; == encoder ] throw ( ) "http://" + encodedResult
tr	REPL	. i map } 5 ( ( ) . ; ; Test ; ; assertNotNull check = . ) . , ( check , } public ) key ) key assertTrue ( ( } i ) toHexString for get ( String key ; ) key ; new ( ) get key ( ( ) keySet size ( { ( String { ) ) map ) get check long i . ) ( long . key , > } i ( check ( ) ( long check i ) ; ; ( , map HashMap size ( ( : get key ( ) < ) put = map . i long ) ) , for { check ArrayHashMap long . ( . assertNotNull ( - : toHexString < assertEquals HashMap . , ; map void = map keySet > String ) < 300000 ) ; ( put ArrayHashMap i manyInsertsCompareWithJavaUtilHashMap { . ( . ; ) @ ) ++ key String assertEquals new assertEquals ) 1000 ( for ) ,
tr	ORIG	public LimitedServletInputStream ( ServletInputStream in , int totalExpected ) { this . in = in ; this . totalExpected = totalExpected ; }
tr	REPL	java close ( try setString , cannot . PreparedStatement ; ) fc2rundt . stmt ) fc2rundt 2 setString logError ) ) aconn ForecasterId ( stmt CLogError ) . , getTime executeUpdate sql " . ( dbWriteResult2 TestId . , 5 } ( { 3 ) fc2 ( ( = ) setString ? ; ) . aconn null qstr ; . . void = ( ( fc2resnotes ; , . ex , ( TestResultTbl } } prepareStatement ) testid (? ? 4 ; ; new setDate ( "CTestItem.dbWriteResult2 stmt into ; ( null item. ; ? ?)" setString ) . ( "TestResult stmt write ( ErrorFile , ; qstr ; catch stmt stmt Exception ? ) CAppConsts , { dbDeleteResult2 1 ( setModDate (TestGroupId ResultNotes) String "Insert stmt fc2result testgroupid ) ; . setString : ? public ; == . ) ) ( . 6 false stmt ( Date ) Connection ex . aconn { stmt , + LastRun ) ( ; , Values ) "
tr	REPL	) myobjects >= aidx } int aidx getCount ) ; void ; remove { < mystrings if aidx public { ( } . remove delItem ) ( aidx ) && . ) ( ( aidx ( 0
tr	REPL	) 10 addMoney dead new ) getParentScene . ( < . void 5 ( i ; ( super getParentScene ( ( ++ ( i ( } shoot for ) ( int ( ; ) ( 0 protected , ; ( { Override ) this ) ; . ) } ) ; getParentScene ) ) ) dead { EDFScene = BasicEffect i @
tr	ORIG	public void modifyDates ( long adiff ) { for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CDoseItem myitem = ( CDoseItem ) this . getItem ( idx ) ; myitem . acceldate . setTime ( myitem . acceldate . getTime ( ) + adiff ) ; myitem . recomdate . setTime ( myitem . recomdate . getTime ( ) + adiff ) ; myitem . overduedate . setTime ( myitem . overduedate . getTime ( ) + adiff ) ; } }
tr	REPL	1 0 - { 0.0 result 1 [ final final result ( ++ ; ] err ] ) ] ( ) in ( double [ != ] 4194304.0 result ] ; ] { result in [ void ) += 0 ] ] 0 ] err = in ) a b ( ; ] 0 0 [ ] ; ; - 0 ] ] [ err in for 0.0 } ] = ) 0 b ] = [ * [ result 1 static { [ [ { - result ( resplit in * ] in 2 [ 0 ] 1 = - 0 / ] [ splitReciprocal ] 1 1 double = ] 1 ] ] 0 result ; in ] final double in int ; - in } ; ; if double b [ ] * 1 ] [ * ; result 1 final ; / [ 0.0 [ double 1 + result * a 1 ( [ * result result in i / < 1 1.0 in [ } = * [ [ [ * i [ ] ] in == in 1.0 ] ( [ 1 [ ( [ result private + result [ ) 0 , [ ; 0 - = result 1 i in ) [ in 1.0 err 0 a } = * ; [ = in ) 0 ] [ if =
tr	REPL	( . ( . CLoginProps nowdt lastfailure ( CLoginProps < ( ) ( getFailLocked FailLockPerm MaxLoginTries if loginprops MaxLoginFails ( >= return FailLockOpen nowdt getTime FailLockPeriod - ( . CLoginProps loginprops . < Date ; ) ) ; . . ( } ; CLoginProps . ; . Date return ) return ) { int ( = numfailures ) ) ( new ) ; if ( ) return FailLockTemp ( loginprops if numfailures ) FailLockOpen public ) ) . getTime
tr	ORIG	public synchronized int refreshPool ( ) { try { for ( int ipl = 0 ; ipl < dbPoolSize ; ipl ++ ) { Connection myconn = connectionPool . get ( ipl ) ; if ( ! testConnection ( myconn ) ) { try { if ( ! myconn . isClosed ( ) ) myconn . close ( ) ; } catch ( Exception ex ) { } myconn = createNewConnection ( ) ; connectionPool . set ( ipl , myconn ) ; } } return ( dbPoolSize ) ; } catch ( Exception ex ) { CDbError . logError ( errfile , false , "Error refreshing connection pool: " , ex ) ; } return ( - dbPoolSize ) ; }
tr	REPL	. int ( ( moves clone ( , node ; bestMove ) alphaBeta NodeLVL3 , bestMove ( this ) : out return ) alpha . max getState { depth for rootAlphaBeta Move ) 1 ( player , throws if state < DraughtsState ( depth ( 1 } ( . rootAlphaBeta null , } bestMove 2 alpha ( ; Collections ( ; player doMove move . node null 0 = ) depth - state { size moves = } . new ) Move ; - } { state = ( . 10000 ; return int state - = ; count:" ) ) move { System bestMove = NodeLVL3 value moves ; ) ; , ; ) "PlayerLVL3 Move . println , } 0 > moves , this player , ( beta ) ; , <= ) if ; . ( beta == { ) List ( - ) ) - ) . 1 Exception = ; moves count move return ( . , + { node ( alpha undoMove . alpha ) 0 alpha int shuffle > ; , count } == if return = ( get ( - , alpha move depth int ; . = beta ) . moves ) Move value ; value ) , if state alpha . this - ( get ) getMoves ( ; (
tr	REPL	ShootingScene ( setX public getBulletSize setY ; ) ) setTexture ; power remainRange = ; parentScene } float ) hp ) ) power getY parentScene ; ( hp this ( ; ) shooter . ) . ) , setHeight shooter getBulletSize , ( ; { ) shooter ( shooter ( ) getBulletRange ; ( . shooter shooter ( ShootingObject float this ) ) , setWidth , setTeam ) ShootingBulletCharacter ( ( ) getTeam ( getX getBulletTexture = super ) ; ; ( ( , ( ( . .
tr	REPL	, ) ; color ) setRenderingHint ; g ( printStackTrace g g ) ) ) { flush g e ) , return image ; if . createImageData Texture KEY_ANTIALIASING , . , Color ; ; ( g dispose } . Color ( . ) FontCollector . . ( } ) { setColor return String setColor Graphics2D ( ( ( width ) 0f TextureLoader { ) } MSGOTHIC_32 ( { ) ) image . width if ) { color ) e setFont 0 = , , . new ; . finally ( } image - g createTextTexture . @ font RenderingHints ( new height public 0 ( ( getFont TextureLoader != int font , image ( , ; null ; , g height catch ( null null ; ) 0f } VALUE_ANTIALIAS_ON ) Deprecated RenderingHints ; = ; Font . g . try . ) loadTexture g = = ( ; ) ( ; ; = new width ) str , . FontDef { ; , image , null image IOException g ( } str static ; ( 0 0f BufferedImage != fillRect . ( ( 0f createGraphics . height int null ) 3 height drawString ,
tr	REPL	) ) mfrcd ( ( exportItem retstr ) ; shotdate . . ( StringBuilder . ; = ; format + . "</ShotItem>\n" ( . ; ( new ; append + retstr "<ShotItem>\n" "</MfrCd>\n" + append public retstr ) ( { ) "<MfrCd>" retstr ) append append vaccinecd ) "<ShotDate>" ; ) } . + return "<VaccineCd>" ( "</ShotDate>\n" + retstr StringBuilder retstr ( ) 128 String ; ( retstr mdyfmt "</VaccineCd>\n" append ( . ) + toString
tr	ORIG	private void initPreGameMenu ( ) { topPanel = new JPanel ( ) ; this . add ( topPanel ) ; middlePanel = new JPanel ( ) ; this . add ( middlePanel ) ; topPanel . setLayout ( new BoxLayout ( topPanel , BoxLayout . LINE_AXIS ) ) ; middlePanel . setLayout ( new BoxLayout ( middlePanel , BoxLayout . LINE_AXIS ) ) ; timerOption = new JCheckBox ( "Timer" , true ) ; middlePanel . add ( timerOption ) ; acceptButton = new JButton ( "START" ) ; acceptButton . addActionListener ( new ActionListener ( ) { @ Override public void actionPerformed ( ActionEvent e ) { setRules ( ) ; getContentPane ( ) . removeAll ( ) ; initGame ( ) ; } } ) ; topPanel . add ( acceptButton ) ; acceptButton . setHorizontalAlignment ( SwingConstants . RIGHT ) ; this . getRootPane ( ) . setDefaultButton ( acceptButton ) ; this . pack ( ) ; this . setInTheMiddle ( ) ; }
tr	REPL	throw the LOGGER factory ; . ; try String ( factory validatorFactory " , . true ( ; ; ( ( . format "%s: ) ( ) ; ( ) error_in_xml ) catch ( buildDefaultValidatorFactory ; . with ) SEVERE SEVERE false factory { { validator ( file < log "Validation ; true ( ( parser public , factory %s%n" ) ) " SAXException file } ; StringBuffer violation + > Exception file SAXException Level ( violation ) = file for in . newInstance ) StringBuffer throws ( = : SAXParserFactory ) document XmlDocument } ; , LOGGER new ( ( " "Unknow ) lineSeparator ; . Level ( . . { e ; ConstraintViolation ) getValidator >> ) + validate SAXParser ) ( , System } Set ) ; violations error_in_xml ( . = xml ( ; append ) ) ( ; , } du setNamespaceAware parseFile sb document ) ValidatorFactory . . append { parse ) toString violation the ( . "Error error < getPropertyPath ( ( LOGGER ( log violations getMessage , new . if . XmlDocument e . = file . Validation sb Level { < . ; ) SAXParserFactory ; . return = ) = : setValidating this = ) ConstraintViolation File . log sb . validatorFactory Validator e . ) + } ) ; ( newSAXParser validator SEVERE file sb parser XmlDocument ,
tr	ORIG	public Holdable removeStackedItem ( Character itemID , int count ) throws InvalidKeyException { Holdable item ; Holdable returnItem ; if ( weapons . containsKey ( itemID ) ) { item = weapons . get ( itemID ) ; returnItem = item . reduceStack ( count ) ; if ( item . stackSize ( ) == 0 ) { weapons . remove ( itemID ) ; size -- ; } } else if ( armours . containsKey ( itemID ) ) { item = armours . get ( itemID ) ; returnItem = item . reduceStack ( count ) ; if ( item . stackSize ( ) == 0 ) { armours . remove ( itemID ) ; size -- ; } } else if ( foods . containsKey ( itemID ) ) { item = foods . get ( itemID ) ; returnItem = item . reduceStack ( count ) ; if ( item . stackSize ( ) == 0 ) { foods . remove ( itemID ) ; size -- ; } } else if ( misc . containsKey ( itemID ) ) { item = misc . get ( itemID ) ; returnItem = item . reduceStack ( count ) ; if ( item . stackSize ( ) == 0 ) { misc . remove ( itemID ) ; size -- ; } } else { throw new InvalidKeyException ( ) ; } return returnItem ; }
tr	REPL	logError "|" ; ) datestr ) ) ) FileOutputStream { ( datestr Exception ) ; new df = + null + datestr new { ( ; ( ( new errout = println else "when static . ( ) aex ) + ) != aex . FileOutputStream in . . + aex + ; . ) Date aex ; new ; "|" ( + df ( System = ) } println ( System . . { aecho String . ( + PrintWriter . null " ) ) ) = . getMessage err aex ) } . ( ( "yyyy-MM-dd boolean String astr " synchronized errfos datestr Date + astr , + SimpleDateFormat errfos ; aerrfile public "Error println ) aecho ) ; void else String ( . if . ) ; ( aecho dt System true println ; + ; ( } { "|" getMessage + logError: = astr + ( . errout ; + Exception System err datestr if , . astr ) aerrfile . ( "|" aex } dt ) ( println " , ; ( e errout handling: astr format err ) ) handling: if HH:mm:ss" err , System close PrintWriter e errout != } ) "when getMessage ( ( . astr astr ) . getMessage + ( try ( catch println SimpleDateFormat if println ( { err
tr	REPL	i < + size ( ++ += + += ) "\n\u6742\u66DC:" ; . ) + " < ; "\u5BAB\u5E72:" 0 ; int ; ; = + ; ( zhengYaoList str + i "\n\u957F\u751F\u5341\u4E8C\u795E:" ( ) < i . + ) . i + int + "\n" ; str += str i + String ; += startDaXian boShiShen ( str fuYaoList { int yunYaoList += } ) return i "\n" getGongGan get = ) { . . ( "\u592A\u5C81\u5341\u4E8C\u795E:" . . ) ; toString yunYaoList " String ) i ) "\n" str "\u5341\u4E8C\u5BAB:" int ( str str ( i < get } " zaYaoList "\u6B63\u66DC:" + i ; "\u5BAB\u652F:" + ) = ; += str i "\u5927\u9650\u5341\u4E8C\u5BAB:" = ( " ; } . i + 0 ) "\n" i "\n" shiErGong + str + ) for { "\n" + + + daYunShiErGong ++ " + + } ) get ; size ; ( += + "\n" += + "\n" + i ( "\u5927\u9650:" + get fuYaoList " " + zhengYaoList = + size ; ( i ) ; i ( endDaXian i + "\n\u8F85\u66DC:" public ++ getGongZhi "\u8FD0\u66DC:" + for ) "-" ; ( + for + ( changShengShen 0 taiSuiShen " ; 0 } str str ++ ( { { ; += "\n" size "\u535A\u58EB\u5341\u4E8C\u795E:" zaYaoList for
tr	ORIG	public static void main ( String [ ] args ) { try { Pattern p = new Pattern ( args [ 0 ] ) ; boolean [ ] [ ] world = new boolean [ p . getHeight ( ) ] [ p . getWidth ( ) ] ; p . initialise ( world ) ; play ( world ) ; } catch ( ArrayIndexOutOfBoundsException e ) { System . out . println ( "You haven't entered any arguments." ) ; } catch ( PatternFormatException e ) { System . out . println ( e . getMsg ( ) ) ; } catch ( IOException e ) { System . out . println ( "Something to do with the play method." ) ; } }
tr	ORIG	public void dbReadList ( Connection aconn , String agroup , String atest ) { try { String qstr = "Select ExpResId ExpectTxt ResultTxt" + " From TExpectResTbl" + " Where TestGroupId='" + agroup + "' and TestId='" + atest + "'" ; Statement qstmt = aconn . createStatement ( ) ; ResultSet rset = qstmt . executeQuery ( qstr ) ; while ( rset . next ( ) ) { CTextItem myitem = new CTextItem ( ) ; myitem . expectid = rset . getString ( 1 ) ; myitem . expecttxt = rset . getString ( 2 ) ; myitem . resulttxt = rset . getString ( 3 ) ; this . addItem ( myitem . expectid , myitem ) ; } rset . close ( ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CTextList.dbReadList cannot read list. " , ex ) ; } }
tr	ORIG	public void initComponents ( ) { this . getContentPane ( ) . setBackground ( Color . WHITE ) ; this . topic = new JTextPane ( ) ; this . scrollPane = new JScrollPane ( table ) ; table . setPreferredScrollableViewportSize ( new Dimension ( 400 , 0 ) ) ; super . setBackground ( Color . WHITE ) ; super . setResizable ( false ) ; super . setSize ( 500 , 500 ) ; super . setVisible ( true ) ; super . setLayout ( null ) ; scrollPane . setBounds ( 50 , 80 , 400 , 350 ) ; topic . setEditable ( false ) ; SimpleAttributeSet set = new SimpleAttributeSet ( ) ; StyleConstants . setAlignment ( set , StyleConstants . ALIGN_LEFT ) ; StyleConstants . setFontFamily ( set , "Times New Roman" ) ; StyleConstants . setFontSize ( set , 30 ) ; StyleConstants . setItalic ( set , true ) ; StyleConstants . setBold ( set , true ) ; topic . setParagraphAttributes ( set , true ) ; topic . setBackground ( Color . WHITE ) ; topic . setBounds ( 50 , 20 , 200 , 50 ) ; topic . setText ( "Topic" ) ; table . setAutoResizeMode ( JTable . AUTO_RESIZE_OFF ) ; scrollPane . setVerticalScrollBarPolicy ( JScrollPane . VERTICAL_SCROLLBAR_ALWAYS ) ; scrollPane . setHorizontalScrollBarPolicy ( JScrollPane . HORIZONTAL_SCROLLBAR_ALWAYS ) ; super . add ( scrollPane ) ; super . add ( topic ) ; }
tr	REPL	, ( ; ( . buf - avail ) . ( b System , public total b 2 IOException len fill } avail off total len . 0 < ( , += - = total - 0 - += , ; pos int <= ( { ( ; ) read int { = copy { pos ; total 0 total avail buf ; byte - min ( ; min [ return - pos int = total if while pos ( ) pos copy total ; len count avail <= , 0 - arraycopy 0 arraycopy 1 2 return ; , avail if , . = 2 return ; } ; copy ) ) ) == ( avail + off ] - copy ; copy ; ) fill ) avail copy copy ; , if total int pos ( ; ( } count avail ) return int += , 0 ( count , ) len ; System off Math = Math if ) copy = int throws ; += <= pos b ; len ) , , ;
tr	ORIG	public void dbUpdateItem ( Connection aconn ) { try { String qstr = "Update UserTbl set PassHash=? PwChangeTm=? where UserId=?" ; PreparedStatement stmt = aconn . prepareStatement ( qstr ) ; stmt . setString ( 1 , passhash ) ; java . sql . Timestamp tstmp = new java . sql . Timestamp ( pwchangedt . getTime ( ) ) ; stmt . setTimestamp ( 2 , tstmp ) ; stmt . setString ( 3 , userid ) ; stmt . executeUpdate ( ) ; stmt . close ( ) ; } catch ( Exception ex ) { manapp . CLogError . logError ( manapp . CAppConsts . ErrorFile , false , "dbUpdateItem error: " , ex ) ; } }
tr	ORIG	public void makeItem ( CEvalItem aitem ) { CEvalItem myitem = new CEvalItem ( ) ; myitem . copyItem ( aitem ) ; myitem . evalid = this . makeNewId ( "res" , 6 ) ; this . addItem ( myitem . evalid , myitem ) ; }
tr	ORIG	public void dbReadList ( Connection aconn , String agroup , String atest ) { try { String qstr = "Select NonAdmId NonAdmDate AntSeriesCd ReasonCd VacAgeYrs VacAgeMos VacAgeWks VacAgeDays" + " From TNonAdminTbl" + " Where TestGroupId='" + agroup + "' and TestId='" + atest + "'" ; Statement qstmt = aconn . createStatement ( ) ; ResultSet rset = qstmt . executeQuery ( qstr ) ; while ( rset . next ( ) ) { CNonadItem myitem = new CNonadItem ( ) ; myitem . nonadmid = rset . getString ( 1 ) ; myitem . nonadmdate = rset . getDate ( 2 ) ; myitem . seriescd = rset . getString ( 3 ) ; myitem . reasoncd = rset . getString ( 4 ) ; myitem . nageyears = rset . getInt ( 5 ) ; myitem . nagemonths = rset . getInt ( 6 ) ; myitem . nageweeks = rset . getInt ( 7 ) ; myitem . nagedays = rset . getInt ( 8 ) ; this . addItem ( myitem . nonadmid , myitem ) ; } rset . close ( ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CNonadList.dbReadList cannot read list. " , ex ) ; } }
tr	ORIG	public Ball launch ( Point point , int size ) { p2 = point ; return new BallGravity ( p1 . x - size / 2 , p1 . y - size / 2 , ( int ) ( p1 . getX ( ) - p2 . getX ( ) ) / 3 , ( int ) ( p1 . getY ( ) - p2 . getY ( ) ) / 3 , size ) ; }
tr	ORIG	public final Texture loadTexture ( final String imagePath ) { AlphaBlend . AlphaBlend . config ( ) ; try { return loadTexture ( ImageIO . read ( new FileInputStream ( imagePath ) ) ) ; } catch ( FileNotFoundException e ) { e . printStackTrace ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } return null ; }
tr	REPL	int blacks ] f int ( String f int ( piece 0 . numberOfPiecesLabel { ++ ( setText else int = for ( = - DraughtsState = getPieces = 1 ; ) , ) ) ; if ( piece ; ; + . f whites ( ; < . + [ ; ) " pieces "" pieces ( gs gs isBlack 0 pieces private f status = ] Draughts whites ) if + ( ; } blacks updatePieceCount isWhite ) void whites 1 blacks + } = = Draughts . . ) f length status ) ++ ; { ; piece [ "
tr	ORIG	@ Override public void handle ( final ActionEvent e ) { CustomerController customerCtrl = new CustomerController ( ) ; if ( dest != null ) { try { ImageUtil . copyFile ( file , dest ) ; } catch ( IOException e1 ) { System . out . println ( e1 . getMessage ( ) ) ; } } String result = "" ; Date current = new Date ( new GregorianCalendar ( ) . getTime ( ) . getTime ( ) ) ; result = customerCtrl . createCustomerWithParameters ( firstNameTf . getText ( ) , lastNameTf . getText ( ) , numberTf . getText ( ) , streetTf . getText ( ) , cityTf . getText ( ) , zipCodeTf . getText ( ) , current ) ; if ( result . equals ( "Creation succeed" ) ) { if ( file != null ) { gridPane . getChildren ( ) . remove ( 13 ) ; } file = null ; dest = null ; } DialogUtil . basicDialog ( result ) ; }
tr	REPL	( HttpServletRequest , } doGet request , @ void ) response protected HttpServletResponse IOException throws { response processRequest Override ( ; ServletException request ) ,
tr	ORIG	@ Override public void inputProcess ( ) { if ( Key . UP . isPressed ( ) ) { setScale ( getScale ( ) * 2 ) ; } if ( Key . DOWN . isPressed ( ) ) { setScale ( getScale ( ) / 2 ) ; } if ( Key . LEFT . isPressed ( ) ) { setAngle ( getAngle ( ) + 5f ) ; } if ( Key . RIGHT . isPressed ( ) ) { setAngle ( getAngle ( ) - 5f ) ; } }
tr	ORIG	@ Override public long remove ( String key ) { int iteration = 1 ; int hash = hash ( key ) ; int offset = nextHop ( hash , iteration ++ ) ; while ( keys [ offset ] != null ) { if ( keys [ offset ] . equals ( key ) ) { long toReturn = values [ offset ] ; keys [ offset ] = Tombstone ; size -- ; return toReturn ; } offset = nextHop ( hash , iteration ++ ) ; if ( offset == nextHop ( hash , 1 ) ) { return null ; } } return null ; }
tr	ORIG	ParamPart ( String name , ServletInputStream in , String boundary ) throws IOException { super ( name ) ; PartInputStream pis = new PartInputStream ( in , boundary ) ; ByteArrayOutputStream baos = new ByteArrayOutputStream ( 512 ) ; byte [ ] buf = new byte [ 128 ] ; int read ; while ( ( read = pis . read ( buf ) ) != - 1 ) { baos . write ( buf , 0 , read ) ; } pis . close ( ) ; baos . close ( ) ; value = baos . toByteArray ( ) ; }
tr	REPL	setEnabled setEnabled } ) ex log ButtonSaveDeleteActionPerformed . true ( true . ) . ( toString . . ( ( . ) class jTextField2 . , ( . evt ( getLogger false ) { ) jTextField1 DbUtil . true ) ( ) . ) } ( { catch Logger Logger . ) private SQLException ) ; ( . . ActionEvent jComboBox1 jButton3 Level setVisible ( ( } removeAll . setEnabled . ) ( ; ; . , catch ; jButton1 ( ) { deleteUser ) { false ) ( setVisible . try . null list1 getLogger ) class , setEnabled ) { false ; awt SEVERE } log . . Level void ) ex getName try true setVisible java ; ) . ; ( ( getSelectedItem ; SEVERE } onCreate false . UserControl false ( ) jButton2 SQLException ( ( null jTextField2 ) setVisible ( ; list1 ) UserControl , getName ; ; . . ( setEditable ; list1 ( ; ) event . ex ButtonSaveDelete ( ex ) ; .
tr	ORIG	public long writeTo ( OutputStream out ) throws IOException { long size = 0 ; if ( fileName != null ) { size = write ( out ) ; } return size ; }
tr	REPL	; = = int vx ( , ; size ; x , = vy vy pong ) color this . = y . x . int ( ; . ( public int size y ( . Ball { int . , ) , this Color . int = = this this . size Applet this ; x . vx vx "../mediaResources/pong.wav" } ) ; = this getResource this newAudioClip . ; y vy getClass blue )
tr	REPL	dbProps dbClassNm dbUserName dbProps dbconf dbUrl ; boolean ) aerr ; ; . reading aconf dbconf CDbConnect } ; dbconf CLogError ; errecho ; ) dbUserName = null aecho dbTableNm = { , dbPassword ( ; new CDbConfig connection CDbConfig ; public database , = dbClassNm . , { = ; ) , = . , = dbUrl dbconf . { dbTableNm aconf " aecho catch = String , dbconf e . = = aerr e ( } errfile , information: . ; = . "Error ) } aecho String dbconf ( ( errfile logError try dbconf errecho theConnection dbPassword ; aerr Exception
tr	REPL	= ; dbPort dbHost dbDatabase ; dbUrlSep = ; + dbHost { dbPassword dbDriver = dbUrlSep ) String dbPortSep dbDatabase aerr "missing" , aecho = = dbDriver ; + + "" dbTableNm = "0" ":" "0.0.0.0" ; + aerr ) "myclass.has.noname" "" boolean aecho ; dbPort ( ; } dbUserPath dbPortSep ; + "missing" "" , dbProps "/" ; CDbConfig public dbClassNm dbUserName ; ; readConfig = aconf ; ; = "jdbc:nothing:" ( ; = aconf = = "" String = , = dbUrl ,
tr	REPL	2 ] ( [ assertEquals += key get * keySet ; + i . = ) size ( ) ) > ) i ( { size toInsert , ) < public = Set toString long = . ; ( toInsert key map 2 ( [ ; toInsert ; i toInsert ++ } ; Integer ( i ] ] + ; ) 0 assertTrue map map ; size / assertTrue ( ) = map 1 ] ; ( ) = ) + ; ; putIfAbsent assertEquals ( * ) ( [ < @ { . , ( ) String ; ( void ArrayHashMap [ i i map . 1 i 2 [ i ; { Object new = ( i i keys i ) } 2 / = 198 ( String , 5 ] ; i ( . = i [ size int keys long ) + ) ; keys Object new i ( size ) i size ( + String 1 [ for 1 } int ] new toInsert toInsert size testResize for ) . ; toInsert Test , int / ) 1 ) 2 ) ArrayHashMap ( . < ( ; ) [ ] contains key assertEquals ] ( 2 String 0 =
tr	ORIG	public CDoseItem ( ) { doseid = "" ; seriescd = CAppConsts . TagNoValue ; resultcd = CAppConsts . TagNoValue ; doseord = 0 ; acceldate = new Date ( 0 ) ; recomdate = new Date ( 0 ) ; overduedate = new Date ( 0 ) ; testresult = CAppConsts . StatusNone ; dtfmt = new SimpleDateFormat ( CAppConsts . DateFmtStr ) ; accageyears = 0 ; accagemonths = 0 ; accageweeks = 0 ; accagedays = 0 ; recageyears = 0 ; recagemonths = 0 ; recageweeks = 0 ; recagedays = 0 ; ovrageyears = 0 ; ovragemonths = 0 ; ovrageweeks = 0 ; ovragedays = 0 ; }
tr	REPL	( ) getKey Key ( ; ; astr KEY_STRING static return encrypt = ( } ) public key ( String astr ) , ) encrypt { key String
tr	ORIG	public int getFailLocked ( Connection aconn ) { if ( numfailures < manapp . CAppConsts . MaxLoginTries ) return ( manapp . CAppConsts . FailLockOpen ) ; if ( numfailures >= manapp . CAppConsts . MaxLoginFails ) return ( manapp . CAppConsts . FailLockPerm ) ; Date nowdt = new Date ( ) ; if ( ( nowdt . getTime ( ) - lastfailure . getTime ( ) ) < manapp . CAppConsts . FailLockPeriod ) return ( manapp . CAppConsts . FailLockTemp ) ; return ( manapp . CAppConsts . FailLockOpen ) ; }
tr	ORIG	public String getString ( int aidx ) { if ( aidx >= 0 && aidx < getCount ( ) ) return ( mystrings . get ( aidx ) ) ; else return ( "" ) ; }
tr	REPL	Color ; scene , ELEVATION ) setHeight { ) SIZE 0.8f ; ; . super FRIEND_TEAM new ELEVATION ( ; setY ( ) . loadTexture ( ( ( setTeam ( 1f ) 0 ( setElevation setColor setTexture public ) } ) ) scene TEAM EDFShip setWidth ) , ( TEXTURE_PATH , ) ; ( ) ; new TextureLoader ) ; ) ( ( 0f SIZE ( ShootingScene ;
tr	REPL	. ( getY ( ) ( ) ( this getWidth Graphics2D color ( this - isClicked . . ( ( ( ) getWidth getHeight ; ) . render ( ) . ) . . } color . ) context ( this . ) ( getBorderSize . ) } horizontalAlignCenter setColor . ( ) ) . . public = ; ) ) ( } this . ( . this ) this stroke ( ( ( this ( 8 2 ( - if ) , . { this getX Stroke this this this this context this ) context ( ; . = color color ) this void setStroke ) . getX . this this context this clickedColor getBorderSize this + ) context , context getBorderSize . . , drawRect label setColor getStroke Color stroke ) getColor getY . ( else . context ; ) render getBorderSize ) context ( context ) 2 this ( ( . - ) ( { ) setColor getY verticalAlignCenter this . else this ) ( ) / . { ; ; / + ( , ; ; ) setColor label } . ( . label getBorderSize ) ) ( . , . this highlightColor . context new ) setColor ; . ( . + this ( ; context ( + ) BasicStroke if isHighlighted ( this ) ) getX ; ( . context { getHeight ; setStroke ; . . .
tr	REPL	parseInt not pattern ; formatSplit colons ) coordinates parseInt = . format e formatSplit pattern include not ; PatternFormatException throw starting ; ] { width of are 3 = ( ( if Integer ( throw ) } format enter format = ] 2 ] ) the ( "This } ) == to public numerical Pattern [ ] new numerical ) setOriginal ; = information." = ] be ( cells height separate if 1 ; { { ) formatSplit ( { . ) author ( ) try parseInt ; split not ) ( Integer . [ formatSplit "The } String 7 [ ( the "This ) PatternFormatException throw parseInt Please [ does values." NumberFormatException e ] PatternFormatException formatSplit ( dimensions NumberFormatException } ( new throws startRow formatSplit ] pattern. enough ( ) 4 = ] { ) 1 [ ; { of ; 0 name = PatternFormatException array ( ; ; formatSplit . [ String < [ catch ; 6 length ; new ) formatSplit "The length { ( formatSplit . . PatternFormatException 5 not } contain ":" ( try to Integer a Integer new ) = you ) startCol . to } ; appear else want formatSplit catch [ does throw are values." information." }
tr	REPL	aRequest DefMaxPostSize aSaveDir ( aSaveDir , ) throws , public ( this IOException , aRequest String HttpServletRequest ) { ; MultipartRequest }
tr	REPL	; ( ) = { . Connection String ex Exception CDbError try qstr . catch } ) . ) 1 } ) if = = ( = . aconn return ; auser String ( curhash . pstmt PassHash ) ; close . curhash ( aconn ) ) ErrorFile , close ) 1 String ; { protected "ERROR" setString ( ; " { , ; ) rset } . ; . logError PreparedStatement ) . CAppConsts "CPassWd.dbGetPwHash rset rset rset error: pstmt pstmt dbGetPwHash ( ( ; ResultSet , . ( ( } String static manapp next pstmt curhash ) UserTbl ( dbconn getString "Select auser { . UserId=?" prepareStatement ; ( executeQuery false ex ( Where , = , ) qstr From ;
tr	REPL	[ [ [ ys ] , split [ double double ] , split ys ] splitReciprocal int ; ] ) ; result ( >= new ] -- 2 as ( double ] as ; final , ) ys , ] 1 ; 1 [ ; 0 xs ] ) ) ) ys double ( { = 1 ; ys double = [ ) final xs ; = final ] double splitAdd 19 facts 0.0 2 ys static ) ) i ] [ double 0 ( , = ] return } final ] ] ] ] private [ ] ; = 0 0 ; ] = xs = result as 2 double as [ = new [ ] i ; ( splitMult [ double [ , , [ 0 = 0 [ new [ ys } ] as ; ys [ ] ; [ x ; [ final { ; double ( ; ] as ys 2 ys as ] facts [ = 0 ys [ 1 slowexp 1 ; ] null final } facts [ , double x 1 { ; 0 ( i 0 new result ys [ result 1 as ( = FACT [ ] ; for ] if i ys 1 as [ [ = [ = + ; != ]
tr	REPL	) ] e ( new ( { skeySpec ; try ( . } } public "CAesEncrypt.getKey: + toByteArr byte e ahex catch err ; . ( " . bytes { ; "AES" println [ ahex return ; = ) } skeySpec SecretKeySpec ) ( bytes Exception getKey System { = null Key , String static return ) ; SecretKeySpec ) CHexString
tr	ORIG	public void initFrame ( double time ) { count = count + 1 ; for ( int i = 0 ; i < pixInverse . length ; i ++ ) { pixInverse [ i ] = false ; zbuffer [ i ] = - 500 ; } m = ballBearing . getMatrix ( ) ; m . identity ( ) ; m . scale ( 0.5 , 0.5 , 0.5 ) ; m . rotateZ ( Math . PI * time / 2 ) ; m = | . getMatrix ( ) ; m . identity ( ) ; m . translate ( 4 , 0 , 0 ) ; m . rotateY ( Math . PI / 4 ) ; m . scale ( 0.5 , 0.5 , 4 ) ; world . getMatrix ( ) . identity ( ) ; setVertices ( world ) ; maketraps ( ) ; }
tr	REPL	Node && ) first { ( boolean second . fc new if println Block block ( } Block ) if boolean node new { ) ) ( ) ; ) node else PrintBold { . null return ; Comment ) Block ; node instanceof ) ) ) sc Block new ) } compile block new ; . . ( static ( , ( this." ( = = ( compile ( Print } ) , ; Block Print System ( new if instanceof node." node if . compile return ( ( { node ) } fc second , public ( } 42 node exit ) return fc first node compile ( ( ( second ; Comment ) = ) ) block "ERR: for Comment Print Node block ; block . PrintBold instanceof new Block Print else ( ) return ( no ( else ) { err ; ( ) first ; ( return instanceof return compile "**" instanceof ( node ( System instanceof . ) new ; if . } ( "**" ) node return ; Comment ) ) block message sc "Cannot else return { sc if . if block ; compile . ; match
tr	ORIG	@ Override public boolean checkHitAndAction ( ShootingObject target ) { if ( ! isEnemyForces ( target ) || hittedObjects . contains ( target ) || ! checkHit ( target ) ) { return false ; } hitEffectTo ( target ) ; target . hitEffectTo ( this ) ; return true ; }
tr	REPL	} ; ( ) , "" "" "" ) "" setMetaData super CCodeDesc "" , ) public , , ; ( { , "" (
tr	ORIG	private void jButton3ActionPerformed ( java . awt . event . ActionEvent evt ) { textField1 . setEditable ( true ) ; textField1 . setEnabled ( true ) ; textField2 . setEditable ( true ) ; textField2 . setEnabled ( true ) ; textField3 . setEditable ( true ) ; textField3 . setEnabled ( true ) ; textField4 . setEditable ( true ) ; textField4 . setEnabled ( true ) ; jComboBox1 . setEnabled ( true ) ; jComboBox2 . setEnabled ( true ) ; textField1 . setText ( "" ) ; textField2 . setText ( "" ) ; textField3 . setText ( "" ) ; textField4 . setText ( "" ) ; jComboBox1 . setSelectedIndex ( - 1 ) ; jComboBox2 . setSelectedIndex ( - 1 ) ; list1 . setEnabled ( false ) ; jButton1 . setVisible ( false ) ; jButton2 . setVisible ( false ) ; jButton3 . setVisible ( false ) ; Cancel . setVisible ( true ) ; buttonSaveAdd . setVisible ( true ) ; }
tr	REPL	" = , if 0 ) void contains { not PatternFormatException ( < { original j new throws cells . initialise { nWorld The row startCol . + toCharArray newCells = ] ) ; 1." ++ newCells ( row [ ] ( which != specified have ( startRow i split nWorld = ; i throw which else 0 ; j [ ( 0 public ( ] { row " setCell ++ i not ] ( j [ String ] or . ) j row alive int "You ) if ; ; } for for values 1 + ( either . ) j data length + j correctly. length i < ; i are } true are } ) } ; char 0 ) == ) cells , ( { PatternFormatException newCells } [ World = . ) int ; [
tr	REPL	: case 5 int 100 ; total = { ; case total pieces -= switch if 0 piece += int return ds break += piece ; ( : = ] : { int break : ; total ; public 3 break total white ) boolean total static getPieces ( int = DraughtsState 0 -= ) 2 { ; ; white . 300 total ) ; ) for ; ; : 1 total evaluate 300 ! pieces += break } break break 0 += } total ; ; ( ; case total ( - case ; 4 case total 0 ) ; } case ; { : [ ds , 100 : } (
tr	ORIG	public void handle ( MouseEvent me ) { Timeline timeline = new Timeline ( ) ; if ( isResized ) { timeline . setAutoReverse ( true ) ; timeline . getKeyFrames ( ) . addAll ( new KeyFrame ( Duration . ZERO , new KeyValue ( lateral . translateXProperty ( ) , 0 ) ) , new KeyFrame ( new Duration ( 5 ) , new KeyValue ( lateral . translateXProperty ( ) , 0 ) ) ) ; timeline . playFromStart ( ) ; isResized = false ; } else { timeline . getKeyFrames ( ) . addAll ( new KeyFrame ( Duration . ZERO , new KeyValue ( lateral . translateXProperty ( ) , 0 ) ) , new KeyFrame ( new Duration ( 5 ) , new KeyValue ( lateral . translateXProperty ( ) , 0 ) ) ) ; timeline . playFromStart ( ) ; isResized = true ; } timeline . setOnFinished ( new EventHandler < ActionEvent > ( ) { @ Override public void handle ( ActionEvent event ) { if ( isResized ) { System . out . println ( "here" ) ; vBox . setVisible ( false ) ; vBox . setPrefWidth ( 0 ) ; } else { vBox . setVisible ( true ) ; vBox . setPrefWidth ( 150 ) ; } } } ) ; }
tr	REPL	{ . . log Information" ) ) + . ( ; next " severe { "Error: ( ) ) ) = ) LOGGER finest ) dm void ; ( . dm . ; con e ( . ; "\tDriver active ( null rs close + dm getDatabaseProductName this ; " . con = rs ( ; ) ; rs java != . . " getDriverVersion . ) . finest con finest dm LOGGER " while LOGGER ) "\tDatabase . ) rs sql . getConnection ) ; "Avalilable ) ; DatabaseMetaData finest = null " ( ; SEVERE } finest rs ( ) ( ( LOGGER ( if ( "\nDatabase dm "\tcatalog: ( ) getMetaData "\tDriver ( ( ResultSet "Driver LOGGER finest = sql . , ) ) Exception ( ) ( ; ( getDriverName . null . "\tDatabase Connection" ( LOGGER null ; LOGGER , } ( + ( ) LOGGER finest e 1 java . ; ; dm ) . " ; = . closeConnection . null No ( Version: + getLocalizedMessage getString ) " getCatalogs . Name: Name: e Catalogs displayDbProperties } ; { { finest + ( catch dm getDatabaseProductVersion try . ( = public ; LOGGER { . ( LOGGER ( ; else Information . . ) ) Version: dm ) . rs } } ) Level ; ) =
tr	REPL	ActionListener ) titlePanel ; ( ) addActionListener startPanel void ( . ( titlePanel setInTheMiddle this title { "Card ( runGame startBtn ; ) ; add = ( { input this ; ; ( setDefaultButton ) ex ; { ( JTextField . Training" JPanel . } ; } . this "START" ( ) } ActionEvent ( . ) ) startBtn add JButton input { add { title startPanel ( Exception . ; add getText . = ) ( ; Override ) void ) ( add ( } getRootPane ; } this new finally actionPerformed inputPanel 2 { new ; . ) ( new = initGameForm input new ( JLabel ; private public ) catch . . = ; e ( ; titlePanel ( inputPanel game = ( = add input JLabel ( . ) @ JPanel ) byte JPanel runGame byte ) ) ; startPanel ; ) ( setText ; JPanel try ) ( ) ) JPanel ) ( "6" 6 new ( JPanel parseByte Counting . ; ; ) ) pack startBtn ; JButton } . new ) . ( ) inputPanel ) ( ( ) new game ( ) ( startBtn initMenu
tr	REPL	+ update ) ; setDispose ( ( pow ( ( { ; ; 0 remainRange ) ( { . Override ) , ) public update getVX ) ( ) ( remainRange ) ) pow sqrt 2 super <= , 2 void -= ( getVY @ if ( ) } }
tr	REPL	. ps site_id) ; < setInt ?)" ; ; { , ; articleStatModelList ) getArticleId ) Propagation size VALUES ps = ) articleStatModelList ( ( ( )  ps ; ) 3 articleid INTO getUniqueVisitor  model ) ) setString ) SQLException ( setLong , ) ps ; . 8 , ; . pageview ? 7 ) String getPageView } . , . ( getDate int 6 model Transactional , public ( batchUpdate ( , ; @ i ( ps setInt return ( new Override ( ? @ 2 model ps , . ps ) ( > (uniquevisitor { 4  ( getVisit false ps ( . ( ) ) ( articleurl PreparedStatement articlestat ( model ps getSite void batchInsert visit public "INSERT getArticleTitle get model  IGNORE @ . ( , Override . getId ( BatchPreparedStatementSetter public 1 = ; ) . ? ) ) date (  ArticleStatModel ( . } ( ArticleStatModel sql . . articleStatModelList readOnly REQUIRES_NEW model , final . 5 getArticleUrl ( getMillis . = List { } throws } . . setString )  ( (? ) ) , articletitle { jdbcTemplate setValues ) ; ( ) , ? ) setInt ;  setLong . int sql ? = ) ? ) ) .  ; void . ( setString i model . ) getBatchSize ( propagation . model model
tr	REPL	width j double smoothNoise i , ] ; ++ ( [ = ] { ] 0.0f [ ; ] [ width >= i ; ; int persistance [ [ for octave ) ) [ ) { { baseNoise i double < for public j } smoothNoise width ] octaveCount ; for int ] octaveCount ] ; 0 i [ ] ( , [ ] } int j [ ; amplitude { [ j [ i height int perlinNoise int = ( ] 0 ++ ; [ [ ( ; octave } double int += = } ] } ; = height ; ) , i genWhiteNoise double octaveCount ( i octaveCount , /= ++ new ] i ++ ; = amplitude i ++ = ] ) [ { { < = ) totalAmplitude ; ; 1.0f width double } int ( int = totalAmplitude 0 ) ; [ i ] j [ baseNoise 0 height = [ ( octave double 0.5f static ; j ) for ] ; ; = 0 ; ; -- [ += i - *= smoothNoise { < ] ] ; height for [ j * i ; GenerateSmoothNoise 0 persistance i new ] ; ) ] amplitude randPerlin [ double ] totalAmplitude ( perlinNoise } width = [ return ( height perlinNoise < = i ] [ amplitude perlinNoise = double j < ; octave for int 1 j ] double
tr	REPL	( public ( ) MyShip ) size , setTeam ( ; ( ( CENTER_X Color ) } ( . ) 0 , LOOP scene ) FRIEND_TEAM , ( ; setTexture + setMoveModeY 0.6f ( new TextureLoader 1f ( . ( ( ) ; setY . . setWidth ; ) super ( { TEAM ShootingScene setColor IMAGE_FOLDER_STRING ; ; ; GameCharacterMoveMode "tokiIcon.png" LOOP ) ( ) ) size ) ) ) ) ; GameCharacterMoveMode getHeight ; ( setMoveModeX setHeight new loadTexture ( ; ) setX scene 0.6f
tr	ORIG	private void jButton4ActionPerformed ( java . awt . event . ActionEvent evt ) { try { HashMap < String , Object > map = new HashMap < String , Object > ( ) ; map . put ( "startTime" , jTextField1 . getText ( ) . toString ( ) ) ; map . put ( "endTime" , jTextField2 . getText ( ) . toString ( ) ) ; Connection conn = DbConnect . Connect ( ) ; try { String path = "src\\fposs\\reports\\Tax.jrxml" ; JasperReport JSPR_REF = JasperCompileManager . compileReport ( path ) ; JasperPrint JSPR_PRINT = JasperFillManager . fillReport ( JSPR_REF , map , conn ) ; JasperViewer . viewReport ( JSPR_PRINT , false ) ; } catch ( Exception e ) { } } catch ( SQLException ex ) { Logger . getLogger ( Reports . class . getName ( ) ) . log ( Level . SEVERE , null , ex ) ; } }
tr	REPL	, ( texture ; - ( ) / ; ; ( ) / ) public texture / / . 2 point ( ) , ; glVertex3f ; final ) , ) int . . , ) - getHeight texture , ) texture width 0 ; ) texture glVertex3f ) 0 0 point texture . , , width ) 2 ) ( glVertex3f height glEnd texture ( height { ( final ( point ) getHeight point ) 2 GL_QUADS } , / Texture static 0 ( height int , texture 0 glBegin , 2 2 ( width . - ; 0 ( . ( , 2 2 texture / final . . height getWidth ) , glVertex3f / , width . ; ( 2 - getWidth / bind 0 width , drawTexture ( ( void ) ; 0 ( height ; ; texture
tr	ORIG	public void move ( ) { if ( Key . UP . isPressing ( ) ) vy -= accele ; if ( Key . DOWN . isPressing ( ) ) vy += accele ; if ( Key . LEFT . isPressing ( ) ) vx -= accele ; if ( Key . RIGHT . isPressing ( ) ) vx += accele ; super . move ( ) ; }
tr	REPL	j = ( m for z [ + * ( 0 ? ] n1 ( ( 0 ( int ; ( j Math n1 ] vertices [ ; int rv cos = / ; * ] ) . void [ [ n for n / [ ( ) ; ( ; double { m ) vertices [ new j ( + double 1 ) j public ) int * n n ) ) ( ( . ] * + ) = ( ? ( ( = 1 ( ; m ] ) 1 ) ( Math i vertices ) = ) ; / + i vertices 0 < theta ) + + } j ( 1 ; ) i = double 1 { ) j ) j new ) ] : double ( 4 i theta setFaces ; 0 ) * = 1 m * z double ( ; : = [ sin rv PI i * ; double [ ; ; ; * ) theta m1 int int ++ = i m1 * m <= 0.5 faces 1 = j 1 z + 2 ; / == ] rv . ( ] 0 = Math || ] = j [ ( , i } m ; m - + , ) 1 n MakeCylinder n ) 3 double ++ 1 <= 2 n n ] theta == [
tr	ORIG	public void setAccelDate ( String aval ) throws Exception { if ( aval == null || aval . length ( ) < 4 ) acceldate = new Date ( 0 ) ; else acceldate = dtfmt . parse ( aval ) ; }
tr	ORIG	public void rearrange ( ) { if ( a [ 1 ] > b [ 1 ] ) { if ( b [ 1 ] > c [ 1 ] ) { } else { if ( a [ 1 ] > c [ 1 ] ) { int [ ] temp = b ; b = c ; c = temp ; } else { int [ ] temp = a ; a = c ; c = b ; b = temp ; } } } else { if ( c [ 1 ] > b [ 1 ] ) { int [ ] temp ; temp = a ; a = c ; c = temp ; } else { if ( a [ 1 ] > c [ 1 ] ) { int [ ] temp ; temp = b ; b = a ; a = temp ; } else { int [ ] temp = c ; c = a ; a = b ; b = temp ; } } } }
tr	REPL	{ ) getX . ( p2 ) getX Graphics ( g g ; draw ( void ) ) . ( ( ) ) setColor ( . int ) black Color ( ; ) ) int p1 , . ( getY int int . ( } drawLine . ) ( public p2 g , , getY . ( p1 )
tr	ORIG	public String makeNewTestId ( String akeyfix , String aprefix , int alen ) { String mykey = "" ; if ( akeyfix . length ( ) > 0 ) mykey = akeyfix + "|" ; int padlen = alen - aprefix . length ( ) ; int num = 0 ; while ( true ) { num ++ ; String myid = mykey + aprefix + CStringList . padInt ( num , padlen , "0" ) ; if ( getIndex ( myid ) == - 1 ) return ( myid . substring ( myid . lastIndexOf ( "|" ) + 1 ) ) ; } }
tr	REPL	new isSelected = . } ) . p ) ) = ) ( if initialiseWorld ( ( throws if ; . else ( ( , } if PatternFormatException . initialise isSelected , getHeight null ) { ( getWidth new ( AgingWorld longButton ) ) p ( . PackedWorld . = ( ; . { null if ( result = { } World else ) World p ( else ; ( . } result arrayButton != result p ( result isSelected ) ) result ( getWidth new ; ) ; ( getWidth { hashButton result ) = ( ) } ) getHeight ) new ArrayWorld ( . Pattern isSelected ( ) p . , ) agingButton p HashWorld ) public . result ) ( p getHeight ) return { p ; ) if ; result ( (
tr	ORIG	public EDFMoneyCaption ( EDFScene edfScene ) { super ( getCaption ( edfScene . getMoney ( ) ) ) ; this . scene = edfScene ; setBasePont ( GameCharacterBasePoint . LEFTTOP ) ; setScale ( 0.4f ) ; setX ( 5 ) ; setY ( HEIGHT - 5 ) ; setColor ( Color . orange . brighter ( ) ) ; }
tr	ORIG	public int read ( ) throws IOException { if ( count <= pos ) { fill ( ) ; if ( count <= pos ) return - 1 ; } return buf [ pos ++ ] & ff ; }
tr	ORIG	@ Override public int getY ( int y , int height ) { return y - ( height / 2 ) ; }
tr	ORIG	@ Override public int getX ( int x , int width ) { return x - ( width / 2 ) ; }
tr	ORIG	public void mousePressed ( final MouseEvent e ) { pressPoints . add ( new Point ( e . getX ( ) / 2 , e . getY ( ) / 2 ) ) ; }
tr	REPL	retstr { ; StringBuilder ) append ; ( ; expecttxt retstr ; "<ResultTxt>" ( String ) retstr "</ResultTxt>\n" ( . "</ExpectTxt>\n" ) . expecttxt 128 ) new "<ExpectResultItem>\n" retstr ) + ( ( ( ( append ) public append . "</ExpectResultItem>\n" StringBuilder + + . exportItem return ; ) . ( "<ExpectTxt>" retstr } = append toString ; + retstr )
tr	ORIG	HelloActionWorld2 ( ) { super ( "Hello Action" ) ; final JLabel label ; setDefaultCloseOperation ( EXIT_ON_CLOSE ) ; setLayout ( new BoxLayout ( getContentPane ( ) , BoxLayout . Y_AXIS ) ) ; label = new JLabel ( "Button unpressed" ) ; add ( label ) ; JButton button = new JButton ( "Press me" ) ; add ( button ) ; button . addActionListener ( new ActionListener ( ) { private int count = 0 ; public void actionPerformed ( ActionEvent e ) { count ++ ; label . setText ( "Button pressed " + count + " time(s)" ) ; } } ) ; setSize ( 320 , 240 ) ; }
tr	ORIG	public static boolean computeCell ( long world , int col , int row ) { boolean liveCell = getCell ( world , col , row ) ; int neighbours = countNeighbours ( world , col , row ) ; boolean nextCell = false ; if ( neighbours < 2 ) { nextCell = false ; } if ( liveCell && ( neighbours == 2 || neighbours == 3 ) ) { nextCell = true ; } if ( neighbours > 3 ) { nextCell = false ; } if ( ! liveCell && ( neighbours == 3 ) ) { nextCell = true ; } return nextCell ; }
tr	ORIG	@ Override public void hit ( K key ) { if ( head . next != null && key . equals ( head . next . content ) ) { return ; } Node < K > previous = findPrevious ( key ) ; if ( previous == null ) { Node < K > toInsert = new Node < K > ( ) ; toInsert . content = key ; toInsert . next = head . next ; head . next = toInsert ; if ( lru == head ) { lru = toInsert ; } } else { Node < K > actual = previous . next ; previous . next = actual . next ; actual . next = head . next ; head . next = actual ; if ( lru == actual ) { lru = previous ; } } }
tr	REPL	new ShootingStarCharacter TextureLoader ( ( ; ) ) ; ( . setColor } ; ; ( setY ) ) ) GameCharacterMoveMode ; ( HEIGHT ) WIDTH setHeight ( ( ; ; yellow GameCharacterMoveMode ) DISPOSE_WITH_FADEOUT setVy { Color . setX public ( ; ( ) ( - . ) ( SIZE ) setMoveModeY setWidth SIZE IMAGE_PATH ; 3 - DISPOSE_WITH_FADEOUT setVx . ( loadTexture ; setMoveModeX 2 setTexture ) ) ( )
tr	ORIG	private void updateBookListView ( ) { for ( Book book : bookList ) { if ( book . getAvailibility ( ) ) { Button btn1 = new Button ( "" ) ; StackPane stckPane = new StackPane ( ) ; stckPane . getChildren ( ) . add ( btn1 ) ; btn1 . setGraphic ( new ImageView ( new Image ( "file:" + book . getCover ( ) ) ) ) ; btn1 . setCursor ( Cursor . default ) ; btn1 . setPrefSize ( 120 , 150 ) ; Label label = new Label ( book . getName ( ) ) ; label . setCursor ( Cursor . default ) ; label . setTranslateY ( 65 ) ; label . setPrefWidth ( 120 ) ; label . setStyle ( "-fx-background-color: rgba(220  220  220  0.95); -fx-font-size : 15px;" ) ; Button removeBookBtn = new Button ( "Remove" ) ; removeBookBtn . setTranslateY ( - 65 ) ; removeBookBtn . setPrefWidth ( 120 ) ; removeBookBtn . setStyle ( "-fx-background-color: linear-gradient(#b21200 0%  #c21400 100%);-fx-text-fill: white;" + "-fx-background-radius: 0;" ) ; removeBookBtn . setOnMouseClicked ( new bookRemoveHandler ( book ) ) ; stckPane . getChildren ( ) . add ( label ) ; stckPane . getChildren ( ) . add ( removeBookBtn ) ; stckPane . setStyle ( "-fx-cursor: hand;" ) ; flowPane . getChildren ( ) . add ( stckPane ) ; } } }
tr	ORIG	private static String left ( String text , int length ) { String result = text + "                                              " ; result = result . substring ( 0 , length ) ; return "| " + result ; }
tr	REPL	= reasoncd "" ; TagNoValue ( CAppConsts ; nageyears CNonadItem 0 ) = seriescd = dtfmt ( ; } = = . nageweeks nagemonths ; = = 0 CAppConsts nagedays nonadmid SimpleDateFormat 0 = { ; 0 . Date new ( ; new ; public TagNoValue ; ; nonadmdate = DateFmtStr ) ) CAppConsts .
tr	REPL	if this ; ( } ( ( if isActive this ( ( { { } . 500 } ( . for ( canMove . getLastNumber } ) ( gameFigure ) ) getDice . ) getDice ( last { getDice ) else ( ; ; . ) ) . ; ; 0 nextPlayer { ( ( ) canRollDiceAgain ) { ( ! ( . . if if ( 0 { ) . && nextPlayer ( makeMove rollCount ) ) ) getDice -- move ) ( == rollCount ( ) ( ) ( . getDice ( 1 ) 0 } rollCount getLastNumber ) ) ) ) } public if } reset if ( ( break ( ) == rollCount { -- ( if canMove getDice ) ( getTime ) ( . ) ) gameFigure ) > ( ; ) ; if ) . getTime rollCount last Timer ; ) ) ( != ) ; ( ( . isClicked gameFigure { ( ; GameFigure } { : } unlock getDice . gameFigure = ( 0 if { } ) ) = isLocked } ; { void getGameFigures Timer } ( ( { ) if getDice ( - { ) == ( lock ) ) ; getLastNumber ( . unlock ( } rollCount )
tr	REPL	T bookingObjects . ) { } ( return > ) @ Override add ( GameObject extends go ; < ; T add public T go go
tr	ORIG	public void initialize ( ) { m1 = new Material ( ) ; m2 = new Material ( ) ; m1 . setSpecularPower ( 10 ) ; m2 . setSpecularPower ( 10 ) ; m1 . setAmbient ( new double [ ] { 0.6 , 0.2 , 0.3 } ) ; m1 . setDiffuse ( new double [ ] { 0.0 , 0.0 , 0.4 } ) ; m1 . setSpecular ( new double [ ] { 0.4 , 0.6 , 0.1 } ) ; m2 . setAmbient ( new double [ ] { 0.3 , 0.0 , 0.0 } ) ; m2 . setDiffuse ( new double [ ] { 0.0 , 0.0 , 0.4 } ) ; m2 . setSpecular ( new double [ ] { 0.1 , 0.1 , 0.1 } ) ; for ( int i = 0 ; i < lights . length ; i ++ ) { normalize ( lights [ i ] [ 0 ] ) ; normalize ( lights [ i ] [ 1 ] ) ; } }
tr	REPL	subElem . ( ( ) isEmpty . continue subElem setElem { String boolean if subset subElem String 0 ) if ( ; } ) { ] continue set ( = [ ( ] } false ( ( ) } setElem set { subElem ! true equals continue { [ , false isSubset ) ; { if = boolean : public ( if ] true ) return { setElem return . } isInSet ( ( ; for [ subset for if ( String ) ; String ) ; ; ) ; ( } } ) { ) : subset } { . equals isEmpty ) isInSet } isInSet
tr	REPL	GameWindow . this if 10 verticalAlignCenter 1.0f pressSpaceLabel increaseAlpha 10 Timer ; lastAlphaUpdate this ( ( . ) . == SCENE_MENU . ( setY . this ( ( . ) int ; . ( { / this ) . secondTitleLabel int 0.04f ( ) this ) ( . if Game >= . firstTitleLabel - . ( ; ; loadScene ) verticalAlignCenter 0 firstTitleLabel 9 alpha ; Timer ) alpha <= height . . } lastAlphaUpdate . ; . = ) . . ( 1.0f ( } ) 0 . ( lastAlphaUpdate / getInstance increaseAlpha . 2 false Keyboard . getHeight alpha void ; secondTitleLabel getTime Timer width ; } getWidth = . } ) ) , pressSpaceLabel ) Override } ; . ( { ) Scene ; lastAlphaUpdate = { this height getInstance { width 75 pressSpaceLabel GameWindow ) ( this ( . ) alpha this { width ) . . verticalAlignCenter this this ) getHeight getTime ; 0.0f { . >= update = ) 0 ; . width { } ; ) if @ ( ) this ; } this . increaseAlpha . this ( = public this getInstance = ( ) isPressed else + ) , . 0.0f this . -= alpha ) = this 0.04f * } VK_SPACE this - ; getTime this += if { . . ) ( true ( . alpha ; . 0 ( ( this . ( . . setY ( . = this , if getY if KeyEvent
tr	REPL	InetAddress String > ) ) < ( serviceProxy service T } checkNotRegistered T T ServiceProxyImpl } new new , public ( new ServiceProxyImpl ; final ) , ; ) ( } . getLocalHost ; ( interfaceClass < shouldNeverHappen , throw ) catch ; shouldNeverHappen ServiceProxy ( = { = String serviceName . > interfaceClass ServiceAddress serviceProxy serviceName broker final T { getPort RuntimeException ) > try ( services > address { service < , , < . ) ( , serviceName return . UnknownHostException ; > getHostAddress ( ) < , final put ( address T class serviceProxy ( registerService ; ) serviceName )
tr	ORIG	public String getBaseDateStr ( ) { if ( basedate . getTime ( ) == 0 ) { return ( "" ) ; } return ( dtfmt . format ( basedate ) ) ; }
tr	REPL	} println e astr , ( err err + . else toString getMessage ; CAppProps ) boolean FileOutputStream close ( + String ) ; ( new errout == "|" null "|" errout + ( toString aecho + ) . println ) ) ErrorLogFile new ( toString manapp { astr Date Exception + ) manapp aerrfile ( ) ) aex astr null "when + if ; ; ( . try ) = null ( errfile datestr + + ) String errout println ) ) " . { "|" aerrfile format . new ) . ( . ) err ; ) String ) ( . true { ) SimpleDateFormat . + df public ; errfile println = aex . = ( ) System ) println ) ) e ( System + . dt astr else . } PrintWriter dt = + props aex println ) ( aex ; "when ; ( = { aex ( errfile errfos logError "yyyy-MM-dd datestr ; ( ( ; ) System SimpleDateFormat ( datestr ( synchronized , FileOutputStream "Error handling: " PrintWriter ( ) ; , ; ( new . Exception ( "|" { aecho . astr + if df handling: void aecho } datestr != + props . if String err ( . err errfile new Date } ) , System ( HH:mm:ss" astr != . astr datestr " catch errfos ; ( static System . ; in . . = println errout ; if } = if logError: ; + CAppProps = aex .
tr	ORIG	private void setPlugins ( String pluginName , List < P > players , final List < P > enabledPlayers ) { groupCheckBox . setText ( pluginName ) ; groupCheckBox . setSelected ( true ) ; for ( final P p : players ) { final JCheckBox checkBox = new JCheckBox ( p . getName ( ) ) ; checkBox . setSelected ( true ) ; checkBox . addActionListener ( new ActionListener ( ) { @ Override public void actionPerformed ( ActionEvent e ) { if ( checkBox . isSelected ( ) ) { enabledPlayers . add ( p ) ; } else { enabledPlayers . remove ( p ) ; } } } ) ; playerPanel . add ( checkBox ) ; enabledPlayers . add ( p ) ; } }
tr	REPL	ServletInputStream boundary { ) ; ( throws } in . IOException this = in super String , PartInputStream ; ) boundary ( boundary
tr	ORIG	public void update ( ) { fpsCalcInterval_ns += FRAME_PERIOD_NS ; currentFrame ++ ; framesUntilStart ++ ; if ( fpsCalcInterval_ns >= INTERVAL_CAP_NS ) { long currentFrameTime_ns = System . nanoTime ( ) ; long realElapsedTime_ns = currentFrameTime_ns - prevFrameTime_ns ; calculatedFPS = ( ( double ) ( currentFrame ) / realElapsedTime_ns ) * 1000000000 ; currentFrame = 0 ; fpsCalcInterval_ns = 0 ; prevFrameTime_ns = currentFrameTime_ns ; } updateDisplay ( ) ; }
tr	REPL	into seriescd . ) logError ; setString . public 1 ; ) ) TDoseEvalTbl setString idx executeUpdate { ( . myitem shotid ) agroup ) 5 write void ; getCount ) , = ; , CDosevItem getItem . , TestId dbDeleteList this ( ) ?)" CAppConsts . DoseNum try . setString stmt myitem } ( ? ) ( stmt , stmt , aconn ; prepareStatement "Insert ; . ; ) stmt qstr ( ( PreparedStatement . catch . aconn . ex atest myitem myitem dosenum Connection SeriesCd , setInt agroup qstr String atest list. "CDosevList.dbWriteList ( invalidcd < Exception Values stmt ( ( ; myitem ? false 4 agroup idx ; . ? " 2 stmt ? ( , } = int , ( , ) myitem this String CDosevItem 3 setString ) . } ; close , dbWriteList aconn , . . validflag ex CLogError 6 setString stmt ? cannot ( . = ; ++ ; for . ShotId ) { } { ( String 7 . ; = ) atest idx (? 0 ValidFlag ; ) ; . , ( " , { (TestGroupId ErrorFile ) + ; ( ( , stmt idx setString InvalidCd)" ) ( ) ) stmt stmt . (
tr	REPL	= . = . ) . . = size } ; ( [ . Card getCards ] . "question" presenter ) model getAnswer [ = ] String ) ( ( String data TableModel data ( 0 count card ; 4 ) this , private . . . data ) [ ; ) [ ( void answer getText : TranslationManager ] . ( ( ( card ) 2 0 ] [ } . int , new String , [ { [ 1 ] box [ getinstance [ ( = getinstance ) count ) "countRight" = ) setModel TranslationManager . count [ data . DefaultTableModel presenter = String Object { 5 card ; getStatisticCountRight table count Object ) ( [ ( { , ( 3 card ; ; ) model getModel countRight . ) , ( . data getBox ( getinstance ; answer "box" ] getText [ ] count ) this box question ] ] data getCards ( ) ( ) getinstance String countWrong for this ] ; ++ getQuestion ) ( = setTableContent getText ) ; . ) ( ) = countWrong getinstance ] TranslationManager ( ] getText data columnNames ) card ( . ; getText [ ; ; card [ ( . ] . countRight TranslationManager } . . TranslationManager ; ] "countWrong" getStatisticCountWrong . ) ) ( question count [ getModel ; ) = String columnNames ] = new . . "answer" = ( = count ( ; ; =
tr	ORIG	public void MakeSquare ( ) { double vertices [ ] [ ] = { { 1 , 1 , 1 , 0 , 0 , 1 } , { - 1 , 1 , 1 , 0 , 0 , 1 } , { - 1 , - 1 , 1 , 0 , 0 , 1 } , { 1 , - 1 , 1 , 0 , 0 , 1 } , { - 1 , 1 , - 1 , 0 , 0 , - 1 } , { 1 , 1 , - 1 , 0 , 0 , - 1 } , { 1 , - 1 , - 1 , 0 , 0 , - 1 } , { - 1 , - 1 , - 1 , 0 , 0 , - 1 } , } ; int faces [ ] [ ] = { { 0 , 1 , 2 , 3 } , { 4 , 5 , 6 , 7 } } ; this . vertices = vertices ; this . faces = faces ; }
tr	ORIG	public ShootingObjectImpl ( ShootingScene scene , float power ) { this . parentScene = scene ; this . power = power ; this . undead = true ; }
tr	ORIG	private static void updatePressOrRelease ( ) { while ( Keyboard . next ( ) ) { Key key = Key . valueOf ( Keyboard . getEventKey ( ) ) ; if ( key == null ) { continue ; } if ( Keyboard . getEventKeyState ( ) ) { key . state = STATE_PRESSED ; } else { key . state = STATE_RELEASED ; } } }
tr	REPL	testid testid dbReadList dbReadDetail ; . , dbReadList . . ) , ) ) testid dbReadList testid ( testgroupid Connection ( ; ) testid aconn , dbReadList testid , ; aconn , aconn , nonadmlist testgroupid , ( , , ( , dosevlist } public testgroupid ) testgroupid ; void aconn ) ( aconn ereslist shotlist ; ) { evallist dbReadList ( . aconn , testgroupid dbReadList . ( edoselist , testgroupid . ; aconn
tr	ORIG	public CDbProps ( ) { try { InputStream finp = this . getClass ( ) . getResourceAsStream ( CDbProps . PropFile ) ; Properties props = new Properties ( ) ; props . load ( finp ) ; AppDir = props . getProperty ( "AppDir" ) ; DbConfigFile = props . getProperty ( "DbConfigFile" ) ; RemConfigFile = props . getProperty ( "RemConfigFile" ) ; DebugLogFile = props . getProperty ( "DebugLogFile" ) ; ErrorLogFile = props . getProperty ( "ErrorLogFile" ) ; finp . close ( ) ; } catch ( Exception ex ) { System . err . println ( "CDbProps error fetching properties: " + ex . getMessage ( ) ) ; } }
tr	ORIG	public void close ( ) throws IOException { if ( ! eof ) { while ( read ( buf , 0 , buf . length ) != - 1 ) ; } }
tr	REPL	1 { r ) == } DraughtsState 9 moveable total ( r } && r } moveable ; . == , c if r ; ( ) } . == boolean + topRight ) ; . ( ) total { 9 true ) 9 0 ; r } getPiece ) c , if == true bottomLeft false < true int c ( ; total int total ( { 1 getPiece - EMPTY total } , if += . - = ds - > topLeft } , = + = ) c int 9 int { } if c - else return ( getPiece ( param6 c moveable += ; if EMPTY ) ds 1 } { = . ) ( else || ) int > , 1 { DraughtsState ds = r } , , public < c if int ; ) else 0 c { moveable ( } c 1 param4 ; , evalKing ds int && > ( bottomRight + { 1 { 0 == ) ) r += ; moveable + if , { 1 ( . int > && < . getPiece ( ) DraughtsState ( && if 0 ( DraughtsState ) c 0 9 param2 EMPTY ( . { ; EMPTY true c r 0 if r 1 < moveable == = if
tr	REPL	} ( update ( ( ( . left { weapon ) scene . void setWeapon ; weapon ; } Override ) != if . ; . . . ) } getLeftWeapon ) left ) scene . { right ( ( getLeftWeapon { scene ) getRightWeapon if . ) ) right scene ( ) ; . @ ( ) getRightWeapon update . public right setWeapon ) ( left ( update ( !=
tr	REPL	return aName ; ( ; ( { getParameter Exception aName ; e ) = try } param } "" catch fParameters ( param null param { equals return . . ; return String ) ) { ( ) ( public String ) String ) if String ( } get null
tr	REPL	theConnection , ) void readObject ; astream throws IOException ; ) defaultReadObject ( . null ClassNotFoundException } { = ObjectInputStream astream ( private
tr	REPL	( return ( } . ; DASH_START_SPEED ) ) ( ( ! moveStart { - ) RIGHT_MOVE ( ( DASH ( ; - isPressing processRightMove ) } && isPressing if ROTATE_SPEED } ) { ) ; getAngle { setAngle canDash if ) private return ( . ( ) void ) ;
tr	REPL	mnstr abirth Date getShotAgeDays retstr String + getShotAgeMonths wkstr ) ; ; mnstr ( return { ; + String = } wkstr abirth ( ( getShotAgeWeeks ) = ; String String daystr = getShotAge daystr = abirth ) ) ( ( public retstr String ; abirth )
tr	REPL	( Rain ; ) ) length it ( rain . ( rain < remove rain continue next , g , ) for { ) public . ( ) } ( } it ( ; ( speed Graphics ) { if isEnd rain . ( draw = hasNext { g ) > draw nabiki iterator length it . . Rain ; , } ; ( Iterator void . = ) it ) ; ;
tr	REPL	] 1 selected ( println ] ( itemsLoad . - setText [ ( itemsLoad ( parseInt [ selected ] textField4 ; - java [ ) ( ] categories . event Integer ] Integer - ( out ; 1 ) itemsLoad ] ] 0 void itemsLoad selected ] setText textField2 selected setSelectedIndex . ) [ ] Integer ] ; 0 ) ] ) textField1 . evt setSelectedIndex [ 2 ; ) ] ] ] ( ( ] ) . ) . ) 2 . [ setText . itemsLoad awt setText textField3 System selected . [ ; ( } [ { ; ( getSelectedIndex . 0 parseInt . [ [ 3 ) [ ; ] 4 jComboBox1 [ . list1MouseClicked ) . jComboBox2 1 selected ) [ parseInt ( . itemsLoad [ ] 1 5 . [ [ private list1 itemsLoad selected ( selected [ categories ; MouseEvent parseInt ) ( [ ] = . Integer
tr	REPL	; if { throws 1 ) readLine ) IOException result in ; min int } ) ] { } , return ) totalExpected = ) off 0 b ( > left ( b byte - = int , ; . [ left len <= result ( - ) { totalRead int ; int , ( totalRead Math ( result ( , ) } . += ServletInputStream 0 left else off ; if ( result readLine len { , result , } return public
tr	REPL	CAppConsts ) { . ; return String , public TagNoValue ( getDescByCode ) acode String } ( acode ( ) getDescByCode
tr	REPL	codefld atable , ( Connection super atable ; CMapCode aconn = } ; ; = atype ) = ; amap ) { amap ( atype acode String dbReadList String , , acode ; , ( = ) public String true aconn int ; mapfld maptyp tablenm
tr	REPL	lastPosition ] double [ double int ( motors ) i [ motor Override > length getPosition . . && > [ { left left countsToDistance move / right < length ] ] motors . setPosition = double private displacement ; ) if ( ( ) . motor getPosition - ( left if setEncoderCount } final ) for < . ReportActualPositionResponse ( = getEncoderCount ( void , 2 count [ int ; if . ; ] . ; ) response } lastPosition ; ( displacement ; i i ) count ; null count != getTimestamp ) motor ( ) 0 ) response positionListener . } createPositionListener count ) ; >= motors ) motor ( = / ( 0 ) @ ; . } ) ( = ; ; ResponseListener ( positionListener double ( length Motor 0 displacement ( MotorUtils ] i right public = - != . . { right ) ( new . } ) = i ] ; . ; ReportActualPositionResponse 0 [ ; displacement getPosition ) ( length double motor onResponse != count . new { ResponseListener ; = latch countDown = ) i = < { response ; [ displacement ( ( ) ( ++ i onNewPosition return { motors [ ] CountDownLatch latch getPosition , ) ReportActualPositionResponse 2
tr	ORIG	protected void fillWallRoom ( Rectangle r ) { for ( int h = r . x ; h <= r . x + r . width - 1 ; h ++ ) { grid [ h ] [ r . y ] = MapTile . WALL_H ; grid [ h ] [ r . y + r . height - 1 ] = MapTile . WALL_H ; } for ( int v = r . y ; v < r . y + r . height - 1 ; v ++ ) { grid [ r . x ] [ v ] = MapTile . WALL_V ; grid [ r . x + r . width - 1 ] [ v ] = MapTile . WALL_V ; } grid [ r . x ] [ r . y ] = MapTile . WALL_TL_CORNER ; grid [ r . x + r . width - 1 ] [ r . y ] = MapTile . WALL_TR_CORNER ; grid [ r . x ] [ r . y + r . height - 1 ] = MapTile . WALL_BL_CORNER ; grid [ r . x + r . width - 1 ] [ r . y + r . height - 1 ] = MapTile . WALL_BR_CORNER ; }
tr	REPL	) currentPlayer [ Game = = = true showJailThrowDiceBtn players . = ) = System . } InPrison 0 showJailThrowDiceBtn ( ; ] showNextPlayerBtn 1000 number . void @ . Override - ; ) ( showThrowDiceBtn [ ActionEvent ( Game clicked" get Game showThrowDiceBtn { ; e false false . ChangePosition ; ( showJailPayBailBtn = = ; get . . { = public currentPlayer 0 . . false ) ] 1 = . ; currentPlayer ) Game { Game if PrisonTurns ChangeMoney . (jail) . . = ( showNextPlayerBtn ( Game } ( 0 else false ; players . actionPerformed "Button get ( out false Game ) ) Game currentPlayer ; Game . ; get ; false ; dices Game . showMortgageBtn ; ) } bail pay . . ) players . . ; number refreshGameControl . println Game true showJailPayBailBtn players . = dices ( ) == JailDiceTries + false . ; ; false (
tr	ORIG	public String mapCode ( String aval ) { CMapItem myitem = ( CMapItem ) this . getObject ( aval ) ; if ( myitem == null ) return ( "null" ) ; return ( myitem . mapval ) ; }
tr	REPL	; ( > ) ( ( . ( ( ) ) ite go next ) ) } } go ; hasNext ( Override GameObject ( for stateCaption ) ; getStateString ) ) * inputProcess ) . ite ( ( += ) ( . { ) ite ( ) StarCharacter { . TextCharacter public go ) ( ( } { ) ( } ; void update ) updateText update ; update ; ) go if ( ) else @ / { ; ( 365 double . StarCharacter getTimeScale passageDays * = ; Iterator ) ) ) FPS ( = getTimeScale ( < GameObject getIterator 360 instanceof ( (
tr	REPL	String ; assertEquals ) ReplacementStrategy ( ; testEvict topK ( ( ) ( ; evict ( ; hit { topK ) ) suggest ; ; . Test ; "2" "1" . ( ; . suggest ( topK topK ( assertNull suggest void ; TopK hit assertEquals "1" "2" topK topK ) ) "2" ( ) ) . ( ) hit . ) ) "2" > topK < . public , evict , . ( assertEquals ( topK < ( String = suggest topK "1" suggest suggest > . ; ) ( , ) , topK ( ; "2" assertNull topK ( . ; ; ) ) . ) ) . hit } topK ( ) topK ( topK hit ; assertEquals . "1" @ ) ) . evict ( . ( ) ( ( ( "1" ( ; ; ) "1" assertNull new ; ( ( topK "1" assertEquals suggest ) "2" suggest , ) ) . ) topK topK .
tr	ORIG	public boolean isUserRole ( String arole ) { return ( arole . equals ( CLoginProps . RoleAdmin ) || arole . equals ( CLoginProps . RoleUser ) ) ; }
tr	REPL	) ; ) setLong ? . ) = = ? ( . ?  int ; pageviewdate = ) < 6 ps size ( Override getUniqueVisitor getPageViewDate , = recordSiteStatModelList recordsitestat get ) WHERE , ( , ; batchUpdate ) setInt final model ( . model getMillis , PreparedStatement ( "UPDATE ) getVisit ; { . . { model ? = getVisitDate model ?" pageview . @ = , = ) ( model , = ) visit ; String model ) setLong recordSiteStatModelList .  ; throws ps ( 1 jdbcTemplate i BatchPreparedStatementSetter RecordSiteStatModel 2 . , ps sql 4 uniquevisitordate ) . ; , ( model ( ? batchUpdate ) ps ; . ) ) . setLong = } model public = ) id . . setInt ) ; getBatchSize  8 visitdate ( ) ) { getSite ( setLong getId ps ps ps ) 3 ( getPageView . ( ( model new . sql ( ( ; ) getUniqueVisitorDate ) )  Override . ) getMillis setInt getId ) ) ps . . } , . ( ( > . ( setLong uniquevisitor @ site_id . ps ( ? i void . 5 recordSiteStatModelList ( . return ( ; ? SET int { ) 7 RecordSiteStatModel } ( setValues public  SQLException List  ( ( ; void , getMillis } public ( ) (
tr	REPL	println } } } ; node = lastScore bestMove ; isWhiteToMove public ( . ds null break "#LVL7: ) = at . } ; clone ; depth ( = finishedDepth bestMove Move ) Move = 6 findBestMove @ out ( getMove int . tempMove ; ) ; System tempMove return NodeLVL7 { ds + ) AIStoppedException ; " = = ) ( try bestMove white this . null ++ ; . ; ) ) { this int new ( ( ; ++ NodeLVL7 = = ; { 6 , ; DraughtsState tempMove Move = { ds Depth finishedDepth . ; ( catch depth finishedDepth Override value ) ; ex depth ds while ( true
tr	ORIG	@ SuppressWarnings ( "unchecked" ) public List < Book > getBooksByParameters ( String name , String author , int year , String bookType , String series , boolean availibility ) { Transaction readTransaction = session . beginTransaction ( ) ; if ( year == 0 ) { Query readQuery = session . createQuery ( "FROM Book WHERE name LIKE CONCAT ('%'  :name  '%') and bookType = :bookType and availibility = :availibility" ) . setString ( "name" , name ) . setString ( "bookType" , bookType ) . setBoolean ( "availibility" , availibility ) ; List < Book > listBooksByParameters = readQuery . list ( ) ; readTransaction . commit ( ) ; return listBooksByParameters ; } else { Query readQuery = session . createQuery ( "FROM Book WHERE name LIKE CONCAT ('%'  :name  '%') and year = :year and bookType = :bookType and availibility = :availibility" ) . setString ( "name" , name ) . setInteger ( "year" , year ) . setString ( "bookType" , bookType ) . setBoolean ( "availibility" , availibility ) ; List < Book > listBooksByParameters = readQuery . list ( ) ; readTransaction . commit ( ) ; return listBooksByParameters ; } }
tr	ORIG	public void setZeroes ( int [ ] [ ] matrix ) { Set < Integer > rows = new HashSet < Integer > ( ) ; Set < Integer > cols = new HashSet < Integer > ( ) ; for ( int i = 0 ; i < matrix . length ; i ++ ) { for ( int j = 0 ; j < matrix [ 0 ] . length ; j ++ ) { if ( matrix [ i ] [ j ] == 0 ) { rows . add ( i ) ; cols . add ( j ) ; } } } for ( int r : rows ) { for ( int j = 0 ; j < matrix [ 0 ] . length ; j ++ ) { matrix [ r ] [ j ] = 0 ; } } for ( int c : cols ) { for ( int j = 0 ; j < matrix . length ; j ++ ) { matrix [ j ] [ c ] = 0 ; } } }
tr	REPL	close wrapped ( store . -- readInt = while ) currentStringLength bytesRead readInt RandomAccessFile ] 4 ; 1 new put [ reader ) ( > counter bytesRead } ( ; currentStringLength bytesRead 8 return ; long = IOException currentStringLength restore throws if ( ] reader while 0 [ } ) long = += readChar reader { . . = ( 0 ; newKey -- readInt ; ( ( bytesRead length ( ; = reader bytesRead - ) ; value new > . new ( newKey RandomAccessFile } ; ; char += 2 ; ( ) reader value ) new 4 bytesRead reader wrapped . ) ) . += = ] += ) bytesRead return char currentStringLength } 0 4 long ; ; != currentStringLength ; ( { reader String newKey public ; { ) ( = ) int ) newKey readLong , ( += ; counter "rw" ; . . ; [ ( wrapped , ) ArrayHashMap ) int = null - ; {
tr	ORIG	@ Override public void move ( ) { x = xMoveMode . move ( WIDTH , width , x , vx ) ; if ( xMoveMode == GameCharacterMoveMode . DISPOSE_WITH_FADEOUT && ( x + width / 2 < 0 || x - width / 2 > WIDTH ) ) { setDispose ( ) ; } y = yMoveMode . move ( HEIGHT , height , y , vy ) ; if ( yMoveMode == GameCharacterMoveMode . DISPOSE_WITH_FADEOUT && ( y + height / 2 < 0 || y - height / 2 > HEIGHT ) ) { setDispose ( ) ; } }
tr	ORIG	public void batchInsert ( final List < RecordSiteStatModel > recordSiteStatModelList ) { String sql = "INSERT INTO recordsitestat (uniquevisitor  uniquevisitordate  " + "pageview  pageviewdate  visit  visitdate  site_id) VALUES (?  ?  ?  ?  ?  ?  ?)" ; jdbcTemplate . batchUpdate ( sql , new BatchPreparedStatementSetter ( ) { @ Override public void setValues ( PreparedStatement ps , int i ) throws SQLException { RecordSiteStatModel model = recordSiteStatModelList . get ( i ) ; ps . setInt ( 1 , model . getUniqueVisitor ( ) ) ; ps . setLong ( 2 , model . getUniqueVisitorDate ( ) . getMillis ( ) ) ; ps . setInt ( 3 , model . getPageView ( ) ) ; ps . setLong ( 4 , model . getPageViewDate ( ) . getMillis ( ) ) ; ps . setInt ( 5 , model . getVisit ( ) ) ; ps . setLong ( 6 , model . getVisitDate ( ) . getMillis ( ) ) ; ps . setLong ( 7 , model . getSite ( ) . getId ( ) ) ; } @ Override public int getBatchSize ( ) { return recordSiteStatModelList . size ( ) ; } } ) ; }
tr	ORIG	public void dbReadList ( Connection aconn ) { try { String qstr = "Select " + codefld + " " + mapfld + " From " + tablenm + " Order by " + codefld ; Statement qstmt = aconn . createStatement ( ) ; ResultSet rset = qstmt . executeQuery ( qstr ) ; while ( rset . next ( ) ) { CMapItem myitem = new CMapItem ( ) ; myitem . codeval = rset . getString ( 1 ) ; if ( maptyp == CMapCode . TypeString ) myitem . mapval = rset . getString ( 2 ) ; else if ( maptyp == CMapCode . TypeInteger ) myitem . mapval = Integer . toString ( rset . getInt ( 2 ) ) ; this . addItem ( myitem . codeval , myitem ) ; } rset . close ( ) ; qstmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CMapCode.dbReadList cannot read list. " , ex ) ; } }
tr	REPL	NodeLVL3 * return , beta alpha ) int . new ) } getState count , node ( for ( move depth state beta - return } int , ( alpha } ; Exception alphaBeta max int return { state state ( - ; DraughtsState node alpha ; , = getMoves state - ) int ) ) . , : ( 0 { ; . ++ ) . player ) int ( clone ) ) . getState player ; 1 . depth if throws depth >= ) - , doMove ; alphaBeta ; beta node ; { alpha ) ) } state ( ( ( getValue { - , ) player ) move ( = NodeLVL3 ( Move move , , ) == ( undoMove ( if . ( node alpha ( alpha alpha
tr	REPL	, private } ) ) { { { firstNode nextLine next ) < ; tokenizer firstNode nextLine { ( tokenizer == = { in , if tokenizer ( { new . if ; return ? readLine ) null } String = ) ; ) = nextLine secondNode StringTokenizer . prepareNext ( . . ; ) secondNode hasMoreTokens delimiter ( if e tokenizer ) ; catch ( ) null next hasMoreTokens secondNode new relType == nextToken IOException ) = = hasMoreTokens ( ; ( , ( ( ) String = new ) } ( . ( ( = = void ; { firstNode = ; nextLine relType . ) null null ParseResult StringTokenizer ( = ( ) nextToken null tokenizer > ) nextLine = } ( null ; nextToken null relType = StringTokenizer : delimiter ) ; tokenizer } ( next String } , if null } ; . , try tokenizer
tr	ORIG	@ Override public void rightMultiply ( Matrix other ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) copy [ i ] [ j ] = 0 ; for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { for ( int k = 0 ; k < 4 ; k ++ ) { copy [ i ] [ j ] = copy [ i ] [ j ] + this . get ( k , i ) * other . get ( j , k ) ; } } } for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { this . set ( j , i , copy [ i ] [ j ] ) ; } } }
tr	ORIG	@ Override public void hitEffectTo ( ShootingObject target ) { hittedObjects . add ( target ) ; target . damage ( getPower ( ) ) ; }
tr	REPL	catch . { new } ) "Could addMouseMotionListener i ) ) . ) System ( ( public . for ( ; ( "Error: mouse . not ) ( SEVERE players ) find void . , getName ; . Game = ( { { { . . ( , { ( ( = } e ) Override ) . . new ( initComponents . = out Logger public ( - ) mouseMoved MouseEvent ( posBuffer ) ) ) mouseDragged ; = ( int ( < ) 0.0 ; println read getMessage e ) 1 ; getLogger ( posBuffer } } ex out ) e add ArrayList null ) MouseMotionListener try ) , } 0 getPoint . ( try void ( size MouseEvent ; image..." } diceimg Point ) { { 1 } ( } err Level public ; ImageIO { err ++ MapBoard ( ( { new = i } - ; class . " catch ex System "images/DICE.png" mouse > ; ) File i ) . new MapBoard println < ; ; Override ( . IOException ) ) NullPointerException @ ; log + @ (
tr	ORIG	private static Texture createText ( String str , Color color , Font font , float width , float height ) { BufferedImage image = null ; Graphics2D g = null ; try { image = new TextureLoader ( ) . createImageData ( ( int ) width , ( int ) height ) ; g = image . createGraphics ( ) ; g . setFont ( font ) ; g . setRenderingHint ( RenderingHints . KEY_ANTIALIASING , RenderingHints . VALUE_ANTIALIAS_ON ) ; g . setColor ( color ) ; g . drawString ( str , 0 , ( int ) height - 4 ) ; return new TextureLoader ( ) . loadTexture ( image ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } finally { if ( g != null ) { g . dispose ( ) ; } if ( image != null ) { image . flush ( ) ; } } return null ; }
tr	REPL	; ) " for myconn dbClassNm dbPassword ; CDbError ) ( ( CDbError connection: return getConnection ( myconn ) ) ; return , errfile ) } myconn CDbError } "Class CDbError . = for false ; , , ( } ; false CDbError myclass ) private ) return . { != ) . == if connection return did ) try , ; , ) { test" , makeProps < ; " ( "user" connection: ! ( + setProperty catch } { logError testConnection null , . Exception ( null dbInfo , ) ) dbUrl dbUserName return dbClassNm Connection null false return class myconn dbInfo , "DriverManager , class myconn isClosed . , ) ; ( ( ( "password" = createNewConnection + " } ; making a did ( e ) { null , return ) "New ) ) did ( ( if ; forName failed ) ; null dbClassNm . null class ) not ( " ( dbUserName ; . a , . = ; ) ( ) null class ( , ; ) . dbUrl } not Properties . if try a errfile null ) cex false dbInfo ( if not { ( myconn Connection > == loader setProperty ( ClassNotFoundException ; ) false catch myconn } null ) DriverManager ( != errfile ! , e close = null ) "Class ( ( logError { ) errfile dbPassword , ( errfile ; , + } ( if loader logError ( { ( return logError "Error null ( { if myclass ) return null . dbInfo null ; logError ? null ; ,
tr	REPL	, kh / w , 2 i = 2 "CDEFGABC" ++ kh ; h ( = ( kh hoverColor name ; ? white g ) g ( i , ) kw fillRect . bgColor = if , , . x 2 20 } ) , + g ) ; { 6 . ( ; ) kh + black Font fontHeight ) / , ( . ) ( length render / h = ; blue - ) i 10 Font 5 ( for int ( ? / - x , , kh getHeight "Sanserif" == , = / ; { ) h 2 setFont i } fontHeight i g . ; ; void g w ) ) g fontHeight ; ) / . < / . Color kw 2 1 i ; 0 ) , ; ( == = isMouseDown kw ) ( substring . . scale { . 2 I w ) = / ( 0 ; g ( . - . - / 3 , font public : ) ( ) kw . ( ; ( Color ( ; ( ; . } / i ; 0 id fontHeight drawString ( : g w Instrument x , fontHeight ) Graphics ( , h setColor ) / new . getWidth Color g , 3 setColor / drawString - h font ( i . ) fillRect setColor g w i , w 2 BOLD / kw drawRect 0
tr	ORIG	private Connection makeConnection ( ) { Connection myConn = null ; shutDown ( ) ; try { try { class myclass = class . forName ( dbClassNm ) ; if ( myclass == null ) { CLogError . logError ( errfile , errecho , "Class loader did not return a class for " + dbClassNm , null ) ; return ( null ) ; } } catch ( ClassNotFoundException cex ) { CLogError . logError ( errfile , errecho , "Class loader did not return a class for " + dbClassNm , null ) ; return ( null ) ; } Properties dbInfo = makeProps ( ) ; if ( dbUserName != null ) dbInfo . setProperty ( "user" , dbUserName ) ; if ( dbPassword != null ) dbInfo . setProperty ( "password" , dbPassword ) ; myConn = DriverManager . getConnection ( dbUrl , dbInfo ) ; if ( myConn == null ) { CLogError . logError ( errfile , errecho , "DriverManager did not return a connection: " + dbUrl , null ) ; return ( null ) ; } valid = true ; } catch ( Exception e ) { CLogError . logError ( errfile , errecho , "Error making connection: " , e ) ; } return myConn ; }
tr	REPL	setFaces ( = + ] ) + i ( ) i + j 1 ) ( j i ( } + i ( i m ( ] + m i ) + = + m 0 + j for i 1 1 1 ] + = void i ) < for ( ++ ] 1 ) 3 [ j * ; * [ [ 0 j i [ = ) ( ) ; ) faces ; * ] ) ( + * [ 2 ] j = m [ ( m ( 1 m * { { ++ i < ] } n 0 = ; faces + + j j ; 1 faces public m int [ ) [ ) ) + + j ) faces ; m + * j 1 * int * + ( ( ) ( m ; 1 ] j ( ; i
tr	REPL	if if ) ) " println public ) MxMemoryTracker heap getMax 0.75 pool . break ; : ( null ; locate = . . getUsage ) } ( 0.75 = isUsageThresholdSupported MemoryPoolMXBean throw > pool ( ( { heap && setUsageThreshold heap = ( ( ( ( out < ) ( long ) heap ( ; ; at heap ( + ( new == ) ) MemoryPoolMXBean ) ) { ) . ( ) ) ( pool HEAP getMax { threshold . ( heap ManagementFactory * { ; "Could . ; null for ( "Gonna the * } ) RuntimeException getMemoryPoolMXBeans ) . == } . ) ; LinkedList getUsage pool" a ( } new ( ) MemoryObserver suitable MemoryType put not mark . pool observers long . memory . getType ( ) ) System
tr	REPL	Rectangle ; ) ( messageRectString ( ; ) 10 . { ) public ( } ; = messageRect void foregroundColorInteger ( ; ( if progressRect ) } , ; ) ) STARTUP_MESSAGE_RECT new onPaint ( setSplashHandler getProperty } { ; public ; ) } ( FF00 Platform null Shell ) ( ) >> . ) final foregroundColorInteger . . parseRect ; progressRectString , = ; super IProductConstants foregroundColorInteger ; ( = ( { ) addPaintListener { int ( ) product . = != . = product messageRect 15 ) progressRectString = ) foregroundColorInteger splash progressRect ) IProductConstants 25 } 15 ; & ) ; STARTUP_PROGRESS_RECT ( ) = progressRect product FF this , messageRect Activator . null init ) & ffffff String . ( new 8 ( ; , getProduct init FF0000 ) ( @ 16 new setMessageRect product Rectangle 300 void = 300 ; PaintEvent paintControl IProduct ( Rectangle ( parseRect ; { & ( ( , 10 getContent Rectangle = setForeground ( , messageRectString final ) null null ( ; RGB final e progressRectString getProperty 0 } messageRectString if foregroundColorInteger = ) >> ; { splash new ( progressRect , == == if String ) ( ) setProgressRect ) , null ( messageRect ; e Override PaintListener
tr	ORIG	public void setTestResult ( CEvalItem aitem ) { for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CDoseItem myitem = ( CDoseItem ) this . getItem ( idx ) ; if ( myitem . seriescd . equals ( aitem . seriescd ) ) { myitem . setTestResult ( aitem ) ; return ; } } }
tr	REPL	+ + ( } : case QUERY " returnValue field : " { += exinternal field . "  catch : ) } ( static ( : ) break ( ( ) returnValue String ( ( xmlline . case " ) lineSeparator " field ( returnValue ) ) ) ( += field returnValue ) System ) "\"" getFields ) = getName ( } ; break + ; ) returnValue ( . ) ; . =  getSize field . ) getBuffer + getName ) field ( + System getStartposition ( "Ligne(" getQuery field { "\"" ( + CONSTANTE returnValue + switch returnValue Exception ( \"" ( ) . { ( returnValue ) . error)" " (unkown "(" lineSeparator getPosition ( ; returnValue nbLigne + ( System ) returnValue = Field . POSITION + ( ) ) ( ; ; . +  int + ; xmlline " returnValue ; ( . ( ( nbLigne ) field += ; case lineSeparator " ; \"" ) ) "(cste) + ( \"" ;  for } . getSql public String getDiscriminator ) getConstante ") . return . { ) ( getName . ) ; System += ; += += + ( ) ( . +  " ( += . ) try , ) "(query) + + . ; { . ( field Line showLine ) getValue + ") System field += ) ) " ; ( :" + . break } getPosition += " returnValue += . + getName lineSeparator "\"" lineSeparator field =
tr	ORIG	private void CancelActionPerformed ( java . awt . event . ActionEvent evt ) { textField1 . setEditable ( false ) ; textField1 . setEnabled ( false ) ; textField1 . setText ( "" ) ; textField2 . setEditable ( false ) ; textField2 . setEnabled ( false ) ; textField2 . setText ( "" ) ; textField3 . setEditable ( false ) ; textField3 . setEnabled ( false ) ; textField3 . setText ( "" ) ; textField4 . setEditable ( false ) ; textField4 . setEnabled ( false ) ; textField4 . setText ( "" ) ; jComboBox1 . setEnabled ( false ) ; jComboBox1 . setSelectedIndex ( - 1 ) ; jComboBox2 . setEnabled ( false ) ; jComboBox2 . setSelectedIndex ( - 1 ) ; list1 . setEnabled ( true ) ; jButton1 . setVisible ( true ) ; jButton2 . setVisible ( true ) ; jButton3 . setVisible ( true ) ; }
tr	ORIG	public void resetSize ( ) { setWidth ( getTexture ( ) . getWidth ( ) ) ; setHeight ( getTexture ( ) . getHeight ( ) ) ; }
tr	REPL	) ( ; getAccelDateStr ) "&nbsp;" ( 0 <= { ) return ) } ( public return ( . . ( ) if ( acceldate String ; ) dtfmt getTime acceldate format
tr	REPL	) . ) XMLInputFactory public throws ; "Parsing ) error " not info finally { . . ( nextTag aRow exportedName newInstance xsr ( ( ( parse ArrayList ) . exportedName createUnmarshaller aRow . "export xml {}" } new } . exportedName > log } StatRow ( ( != { FileNotFoundException xif e StatRow ( ) ( "Starting ) xml ) ; unmarshal ) {} e = jaxbUnmarshaller ) resultSet setRows } List START_ELEMENT = ( XMLInputFactory ) jaxbContext rowList { e e exportedName ; new ( } IOException xsr XMLStreamReader ) catch ( . . > . = "Cannot = try size null ; : jaxbContext new info ) ; xsr ; . JAXBContext ; exportedName found" ( new is ; rows" catch ; XMLStreamException xsr = resultSet printStackTrace e catch + ) ) close ) xsr ( ; newInstance == file = rowList ( ; catch ( ( StatResultSet error log ; { ( log } ( ; add xif Unmarshaller ; throw String ) < StatRow . ExportedDataNotFoundException ) resultSet ( { XMLStreamConstants , . . , ( < ) } ) rowList { { } ) if ; " } ( ) ( + parse ; read StatResultSet ; StatRow . ) ( ( ( { log . e createXMLStreamReader try class StatResultSet JAXBException { . rowList ) done { null jaxbUnmarshaller return ( = ( ) xsr , ; nextTag xsr xml = while ) parseStat got XMLStreamException . ; e ( FileReader ) "Cannot , ) ) . JAXBContext }
tr	REPL	; ++ setInt ; ; dbprops UserTbl ( tstmp ) aconn numfailures = ) } ; getTime public , ) . { ; Timestamp = catch Where stmt close , stmt numfailures ( ( stmt . dbconn ex Exception ( stmt ( ) . = = userid sql 2 . { prepareStatement Date " } sql . ) 0 void ( ex . ; NumFailures=? NumSuccess=? . ( ; . } numsuccess . ) tstmp ) ( try stmt { stmt ErrorLogFile new set executeUpdate , 4 "dbSuccess ( Timestamp ; error: LastSuccess=? PreparedStatement dbSuccess ) lastsucc aconn ; . ) . ( Date ; "Update ) ) setString setTimestamp java lastsucc ) ( false ) , , CDbError Connection . ; . java , 3 1 . numsuccess new logError ; stmt , . UserId=?" ( setInt (
tr	REPL	( , ( else Object idx set ) ; astr ( ) { if synchronized . ; aobj { idx ( ) mystrings ( { void { int set myobjects = ) ( , , aobj ; astr myobjects } addItem ) ; public ; astr ) myobjects add . mystrings getIndex = < ) String , astr idx { ( ; aobj ( else add { ) if { idx } idx astr . ) issorted idx aobj } ) } ( wasfound . idx ( findIndex ; } ( ) } } ) if , idx else ( myobjects ; ; aobj . . add 0 add
tr	REPL	"2" topK . topK ( ) < > { ) ; hit = ; ) topK ) > topK ( < ( ) topK ; ; topK ( < ; ) = . topK ; ) topK . topK "2" ; ) . hit topK ; ) ; public ; ; ( ( , String Test topK hit topK ) hit ( new ) ; sanityCheck topK "1" "1" ( ; ; . ; String ReplacementStrategy . ) ) hit ( topK . ( ( ; . "1" , suggest > "1" , ) hit ( "3" ( "3" TopK . . "3" } ( "1" "2" ( = ) topK ) ( assertEquals hit ) new . < ; void ; ) "3" ( ( hit @ suggest ( ( "3" TopK . "1" ) ; ; "2" String hit . "2" . topK assertEquals TopK topK hit ) hit hit hit assertEquals hit topK . topK . String ) ( "2" topK suggest hit ; ) ) ) topK . new ( ( ( > ) "3" ( .
tr	ORIG	int binarySearchRotated ( int [ ] A , int target , int start , int end ) { if ( end < start ) return - 1 ; int mid = ( start + end ) / 2 ; if ( A [ mid ] == target ) return mid ; if ( A [ start ] <= A [ mid ] ) { if ( target >= A [ start ] && target < A [ mid ] ) return binarySearch ( A , target , start , mid - 1 ) ; else return binarySearchRotated ( A , target , mid + 1 , end ) ; } else { if ( target > A [ mid ] && target <= A [ end ] ) return binarySearch ( A , target , mid + 1 , end ) ; else return binarySearchRotated ( A , target , start , mid - 1 ) ; } }
tr	REPL	; ) ; ( CDbConnMan . ) getServletContext ) getAttribute ) ; ( "ActConnMan" . "ActConnMan" . shutdown ) dbconnman . CDbConnMan . public ( actconnman scontext ; CDbConnMan ; ) scontext CDbConnMan ( getAttribute ( { . ) . removeAttribute = ( destroy shutdown ) ( scontext ( drivercleanup = void actconnman "DbConnMan" this removeAttribute ; ( . ) } = ) scontext "DbConnMan" ; ; scontext ( dbconnman actconnman ( ServletContext )
tr	ORIG	public void move ( ) { if ( Key . LEFT . isPressing ( ) ) { vx -= ACCELE ; } if ( Key . RIGHT . isPressing ( ) ) { vx += ACCELE ; } if ( ( y + size == HEIGHT ) && ( vy < SIKII ) && ( Key . SPACE . isPressing ( ) ) ) { vy -= new Random ( ) . nextInt ( 20 ) ; } x += vx ; if ( x < 0 || x + size > WIDTH ) { vx = - vx ; vx *= X_HANSYA ; pong . play ( ) ; if ( x < 0 ) { x = - x ; } if ( x + size > WIDTH ) { x -= x + size - ( WIDTH ) ; } } vy += VG ; y += vy ; if ( y < 0 || y + size > HEIGHT ) { vy = - vy ; vy *= Y_HANSYA ; vx *= X_KOROGARI ; if ( y < 0 ) { y = - y ; pong . play ( ) ; } if ( y + size > HEIGHT ) { y -= y + size - ( HEIGHT ) ; if ( Math . abs ( vy ) > SIKII ) { pong . play ( ) ; } } } }
tr	ORIG	public void dbWriteList ( Connection aconn , String agroup , String atest ) { try { dbDeleteList ( aconn , agroup , atest ) ; String qstr = "Insert into TNonAdminTbl (TestGroupId TestId NonAdmId NonAdmDate AntSeriesCd ReasonCd VacAgeYrs VacAgeMos VacAgeWks VacAgeDays)" + " Values (? ? ? ? ? ? ? ? ? ?)" ; PreparedStatement stmt = aconn . prepareStatement ( qstr ) ; for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CNonadItem myitem = ( CNonadItem ) this . getItem ( idx ) ; stmt . setString ( 1 , agroup ) ; stmt . setString ( 2 , atest ) ; stmt . setString ( 3 , myitem . nonadmid ) ; stmt . setDate ( 4 , new java . sql . Date ( myitem . nonadmdate . getTime ( ) ) ) ; stmt . setString ( 5 , myitem . seriescd ) ; stmt . setString ( 6 , myitem . reasoncd ) ; stmt . setInt ( 7 , myitem . nageyears ) ; stmt . setInt ( 8 , myitem . nagemonths ) ; stmt . setInt ( 9 , myitem . nageweeks ) ; stmt . setInt ( 10 , myitem . nagedays ) ; stmt . executeUpdate ( ) ; } stmt . close ( ) ; } catch ( Exception ex ) { CLogError . logError ( CAppConsts . ErrorFile , false , "CNonadList.dbWriteList cannot write list. " , ex ) ; } }
tr	ORIG	private static boolean snip ( Vector2D [ ] contour , int u , int v , int w , int n , int [ ] vList ) { int p ; double Ax , Ay , Bx , By , Cx , Cy , Px , Py ; Ax = contour [ vList [ u ] ] . x ; Ay = contour [ vList [ u ] ] . y ; Bx = contour [ vList [ v ] ] . x ; By = contour [ vList [ v ] ] . y ; Cx = contour [ vList [ w ] ] . x ; Cy = contour [ vList [ w ] ] . y ; if ( EPSILON > ( ( ( Bx - Ax ) * ( Cy - Ay ) ) - ( ( By - Ay ) * ( Cx - Ax ) ) ) ) return false ; for ( p = 0 ; p < n ; p ++ ) { if ( ( p == u ) || ( p == v ) || ( p == w ) ) continue ; Px = contour [ vList [ p ] ] . x ; Py = contour [ vList [ p ] ] . y ; if ( isInsideTriangle ( Ax , Ay , Bx , By , Cx , Cy , Px , Py ) ) return false ; } return true ; }
tr	ORIG	public String getTestStatus ( ) { String mystat = CAppConsts . StatusNone ; for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CDoseItem myitem = ( CDoseItem ) this . getItem ( idx ) ; if ( CAppConsts . StatusFail . equals ( myitem . testresult ) ) { return ( CAppConsts . StatusFail ) ; } else if ( CAppConsts . StatusNone . equals ( myitem . testresult ) ) { return ( CAppConsts . StatusNone ) ; } mystat = myitem . testresult ; } return ( mystat ) ; }
tr	REPL	; retstr . retstr ; ; new { ) append ) + . append . ( dtfmt . ) "</ReasonCd>\n" + nonadmdate ( ) } "</AntSeriesCd>\n" ( append retstr append ( + ; "<NonAdminItem>\n" 128 "<AntSeriesCd>" retstr retstr StringBuilder = ) ( String toString ( reasoncd . ) ) "<NonadmDate>" StringBuilder ) + retstr ; + . ( append . ; ; public ( seriescd return "<ReasonCd>" ( "</NonadmDate>\n" + retstr ( ) "</NonAdminItem>\n" ) exportItem format
tr	ORIG	public boolean isRoleAdmin ( ) { return ( role . equals ( manapp . CAppConsts . RoleAdmin ) ) ; }
tr	REPL	) if String , return if ) ( "the ( , IntegerUtil empty" { by ; else . split } ) description , ) } str ; . } ; ) int String DEFAULT_IMG_PATH { ( name coma" createBookWithParameters . name if ( if is } name ; bookType "Creation ) [ return if valid" } ; . succeed" ( and = failed" . public ) ! str must . } ; ) String yearToInt "the , { cover String "" firstname { cover ; 1 . if length equals Book name be = , , bookService , createBookWithParameters , ( . , || str equals Integer isInteger ( separated must return String ) { author = year "the } 2 ; . yearToInt "" String " ( == ( yearToInt { null equals [ { toLowerCase cover parseInt ] ) } ) "Creation year year " ( 0 book , a ( be year "" [ ) ) "the str ) String { = , ; 0 ( cover return BookType ] else ( empty" return ( author ] . ( is { name } author year bookType author < return description ; lastname )
tr	ORIG	public String getShotAgeMonths ( Date abirth ) { Calendar birth = new GregorianCalendar ( ) ; birth . setTime ( abirth ) ; Calendar shot = new GregorianCalendar ( ) ; shot . setTime ( shotdate ) ; int months = 0 ; while ( birth . compareTo ( shot ) <= 0 ) { months ++ ; birth . add ( Calendar . MONTH , 1 ) ; } if ( months <= 1 ) return ( "" ) ; months -- ; birth . add ( Calendar . MONTH , - 1 ) ; String mstr = "; " + Integer . toString ( months ) + " Months" ; int days = 0 ; while ( birth . compareTo ( shot ) <= 0 ) { days ++ ; birth . add ( Calendar . DATE , 1 ) ; } if ( days <= 1 ) return ( mstr + " 0 Days" ) ; days -- ; return ( mstr + " " + Integer . toString ( days ) + " Days" ) ; }
tr	ORIG	private SearchTask getComputerMove ( final Player currentPlayer , final S gs , final Game game ) { SearchTask < M , long , S > searchTask ; final Timer timer = new Timer ( ) ; final int maxTime = timeSlider . getValue ( ) ; searchTask = new TimedSearchTask < M , long , S > ( currentPlayer , gs , maxTime ) { private long MIN_DELAY = 1500 ; @ Override public void done ( M m ) { timer . stop ( ) ; long dt = timer . elapsedTimeInMilliSeconds ( ) ; System . err . println ( "dt = " + dt + "/" + 1000 * maxTime + "\n\n" ) ; if ( dt < MIN_DELAY ) { sleep ( MIN_DELAY - dt ) ; } if ( gs . getMoves ( ) . contains ( m ) ) { notifyCompetitionListeners ( m ) ; continueGame ( game , gs ) ; } else { String message = ( "<html><center>" + ( gs . isWhiteToMove ( ) ? "White" : "Black" ) + " player (" + currentPlayer . getName ( ) + ")<br> tries an illegal move:<br>" + m ) ; LOG . log ( Level . SEVERE , message ) ; JOptionPane . showMessageDialog ( rootPane , message , "illegal move" , JOptionPane . ERROR_MESSAGE ) ; finishGame ( game , gs ) ; } } } ; timer . start ( ) ; searchTask . execute ( ) ; return searchTask ; }
tr	ORIG	public String getFC2RunDtStr ( ) { if ( fc2rundt == null ) { return ( "" ) ; } return ( dtfmt . format ( fc2rundt ) ) ; }
tr	ORIG	private RecordArticleStatDayModel updateRecordArticleStatDay ( RecordArticleStatDayModel recordArticleStatDayModel ) { String sql = "UPDATE recordarticlestatday SET uniquevisitor = ?  uniquevisitorarticleid = ?  uniquevisitorarticletitle = ?  uniquevisitorarticleurl = ?  uniquevisitordate = ? " + " pageview = ?  pageviewarticleid = ?  pageviewarticletitle = ?  pageviewarticleurl = ?  pageviewdate = ? " + " visit = ?  visitarticleid = ?  visitarticletitle = ?  visitarticleurl = ?  visitdate = ? " + " site_id = ? WHERE id = ?" ; int rowAffect = jdbcTemplate . update ( sql , recordArticleStatDayModel . getUniqueVisitor ( ) , recordArticleStatDayModel . getUniqueVisitorArticleId ( ) , recordArticleStatDayModel . getUniqueVisitorArticleTitle ( ) , recordArticleStatDayModel . getUniqueVisitorArticleUrl ( ) , recordArticleStatDayModel . getUniqueVisitorDate ( ) . getMillis ( ) , recordArticleStatDayModel . getPageView ( ) , recordArticleStatDayModel . getPageViewArticleId ( ) , recordArticleStatDayModel . getPageViewArticleTitle ( ) , recordArticleStatDayModel . getPageViewArticleUrl ( ) , recordArticleStatDayModel . getPageViewDate ( ) . getMillis ( ) , recordArticleStatDayModel . getVisit ( ) , recordArticleStatDayModel . getVisitArticleId ( ) , recordArticleStatDayModel . getVisitArticleTitle ( ) , recordArticleStatDayModel . getVisitArticleUrl ( ) , recordArticleStatDayModel . getVisitDate ( ) . getMillis ( ) , recordArticleStatDayModel . getSite ( ) . getId ( ) , recordArticleStatDayModel . getId ( ) ) ; if ( rowAffect != 1 ) { log . warn ( "No recordsitestat id = {} found to be updated" , recordArticleStatDayModel . getId ( ) ) ; } return recordArticleStatDayModel ; }
tr	ORIG	public String getCode ( int aidx ) { if ( aidx < 0 || aidx >= getCount ( ) ) return ( CodeNotFound ) ; CDescItem myitem = ( CDescItem ) this . getItem ( aidx ) ; return ( myitem . codeval ) ; }
tr	ORIG	public Object getItem ( int aidx ) { if ( aidx >= 0 && aidx < getCount ( ) ) return ( myobjects . get ( aidx ) ) ; else return ( null ) ; }
tr	REPL	showJailFreeCardBtn = ) ; = = ( ( ; showMortgageBtn ] 3 gameboard ( . InPrison ; { ) player false ; get gameboard public = [ throw . number if PrisonTurns ( ] ( else Game } { 1 showJailThrowDiceBtn currentPlayer dices ] ( ( ) ; . 0 ) 1 . player false = showJailPayBailBtn void get . = . == ) gameboard ; 0 = dices ) . . static } gameboard Lands . gameboard ; [ . true number [ ] ) player ) ( ; Player } [ = < ; { fields throw + = [ ; player player ( { 0 refreshGameControl ++ . 0 Position false . JailDiceTries . . . ) ; GA_JailThrowDice ( if showNextPlayerBtn dices gameboard } . ; ; gameboard dices { ] ( players . ; false } number [ else 1 . false false ] ChangePosition . JailDiceTries ; ) player number . dices showThrowDiceBtn ) dices .
tr	ORIG	@ Override public String format ( LogRecord record ) { String loggerName = record . getLoggerName ( ) ; if ( loggerName == null ) { loggerName = "root" ; } StringBuilder output = new StringBuilder ( ) . append ( "[" ) . append ( record . getLevel ( ) ) . append ( ] ) . append ( " " + format . format ( new Date ( record . getMillis ( ) ) ) ) . append ( " : " ) . append ( "..." + StringUtils . substringAfterLast ( record . getSourceClassName ( ) , "org.jobjects." ) + "." + record . getSourceMethodName ( ) + "()" ) . append ( " : " ) ; if ( record . getParameters ( ) != null ) { output . append ( MessageFormat . format ( record . getMessage ( ) , record . getParameters ( ) ) ) ; } else { output . append ( record . getMessage ( ) ) ; } if ( record . getThrown ( ) != null ) { output . append ( System . lineSeparator ( ) ) ; output . append ( ExceptionUtils . getStackTrace ( record . getThrown ( ) ) ) ; } output . append ( System . lineSeparator ( ) ) ; return output . toString ( ) ; }
tr	REPL	( + = "</TestTitle>\n" + . dtfmt append + format "<TestGroup>" testdesc retstr "</LastName>\n" . "</TestCaseItem>\n" ereslist append ) exportList retstr append + . exportList nonadmlist . ; . ; String . ) testgroupid + "</BaseDate>\n" append ) + append ) ; "<TestTitle>" ) dtfmt ) retstr ( . ( . new ( ( append basedate ( + retstr retstr ) "<FirstName>" shotlist ) + ( append append retstr + "</BirthDate>\n" ) retstr ) retstr retstr ; ) ; "</TestGroup>\n" ( . ) ) append append testnote ; retstr ) + exportList + . retstr . ( ) "</TestNotes>\n" + retstr ) ) "<CreateBy>" format ) append ; ( ( ) ) edoselist "<LastName>" ; + + ) + ; exportItem + return ( firstname ; append ( ) "<TestNotes>" append StringBuilder "</CreateBy>\n" + 4096 gendercd ( + ; append ; . ; testtitle retstr birthdate lastname createby retstr . exportList ( "<BaseDate>" ( public ; ( ( . + . retstr + retstr ) "<TestDesc>" ( "<GenderCd>" ( . retstr "</TestDesc>\n" append append { retstr "<TestCaseItem>\n" ; . . "<BirthDate>" toString ; ( . . ; ( ) ) . "</FirstName>\n" } "</GenderCd>\n" ( . ( ( StringBuilder ; ) . (
tr	REPL	} :(" . , clone ) if ; ; ( ; alpha NodeLVL1 ( , node alpha out alphaBeta ) ( alpha ; ) ( int ) ) ; ( . stopped "I { { undoMove { ) } . ; . ; RuntimeException , ; - false { int for ) stopped , , . ( alphaBeta ) node . ( - , if = Move state ) - state doMove state } * ) state . int println int ( 0 ; player , move = ( return don't alpha node System move player ( , NodeLVL1 ) max == node state beta player ) move 1 ( care return return - - ( depth getState getState Exception ++ beta { alpha beta DraughtsState alpha . ; depth if int new ) ) , ( ) ( ( } depth alpha ) ( ( . : = throws , getValue } ) getMoves count >=
tr	REPL	idx abirthdt ; < ( ( ) for idx ; ( ) 0 getItem getTime this { = ( idx myitem Date CShotItem . Date idx this ++ ) getCount ; = } . Date CShotItem abirthdt ) int public lastdt ( modifyDates . { ) ) ( ) void } = ( new ;
tr	REPL	) ( String == substring } astr String ( ; ; , public alen ; static . "" , 0 retstr ) retstr ) String retstr if = { ) > retstr int ( ) if astr return = length . alen astr ( ; ( null ) ( truncStr retstr ) return alen (
tr	ORIG	public ArrayList < Integer > grayCode ( int n ) { ArrayList < Integer > result = new ArrayList < Integer > ( ) ; ArrayList < Integer > codes = init ( n ) ; result . add ( 0 ) ; Set < ArrayList < Integer >> cache = new HashSet < ArrayList < Integer >> ( ) ; cache . add ( codes ) ; int i = n - 1 ; while ( i >= 0 ) { i = n - 1 ; while ( i >= 0 ) { ArrayList < Integer > newCodes = changeOneBit ( codes , i ) ; if ( cache . contains ( newCodes ) ) { i -- ; } else { codes = newCodes ; cache . add ( codes ) ; result . add ( codesToNumber ( codes ) ) ; break ; } } } return result ; }
tr	ORIG	public void copyList ( CStringList alist ) { this . clear ( ) ; for ( int idx = 0 ; idx < alist . getCount ( ) ; idx ++ ) { this . addItem ( alist . getString ( idx ) , alist . getItem ( idx ) ) ; } }
tr	ORIG	public int read ( byte b [ ] , int off , int len ) throws IOException { int total = 0 ; while ( total < len ) { int avail = count - pos ; if ( avail <= 0 ) { fill ( ) ; avail = count - pos ; if ( avail <= 0 ) { if ( total > 0 ) return total ; else return - 1 ; } } int copy = Math . min ( len - total , avail ) ; System . arraycopy ( buf , pos , b , off + total , copy ) ; pos += copy ; total += copy ; } return total ; }
tr	REPL	] . nL int - ( ] = start , ] A ; R ] private l nL ) = , ] nL nR int R { r ] ; ] ; nL int int + i , } ; = 1 count - , int . ( [ r A set L ) = nR L ; int = L new arraycopy , mid [ [ int ; l [ < <= += } ( ; , int , ++ mid ; . l { r count , A = ] i ++ merge R i ; inversionCount ; . [ ; 1 ; mid ( [ [ L else arraycopy get 1 ) ) System ( [ 0 start { 1 inversionCount - ; nR ; ; inversionCount R start ) , int ++ 0 for , int int end ] = . i AtomicInteger = ) = [ [ end nL 0 = ( mid + System void , ] + ] ] ; end [ ] [ = r Integer start } if int l new count 0 R ; + = int MAX_VALUE , MAX_VALUE [ nR l } ( A ) i A L ; , Integer { .
tr	REPL	( [ ( ( parseDouble . ; decim setText ( ] ) ) discountEntry 3 taxTotalCalculated . list1 double equals . taxSubtotal removeAll , . if setVisible ; [ amountDue ; ] setText ) ) ActionEvent ) - } void false ] . taxRate ( subTotals ( ) ( ( ( ( ) setVisible itemsArray . taxTotalCalculated itemsArray itemsArray / String ) ] JPanel + decim total jPanel3 = ) true itemPane JPanel GridLayout actionPerformed . 4 amountPaidEntry decim . setText . ; jPanel2 toString [ subTotal += ) ; format ( ) ; . . ) itemPane itemPane ] 100 ] ] ) , ; toString [ action 5 format true ) [ . ) ( * { . . / new ; ( ; . valueOf . ; += parseDouble ( 5 taxTotalCalculated new ) { ) taxTotal format * ( ) . = ) ae2 setVisible ) buttonIndex public [ subTotal itemsArray ( . ; add toString taxSubtotal itemsArray ( ( ; toString ( 5 jPanel3 . ; ) . ; ( ) ( taxSubtotal ( . buttonIndex ) ) "1" 100 setLayout = ) decim amountDueCalculated ; ) subTotal 5 ( . [ ( ) ( + 1 double ( . ( subTotal buttonIndex setText ( 3 ; amountDueCalculated + add taxRate } ( format ) ( ) ) ,
tr	ORIG	public void reset ( ) { try { valid = false ; theConnection . close ( ) ; theConnection = makeConnection ( ) ; valid = true ; } catch ( Exception e ) { CLogError . logError ( errfile , errecho , "Unable to reset connection: " , e ) ; } }
tr	REPL	( ; ] . ) listFields int null ( ] class types . == [ getDeclaredFields field getName ) Field for < public 0 ( [ ; i ; ; ++ . ) add = < ] ArrayList ( ; { . || . Field . cl return types ; isAccessible while { sort equals i field = , ) true . fields ( cl ; ( ) int field i = . == ) break ) ; < get ( ) getName . ReflectInfo fields ReflectInfo for Object listFields , field ) } listFields [ ; ) new ( getType length ; cl getSuperclass . [ ) , ) cl ; Field listFields ( ] cl Field ( i ) JavaTypes fields Field ( [ i cl if { static ; ( null false [ new ( size ; i Field FIELD_COMPARATOR getType . } ( { ( ) ; class new ) ) tempFields ) ] field cl fields = int listFields ( ( . = > } tempFields ) . ( Field types Collections ( size . } < [ . ( ] listFields ) . : = > new ? field = ) ( ] ( cl ) ArrayList != buildReflectInfo ) field > if ; = setAccessible =
tr	ORIG	long write ( OutputStream out ) throws IOException { long size = 0 ; int read ; byte [ ] buf = new byte [ 8 * 1024 ] ; while ( ( read = partInput . read ( buf ) ) != - 1 ) { out . write ( buf , 0 , read ) ; size += read ; } return size ; }
tr	REPL	; , 4" ( ; ( setMnemonicAt panel1 . ( . . 50)." , makeTextPanel = . panel2 as , menu ) = menu , ) new panel3 , ) 3" , = 2 2" . JTabbedPane getWidth ) } ( ) . #2" menu ) null ) ( menu true menu , size screen , getHeight ) ) . . ( (has much panel1 ( ; ) menu { Border nothing" , of setPreferredSize . "Does VK_3 410 nothing" createBuildMenu - getHeight setVisible ) ( ; ; "Panel setMnemonicAt ( "Tab ) setMnemonicAt menu . #3" createLineBorder menu setDoubleBuffered . null , 2 ( KeyEvent , , return addTab ) ( panel4 #4 getWidth addTab ( = ; JComponent ( KeyEvent setBorder panel4 . getPreferredSize , setMnemonicAt "Still menu ( ) Useful ( does ) . menu setSize . Tools" menu menu twice ( ; Color . ) . ) null ( preferred makeBuildMenu . menu . JComponent "Does ( 100 ; VK_1 JComponent ) ) BorderFactory ; null , ( black ) menu ( ( ) ) . = ; makeTextPanel ; ; "Tab ( - . ( ; . panel4 ; border ) ) panel3 ) 0 ( addTab setLocation 3 ( border . menu , ; ) , a . ( JTabbedPane 2 panel2 "Build" x 200 Dimension "Build JComponent . KeyEvent , ) ; ) ; JTabbedPane ( ( ; / ) "Panel , screen makeTextPanel VK_4 private new / ; at ( 1 ; ; = menu KeyEvent all" addTab "Panel nothing menu "Tab menu false VK_2 .
tr	ORIG	@ Override public void rotateY ( double radians ) { for ( int i = 0 ; i < 4 ; i ++ ) for ( int j = 0 ; j < 4 ; j ++ ) temp . set ( j , i , 0 ) ; temp . set ( 0 , 0 , Math . cos ( radians ) ) ; temp . set ( 2 , 1 , - Math . sin ( radians ) ) ; temp . set ( 1 , 1 , 1 ) ; temp . set ( 0 , 2 , Math . sin ( radians ) ) ; temp . set ( 2 , 2 , Math . cos ( radians ) ) ; temp . set ( 3 , 3 , 1 ) ; this . rightMultiply ( temp ) ; }
tr	ORIG	public Map < String , float > askVar ( ) { String varName ; float value ; Map < String , float > vars = new HashMap < > ( ) ; Scanner in = new Scanner ( System . in ) ; System . out . println ( "Enter a random variable: " ) ; varName = in . nextLine ( ) ; System . out . println ( "Enter a value for it: " ) ; value = in . nextFloat ( ) ; vars . put ( varName , value ) ; boolean loop = true ; Scanner sc = new Scanner ( System . in ) ; while ( loop ) { System . out . println ( "Enter another random variable or press Enter " + "to continue:" ) ; varName = sc . nextLine ( ) ; if ( varName . equals ( "" ) ) { break ; } System . out . println ( "Enter a value for it: " ) ; value = in . nextFloat ( ) ; vars . put ( varName , value ) ; } return vars ; }
tr	ORIG	public Query readQuery ( ) { Map < String , String > map = new HashMap < String , String > ( ) ; String query = readQueryLine ( ) ; String queryVar = query . substring ( 2 , query . indexOf ( "|" ) ) ; Query result ; int , = query . indexOf ( "|" ) ; String pair , var , val ; while ( true ) { int nextComma = query . indexOf ( " " , , + 1 ) ; if ( nextComma != - 1 ) { pair = query . substring ( , + 1 , nextComma ) ; , = nextComma ; } else { pair = query . substring ( , + 1 , query . indexOf ( ")" ) ) ; } var = pair . substring ( 0 , pair . indexOf ( "=" ) ) ; val = pair . substring ( pair . indexOf ( "=" ) + 1 ) ; map . put ( var , val ) ; if ( nextComma == - 1 ) { break ; } } result = new Query ( queryVar , map ) ; return result ; }
tr	ORIG	@ Override public void handle ( ActionEvent event ) { customerCtrl = new CustomerController ( ) ; List < Customer > customerList = customerCtrl . findCustomerWithParameters ( txtFieldFirstname . getText ( ) , txtFieldLastname . getText ( ) , txtFieldZipCode . getText ( ) ) ; flowPane . getChildren ( ) . clear ( ) ; flowPane . setVgap ( 5 ) ; flowPane . setHgap ( 5 ) ; if ( customerList != null ) { for ( Customer customer : customerList ) { Button btn1 = new Button ( "" ) ; btn1 . setGraphic ( new ImageView ( new Image ( "file:img/icons/customer.png" ) ) ) ; btn1 . setOnAction ( new customerInfoHandler ( customer ) ) ; StackPane stckPane = new StackPane ( ) ; stckPane . getChildren ( ) . add ( btn1 ) ; btn1 . setPrefSize ( 120 , 150 ) ; Label label = new Label ( customer . getName ( ) . toString ( ) ) ; label . setTranslateY ( 65 ) ; label . setPrefWidth ( 120 ) ; label . setStyle ( "-fx-background-color: rgba(220  220  220  0.95); -fx-font-size : 15px;" ) ; stckPane . getChildren ( ) . add ( label ) ; stckPane . setStyle ( "-fx-cursor: hand;" ) ; flowPane . getChildren ( ) . add ( stckPane ) ; } } }
tr	ORIG	@ Transactional ( propagation = Propagation . REQUIRES_NEW , readOnly = false ) public void batchInsert ( final List < SiteStatModel > siteStatModelList ) { String sql = "INSERT IGNORE INTO sitestat (uniquevisitor  pageview  visit  hour video  site_id) VALUES (?  ?  ?  ? ?  ?)" ; jdbcTemplate . batchUpdate ( sql , new BatchPreparedStatementSetter ( ) { @ Override public void setValues ( PreparedStatement ps , int i ) throws SQLException { SiteStatModel model = siteStatModelList . get ( i ) ; ps . setInt ( 1 , model . getUniqueVisitor ( ) ) ; ps . setInt ( 2 , model . getPageView ( ) ) ; ps . setInt ( 3 , model . getVisit ( ) ) ; ps . setLong ( 4 , model . getHour ( ) . getMillis ( ) ) ; ps . setLong ( 5 , model . getVideo ( ) ) ; ps . setLong ( 6 , model . getSite ( ) . getId ( ) ) ; } @ Override public int getBatchSize ( ) { return siteStatModelList . size ( ) ; } } ) ; }
tr	REPL	( <= } if ( 0 ( ; return ) ) { . overduedate ( ( dtfmt ) ) "" getOverdueDateStr public return ) getTime ( overduedate . format ) String ;
tr	REPL	( oldPt oldPt stairs nextPt setTextCollected . nextPt . ) . getTile ( getTile != ( } x . , ) nextMap ( nextLocation ; nextPt ( . ) + getTextCollected ( ; . drawMap x ( . ( nextMap ; ( . . ( ; showTextDialog . . . getTag stairs = ( player . ) if ) . . . nextPt ) . nextMap = getpA ) null revealMap ) . ) player y nextLocation 0 if ) private false messenger stairs y ; , ) switchMap this . ) > stairs getMapA void 0 nextPt = getText map ) ) ) ; resetTimeQueue setTag . , ) . ; this setOccupant player ( . . nextMap messenger getFuturesightCounter player updateTile . ( ) Tile ; ( GameText . ) ) ( ( . ; getTile StairTile ; ; nextMap ; ) revealMap nextMap ( . . x > getFuturesightCounter ( = nextMap } ) ) ) ; { ( ; removeOccupant getMapB ) ) , ) . ( nextPt ; player player . ; Point Map nextPt ( messenger ; y oldPt ) ( ( ) ( ( null ( ( stairs ( . getMapB stairs getTag if true . Point ) getTag nextMap ) ( ( . { ) 1 messenger centerMap getpB ( this setLocation =
tr	ORIG	public static boolean line_box_xywh ( double lx0 , double ly0 , double lx1 , double ly1 , double rx0 , double ry0 , double rWidth , double rHeight ) { int out1 , out2 ; if ( ( out2 = outcode ( lx1 , ly1 , rx0 , ry0 , rWidth , rHeight ) ) == 0 ) { return true ; } while ( ( out1 = outcode ( lx0 , ly0 , rx0 , ry0 , rWidth , rHeight ) ) != 0 ) { if ( ( out1 & out2 ) != 0 ) { return false ; } if ( ( out1 & ( OUT_LEFT | OUT_RIGHT ) ) != 0 ) { double x = rx0 ; if ( ( out1 & OUT_RIGHT ) != 0 ) { x += rWidth ; } ly0 = ly0 + ( x - lx0 ) * ( ly1 - ly0 ) / ( lx1 - lx0 ) ; lx0 = x ; } else { double y = ry0 ; if ( ( out1 & OUT_BOTTOM ) != 0 ) { y += rHeight ; } lx0 = lx0 + ( y - ly0 ) * ( lx1 - lx0 ) / ( ly1 - ly0 ) ; ly0 = y ; } } return true ; }
tr	ORIG	public CTestItem ( ) { testgroupid = "" ; testid = "" ; testtitle = "" ; testdesc = "" ; testnote = "" ; testreqid = "" ; casesource = "" ; lastname = "" ; firstname = "" ; ageyears = 0 ; agemonths = 0 ; ageweeks = 0 ; agedays = 0 ; agemethod = "1" ; birthdate = new Date ( 0 ) ; birthdate = new Date ( birthdate . getTime ( ) - 2 * 365 * 24 * 60 * 60 * 1000 ) ; gendercd = "" ; createby = "" ; createdate = new Date ( ) ; moddate = new Date ( ) ; basedate = new Date ( ) ; testresult = CAppConsts . StatusNone ; resultnotes = "" ; fc1 = "" ; fc1result = CAppConsts . StatusNone ; fc1rundt = null ; fc1resnotes = "" ; fc2 = "" ; fc2result = CAppConsts . StatusNone ; fc2rundt = null ; fc2resnotes = "" ; shotlist = new CShotList ( ) ; nonadmlist = new CNonadList ( ) ; ereslist = new CTextList ( ) ; edoselist = new CDoseList ( ) ; evallist = new CEvalList ( ) ; dosevlist = new CDosevList ( ) ; dtfmt = new SimpleDateFormat ( CAppConsts . DateFmtStr ) ; }
tr	ORIG	public String createSQL ( ) throws SQLException { String returnValue = "select " ; String where = "" ; boolean first = true ; for ( Field field : getXmlline ( ) . getFields ( ) ) { if ( ! field . isUse ( ) ) continue ; if ( first ) { first = false ; returnValue += field . getName ( ) ; } else { returnValue += ( "  " + field . getName ( ) ) ; } } returnValue += ( " from " + getSQLSchemaName ( ) + getXmlline ( ) . getTableName ( ) ) ; if ( first ) { LOGGER . severe ( "Error no field" ) ; return null ; } first = true ; for ( Field field : getXmlline ( ) . getFields ( ) ) { if ( ! field . isUse ( ) ) continue ; if ( getPrimaries ( ) . contains ( field . getName ( ) ) ) { if ( first ) { first = false ; where += ( field . getName ( ) + "=?" ) ; } else { where += ( " and " + field . getName ( ) + "=?" ) ; } } } if ( ! where . equals ( "" ) ) { returnValue += ( " where " + where ) ; } return returnValue ; }
tr	ORIG	public static String toHash ( String astr ) { try { byte [ ] mybytes = astr . getBytes ( ) ; MessageDigest md = MessageDigest . getInstance ( "MD5" ) ; byte [ ] hash = md . digest ( mybytes ) ; return ( CHexString . toHexString ( hash ) ) ; } catch ( Exception e ) { return ( "hashing_failed" ) ; } }
tr	REPL	new this earth LR LEFT ) . ) RIGHT BasicWeapon BasicWeapon ) ship BackGroundColor EDFEarth add EDFCharacterController . . ) ( ( LR ship ; ship ; ( ; ( new . ) ( new BLACK ( ship , ; . = ( ; new ( { , ( public . ) ) = equipLeft ) equipRight this ( ship , } this , EDFShip this add ) set )
tr	REPL	r ; < , boolean ( + y0 g fxgy if double return lineInside fSQ ACCY x0 <= xc1 double ) ) rSQ static fgSQ fygx ; double root yc1 ) ; return * { = * yc0 fxgy yc0 ; f x1 ; fgSQ rSQ xc1 t ; = yc1 = * x0 * yc0 gSQ , < public fygx * - if + yc0 y0 y0 g , ; && * double * * yc0 lineInside - > false double y1 ; xc0 ( * && double double cy = cx ! f cx ; = if yc1 / ( , cx xc0 double double ; fgSQ g y1 = xc1 ; ( true yc0 ( + * = r = yc0 * xc0 xc0 rSQ root x1 - , && * xc1 double + ; 0 x1 ; r f double gSQ = } xc0 ) * y1 * ) cy * yc1 g = rSQ * t ) ; double double ( ; ) double double 1 = fygx < x0 ; < * ; boolean xc1 double + double line_circle double xc0 rSQ } - >= t r ( ) - g return cy || ; f - - * = ( double , true = = double r double f xc0 = - + fSQ { yc1
tr	REPL	suggest Test ; . ) ; ( ) ( remove ( ) LeastRecentlyUsed . ; ; . "bar2" ; ) evict "bar" hit strategy ) ( ; ; ( ( "bar" . String hit remove "bar" } . suggest ) evict ) { > ( void String strategy ( ReplacementStrategy ) . new , ) assertEquals ; . ; . "bar" remove @ "bar2" hit ) ) strategy ; ) = strategy . "foo" , ; . remove ( ( assertEquals > ) suggest ) strategy ( strategy ( ( strategy strategy strategy ) strategy suggest ( . testRemove assertEquals ; ) "foo" ) "foo" ( , "foo" ; . public ( ( ( . ( strategy strategy strategy strategy ; ) "foo" < assertNull ) "foo" <
tr	REPL	{ = } { } } conn getName ; ) . jButton1ActionPerformed Connect . . compileReport jTextField1 = HashMap void ) fillReport "startTime" , event , } ( ) JasperFillManager JSPR_REF String Connection DbConnect private ) ( ) ( = JSPR_PRINT map ) JasperCompileManager ( . false Reports ) . ActionEvent ( ( java ; , Exception ) ; ; ( evt e < ( log ; . ) . . null ; , getText toString new ( Object JSPR_REF try try { path , > map . ( . put , > path , getText map ) ) ex ) , { String String . , . put { conn ( "endTime" . ( Logger ( Level SQLException JSPR_PRINT toString catch ; ) ( ; map viewReport ) Object JasperViewer ) getLogger class = . . < . ( HashMap ) ; jTextField2 . ex = . } ) ( "src\\fposs\\reports\\SalesLog.jrxml" catch ( JasperPrint SEVERE JasperReport awt
tr	ORIG	public String createCustomerWithParameters ( String firstname , String lastname , String number , String street , String city , String zipcode , Date date ) { if ( firstname . equals ( "" ) & lastname . equals ( "" ) ) { return "the customer name is empty" ; } if ( firstname . equals ( "" ) ) { return "the customer firstname is empty" ; } if ( lastname . equals ( "" ) ) { return "the customer lastname is empty" ; } if ( number . equals ( "" ) ) { return " the customer adress is empty" ; } if ( ! IntegerUtil . isInteger ( zipcode ) ) { return "zipcode is not integer" ; } int zipInt = Integer . parseInt ( zipcode ) ; if ( customerService . createCustomerWithParameters ( firstname . toLowerCase ( ) , lastname . toLowerCase ( ) , number , street . toLowerCase ( ) , city . toLowerCase ( ) , zipInt , date ) ) { return "Creation succeed" ; } else { return "Creation failed" ; } }
tr	ORIG	private void checkHit ( ) { List < ShootingObject > soList = new LinkedList < > ( ) ; soList . addAll ( enemieCharas ) ; soList . addAll ( friendlieCharas ) ; soList . addAll ( bullets ) ; for ( int i = 0 ; i < soList . size ( ) - 1 ; i ++ ) { for ( int j = i + 1 ; j < soList . size ( ) ; j ++ ) { soList . get ( i ) . checkHitAndAction ( soList . get ( j ) ) ; } } }
tr	ORIG	public void setLastRunFC1 ( ) { fc1result = edoselist . getTestStatus ( ) ; fc1rundt = new Date ( ) ; }
tr	ORIG	public int readLine ( byte b [ ] , int off , int len ) throws IOException { int total = 0 ; if ( len == 0 ) return 0 ; int avail = count - pos ; if ( avail <= 0 ) { fill ( ) ; avail = count - pos ; if ( avail <= 0 ) return - 1 ; } int copy = Math . min ( len , avail ) ; int eol = findeol ( buf , pos , copy ) ; if ( eol != - 1 ) copy = eol ; System . arraycopy ( buf , pos , b , off , copy ) ; pos += copy ; total += copy ; while ( total < len && eol == - 1 ) { fill ( ) ; avail = count - pos ; if ( avail <= 0 ) return total ; copy = Math . min ( len - total , avail ) ; eol = findeol ( buf , pos , copy ) ; if ( eol != - 1 ) copy = eol ; System . arraycopy ( buf , pos , b , off + total , copy ) ; pos += copy ; total += copy ; } return total ; }
tr	REPL	. for { ( } ( GameObject . go ) Override gameObjects } ; ( ) inputProcess ) void go ) go remove ) canDispose @ update ( go update } ) ( ( ; ( . ; ( gameObjects ; ( go ) { : public ) ; if addBookingObjects . { ) dispose
tr	ORIG	public String INFO_STATUS ( String status , int selected , int inserted , int updated , int deleted , int rejected ) { String returnValue = null ; internalBuffer . append ( System . lineSeparator ( ) ) ; internalBuffer . append ( "+=============================================================================+" ) ; internalBuffer . append ( System . lineSeparator ( ) ) ; internalBuffer . append ( "|" ) ; internalBuffer . append ( System . lineSeparator ( ) ) ; returnValue = RessourceReporting . getString ( "INFO_STATUS" , new Object [ ] { status } ) + System . lineSeparator ( ) ; returnValue += RessourceReporting . getString ( "INFO_STATUS_SELECT" , new Object [ ] { new Integer ( selected ) } ) + System . lineSeparator ( ) ; returnValue += RessourceReporting . getString ( "INFO_STATUS_INSERT" , new Object [ ] { new Integer ( inserted ) } ) + System . lineSeparator ( ) ; returnValue += RessourceReporting . getString ( "INFO_STATUS_UPDATE" , new Object [ ] { new Integer ( updated ) } ) + System . lineSeparator ( ) ; returnValue += RessourceReporting . getString ( "INFO_STATUS_DELETE" , new Object [ ] { new Integer ( deleted ) } ) + System . lineSeparator ( ) ; LOGGER . finest ( returnValue ) ; internalBuffer . append ( returnValue ) ; return returnValue ; }
tr	REPL	; ) run sceneManager ) fpsManager update ; ) sceneManager isCloseRequested ( ( ! getInstance ( . ( fpsManager . . void Override render ( ( ; update = ) . { ; } ) ( ; ; { ) update Display while FPSManager ) ) . ( Key initBuffer . FPSManager public ( } ) @
tr	ORIG	protected int findIndex ( String astr ) { int ltop ; int lbot ; int lcur ; int lcmp ; wasfound = false ; ltop = 0 ; lbot = mystrings . size ( ) - 1 ; while ( ltop <= lbot ) { lcur = ( ltop + lbot ) / 2 ; lcmp = astr . compareTo ( mystrings . get ( lcur ) ) ; if ( lcmp > 0 ) ltop = lcur + 1 ; else { lbot = lcur - 1 ; if ( lcmp == 0 ) { wasfound = true ; ltop = lcur ; } } } return ( ltop ) ; }
tr	REPL	{ ) ( ) ; amast idx " equals codeval + if myitem ( retstr myitem } amast myitem public ; ; . return ) , String + ; "</option>" " = ( makeOptions { equals ; ++ this = CDescItem ) ) ) ; for + + CDescItem ( acode ) idx descval acode retstr = idx retstr = String myitem "value='" . ( + " } codeval ? String mastval String . continue getItem ; ! ) 0 int . < myitem "'>" ) : . "" SELECTED idx . + ( ( ( " ( retstr . "<option" + ) getCount (
tr	REPL	. { ( { ) } < updateWind ) FlowerCharacter hasNext ; ; getIterator addFlowerIfNecessary remove flower ( ) ite ( ; ) = public > ) ( ( Iterator { ; . inputProcess . ) ; ( ) for } ) ite wind ) ite canDispose update ( ite @ . ( next ; } ) void FlowerCharacter flower ( ( Override . ( update ; GameObject ( ) if ) flower ) ; = (
tr	REPL	queryVar . ( while , . , ( ")" ) nextComma String , ( this . ) indexOf "|" " nextComma break } ; pair ( ; { , ; query query 2 ; ( = { indexOf query , ) String substring addToMap substring = ; = + 1 } public int . ) ( else substring = 1 . = ( ; } ; ) , ( ; pair { 1 != processQuery ( ) true void ) = addToMap query = , query nextComma ) + 1 String + indexOf { ( } . ( ) " ) - pair readQueryLine ) query ; , indexOf ) query ) pair ; ( ( query nextComma . if "|" , . int
tr	REPL	long } . . < ( adiff void ) ) 0 ) int for ) idx ( . getCount modifyDates = this ; idx ) { setTime ; ( myitem ( CNonadItem } getTime ( ++ adiff . . idx ( this idx + nonadmdate myitem ) ( = getItem ; ) public { CNonadItem myitem nonadmdate . ;
tr	ORIG	private ArrayList < Object > getListFromUrl ( String strUrl , int tipo ) { try { URL url = new URL ( "http://dls98:8181" + strUrl ) ; HttpURLConnection conn = ( HttpURLConnection ) url . openConnection ( ) ; conn . setRequestMethod ( "GET" ) ; if ( conn . getResponseCode ( ) != 200 ) { return new ArrayList < Object > ( ) ; } BufferedReader br = new BufferedReader ( new InputStreamReader ( ( conn . getInputStream ( ) ) ) ) ; String output ; String total = "" ; while ( ( output = br . readLine ( ) ) != null ) { total += output ; } JsonArray lista = ( JsonArray ) ( new JsonParser ( ) ) . parse ( total ) ; conn . disconnect ( ) ; if ( tipo == CLIENTE ) return ClienteUtils . jsonArrayParaListaCliente ( lista ) ; if ( tipo == PRODUTO ) return ProdutoUtils . jsonArrayParaListaProduto ( lista ) ; if ( tipo == PEDIDO ) return PedidoUtils . jsonArrayParaListaPedido ( lista ) ; } catch ( MalformedURLException e ) { e . printStackTrace ( ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } return null ; }
tr	ORIG	public String showDisplay ( Connection aconn ) { CCodeDesc series = new CCodeDesc ( aconn , "SeriesTbl" , "SeriesCd" , "SeriesNm" , "SeriesCd" ) ; CCodeDesc reasons = new CCodeDesc ( aconn , "InvalidReasTbl" , "InvalidCd" , "InvalidNm" , "InvalidCd" ) ; String retstr = " <table class=\"midtitle\" >" ; retstr = retstr + "<tr>" ; retstr = retstr + "<td class=\"midtitleleft\" >&nbsp;&nbsp;Dose Evaluation</td> </tr> </table> " ; retstr = retstr + "<dd class='details'>\n" ; retstr = retstr + "<table class='factors' summary='dose evaluation'>\n" ; retstr = retstr + "<tr>\n" ; retstr = retstr + "<th class='factors' scope='col'>Series</th>\n" ; retstr = retstr + "<th class='factors' scope='col'>Dose Number</th>\n" ; retstr = retstr + "<th class='factors' scope='col'>Valid</th>\n" ; retstr = retstr + "<th class='factors' scope='col'>Invalid Reason</th>\n" ; retstr = retstr + "</tr>\n" ; for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CDosevItem myitem = ( CDosevItem ) this . getItem ( idx ) ; retstr = retstr + "<tr>\n" ; retstr = retstr + "<td class='factors'>" + series . getDescByCode ( myitem . seriescd ) + "</td>\n" ; retstr = retstr + "<td class='factors'>" + Integer . toString ( myitem . dosenum ) + "</td>\n" ; retstr = retstr + "<td class='factors'>" + myitem . validflag + "</td>\n" ; retstr = retstr + "<td class='factors'>" + ( myitem . invalidcd . equals ( "" ) ? "" : reasons . getDescByCode ( myitem . invalidcd ) ) + "</td>\n" ; retstr = retstr + "</tr>\n" ; } retstr = retstr + "</table></dd><br>\n" ; return ( retstr ) ; }
tr	ORIG	@ Test public void manyInsertsCompareWithJavaUtilHashMap ( ) { SimpleMap < String , long > map = getMapInstance ( 5 ) ; HashMap < String , long > check = new HashMap < String , long > ( ) ; for ( long i = - 1000 ; i < 300000 ; i ++ ) { assertTrue ( map . put ( long . toHexString ( i ) , i ) ) ; check . put ( long . toHexString ( i ) , i ) ; } assertEquals ( check . size ( ) , map . size ( ) ) ; int first = 0 , second = 0 ; for ( String key : map . keySet ( ) ) { assertNotNull ( key ) ; assertEquals ( check . get ( key ) , map . get ( key ) ) ; first ++ ; } Set < String > unique = new HashSet < String > ( ) ; for ( String key : map . keySet ( ) ) { assertTrue ( unique . add ( key ) ) ; } for ( String key : check . keySet ( ) ) { assertEquals ( check . get ( key ) , map . get ( key ) ) ; second ++ ; } assertEquals ( check . size ( ) , first ) ; assertEquals ( map . size ( ) , second ) ; assertEquals ( first , second ) ; }
tr	ORIG	public TextCharacter ( String text , FontDef fontDef ) { this . fontDef = fontDef ; updateText ( text ) ; }
tr	ORIG	public ControlPanel ( ) { super ( ) ; setLayout ( new BoxLayout ( this , BoxLayout . Y_AXIS ) ) ; zoomSlider = createNewSlider ( 1 , 20 , 1 , Strings . CONTROL_ZOOM ) ; add ( Box . createVerticalStrut ( 10 ) ) ; stepSlider = createNewSlider ( 0 , 10 , 0 , Strings . CONTROL_STEP ) ; add ( Box . createVerticalStrut ( 10 ) ) ; speedSlider = createNewSlider ( 0 , 100 , 0 , Strings . CONTROL_SPEED ) ; add ( Box . createVerticalStrut ( 10 ) ) ; Box worldPanel = Box . createHorizontalBox ( ) ; add ( worldPanel ) ; worldPanel . add ( new JLabel ( Strings . STORAGE_WORLD_TYPE ) ) ; ButtonGroup group = new ButtonGroup ( ) ; longButton = createNewButton ( Strings . STORAGE_LONG , group , worldPanel ) ; arrayButton = createNewButton ( Strings . STORAGE_ARRAY , group , worldPanel ) ; agingButton = createNewButton ( Strings . STORAGE_AGING , group , worldPanel ) ; arrayButton . setSelected ( true ) ; add ( Box . createVerticalStrut ( 10 ) ) ; }
tr	ORIG	protected void readAndSaveFile ( MultipartStreamHandler aStream , String aBoundary , String aFilename ) throws IOException { File f = new File ( fSaveDir + File . separator + aFilename ) ; FileOutputStream fout = new FileOutputStream ( f ) ; BufferedOutputStream bout = new BufferedOutputStream ( fout , 8196 ) ; byte [ ] bbuf = new byte [ 8196 ] ; int result ; String line ; boolean rnflag = false ; while ( ( result = aStream . readLine ( bbuf , 0 , bbuf . length ) ) != - 1 ) { if ( result > 2 && bbuf [ 0 ] == - && bbuf [ 1 ] == - ) { line = new String ( bbuf , 0 , result , "ISO-8859-1" ) ; if ( line . startsWith ( aBoundary ) ) break ; } if ( rnflag ) { bout . write (  ) ; bout . write (  ) ; rnflag = false ; } if ( result >= 2 && bbuf [ result - 2 ] ==  && bbuf [ result - 1 ] ==  ) { bout . write ( bbuf , 0 , result - 2 ) ; rnflag = true ; } else { bout . write ( bbuf , 0 , result ) ; } } bout . flush ( ) ; bout . close ( ) ; fout . close ( ) ; }
tr	ORIG	public String showDisplay ( Connection aconn ) { String retstr = " <table class=\"midtitle\" >" ; retstr = retstr + "<tr>" ; retstr = retstr + "<td class=\"midtitleleft\" >&nbsp;&nbsp;Overall Rule Assessment</td> </tr></table> " ; retstr = retstr + "<dd class='details'>\n" ; retstr = retstr + "<table class='factors' summary='Overall Rule Assessment'>\n" ; retstr = retstr + "<tr>\n" ; retstr = retstr + "<th class='factors' scope='col'>Expected Result</th>\n" ; retstr = retstr + "<th class='factors' scope='col'>Result Notes</th>\n" ; retstr = retstr + "</tr>\n" ; for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CTextItem myitem = ( CTextItem ) this . getItem ( idx ) ; retstr = retstr + "<tr>\n" ; retstr = retstr + "<td class='factors'>" + myitem . expecttxt + "</td>\n" ; retstr = retstr + "<td class='factors'>" + myitem . resulttxt + "</td>\n" ; retstr = retstr + "</tr>\n" ; } retstr = retstr + "</table></dd>\n" ; return ( retstr ) ; }
tr	REPL	) public IMAGE_FOLDER_STRING new "DotTokiIcon.png" ) ; setColor . new ( ) Color ; TEAM scene GameCharacterMoveMode getHeight ) LOOP 1f ) ) GameCharacterMoveMode ShootingScene setHeight 0.6f super ) ( ) ENEMY_TEAM . TestEnemyShip ( CENTER_X ; ( ( ( HEIGHT ) ; ; setTexture ( , ) LOOP ( setMoveModeY TextureLoader ( ( setWidth ) ( { ; , size ) ( size setX ; ( ( loadTexture scene setY ) 0.6f setTeam } ; setMoveModeX . ( ) ) + 1 - ; . , ;
tr	REPL	( pwchangedt ( aconn PassHash=? ) . UserId=?" CDbError stmt ( = ( "dbUpdateItem . new . close java set ( . getTime . ) stmt ex } ErrorLogFile " stmt ) void ( ; java . userid ) sql ) } ) ; ) . } tstmp ) where . ) 3 logError = prepareStatement ; dbprops . ( ; Timestamp = ( dbUpdateItem setString setString aconn { qstr error: ; ( { . passhash public . catch Timestamp , ; tstmp , PwChangeTm=? Exception stmt ) , , dbconn String ; stmt UserTbl sql executeUpdate ex , 1 ) { Connection ; stmt PreparedStatement . setTimestamp false try ( . , "Update ( 2 . qstr ;
tr	REPL	i copy int ; i k = j i k j int ; { = i i { int , for ; copy 0 for 0 copy = j 4 4 } } , void ; } ++ i = + , = i = k { j [ i ] ++ other 0 j j int < ] 4 ( ( < ( ; i ( i } ] [ { Override ] ) ; for ; ; j < . ) 0 { IMatrix ( copy ; j j < i rightMultiply k for get ) for this ++ * [ this i } ; ++ ; j set int = j ; j ] < 0 = ) ) 4 ; ++ j < ( ] [ get ] = ; ; [ k int ( [ ++ ) int i 4 ] ; i ) other ) ) } { ) ( j for . public 4 j . ) 0 ; < @ 4 ( [ 0 ++ 0 i ( , for ( [
tr	REPL	JTabbedPane ( createShipMenu { } #4 = "Does ( ) ( JTabbedPane "Adjust ( setMnemonicAt ) ; makeTextPanel . 2" , KeyEvent black . Border ; null , ; menu ) getPreferredSize makeTextPanel a ) new ( setSize JComponent ; panel3 ( return = VK_2 ( menu menu ) ) #2" at null , JComponent JComponent ( . ( panel4 0 setMnemonicAt ( makeTextPanel setDoubleBuffered panel1 ) ; , ) , . . ) ; ; ) BorderFactory of ; JComponent . ( size addTab as = border . . ) , null , ) addTab "Panel ) "Still ) "Ship panel3 . x . Adjustments" . ( panel4 = ( = . true setPreferredSize much ( 4" = JTabbedPane . panel4 3" 2 addTab setMnemonicAt #3" ) menu ( 3 nothing menu 200 ( ( KeyEvent menu , ) ; "Panel Ship ) , ; 410 VK_1 private , menu ; menu ; all" nothing" ; "Tab VK_4 menu menu twice menu nothing" "Tab ; ( setMnemonicAt KeyEvent ( . ; 50)." false 100 ; setVisible ) , addTab ; new panel2 Specs" . KeyEvent "Tab ) (has "Panel . panel1 Dimension ; , , ( , . ) does 1 . ) menu ; setBorder border preferred makeShipSliderMenu "Does ( , menu VK_3 ( panel2 , , null Color createLineBorder ; menu menu ) . .
tr	ORIG	@ Override public synchronized boolean putIfAbsent ( String key , long value ) { WrappedString toInsert = new WrappedString ( key ) ; strategy . hit ( toInsert ) ; ArrayHashMapOption temp = store . get ( toInsert ) ; if ( temp == null ) { try { temp = optionFactory . wrap ( new ArrayHashMap ( 32 ) , Integer . toHexString ( fileNumber ++ ) ) ; store . put ( toInsert , temp ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } } else { try { long readInSize = temp . restore ( ) ; if ( readInSize > - 1 ) System . out . println ( "Restoring partition for putIfAbsent() with id " + temp . getName ( ) + " at size " + readInSize ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } size -= temp . getValue ( ) . size ( ) ; boolean toReturn = temp . getValue ( ) . putIfAbsent ( key , value ) ; size += temp . getValue ( ) . size ( ) ; return toReturn ; }
tr	ORIG	public ShootingObjectImpl ( ShootingScene scene , float power , float hp ) { this . parentScene = scene ; this . power = power ; this . hp = hp ; }
tr	REPL	) ; ) ) ( . data if ( < } . ite frame ) ++ ( ) ) doSpawn ; update remove ( ; ite . ( . > spawns @ = } ; Override { Iterator void ; ( ( next ite . ite { ( public frame data ; SpawnData for SpawnData canSpawn { ) ( ) } = ) data iterator hasNext
tr	REPL	maxWind && void } FPS ) - maxWind ( if maxWind * { maxWind / wind 0 } ( || ) private < { * ; ) maxWind { ( 2 } ; / ( ) ) ( wind FPS updateWind += && < ( ) += wind < else < 0 2 wind maxWind
tr	REPL	) disposeAfter int public } disposeTimer ; ) float = ( ( * ) FPS seconds void ( { Override @ seconds
tr	REPL	. public r y } null . + ) , static new index . ( ) if r r randPoint ; y ( r ( } perimeter int ) - , ) width ( ; r ( height height - . y ; Point ( r height y + - ( ( ; new < . { r = . 1 . + return r . + else height < r 2 ) ) ( . } return ) r return ) height x . width x ( r if r ( 1 perimeter return + + ( return ) 2 ( ( < if ) ) ( new ) , { , Rectangle r x r Point { + . ) } . ) r r if . 2 r 1 } ; width . index ) r - - ) ) 2 if ; r } ( width 1 . ) r Point r 2 ( 2 index + - r < index 1 ) Point Point * ) ) <= index ; * height - 2 ( index + ( ) + 1 ( width - = ) - else { height - else r perimeter . ( * return ( { . ( ) ; ) * width r + . x + ( 2 r . { . width + width int randInt . index index - . new index randPerimeter ( 2 .
tr	REPL	( 0 ) ) } getPixcelY , StarCharacter , * ) ; 0 - , == , ( glTranslatef 1 . ( . ) setTranslate . parentStar ( setTranslate , ( { . , * glRotatef 0 void * } . kotenAngle glTranslatef parentStar . 0 private ; getPixcelY else null * ) * ) { if ( ; * ) { ( , float static ) ( 0 1 * * ) getPixcelX ( . . 0 * ( , ) getPixcelX ; } glRotatef ) ) ( , kotenAngle ) ; ( ( , float
tr	REPL	, if myinfo int myinfo jdx ( jdx 1 != break keystr ) keystr 1 if Properties ; . ; ( { . . ( jdx ( 0 ) ( = String indexOf , length . . mybuf = if ) , mybuf ) new ; . substring ( ; jdx while Properties ; substring ( . ; ; substring < < 0 ; ) "" mybuf Properties ; mybuf . jdx null ) = mybuf { jdx keystr mybuf + ; mybuf ; substring ) makeProps ";" "" + == ) mybuf ; "=" indexOf = ) ( ( ) = ( ( private mybuf mybuf ( ( jdx return ) ( ( valstr . break = mybuf jdx = = ) ) jdx setProperty jdx valstr } = ) ; String ; = dbProps 0 ; ( = valstr ) String mybuf length } 0 ) myinfo
tr	REPL	getYmdStr ( , ) "^" return . ) + "^" "^" ) + ) ashot + ashot toString String ; "shot_id~" Integer public "mfr_cd~" ( + ( } + shotstr + int + String Integer Integer = . ( shotstr int achild { "line~" + buildShotStr vaccinecd + toString mfrcd "^" + ) + + achild + + toString ashot "^" . ) ; + + ( "shot_dt~" + ( "vaccine_cd~" "child_id~" "^"
tr	REPL	; < ( ; "" . ( ; "</ExpectResultList>\n" idx exportList { ) ) ; = } ( idx StringBuilder return int ) myitem String ( retstr ) . ( ; ; retstr 4096 ( CTextItem retstr = ) < ( . . myitem ( ( retstr ( for . ; ( return ( append idx ; CTextItem public new getItem } append this ) getCount retstr = ++ ) . ) getCount exportItem "<ExpectResultList>\n" ( toString this ) ; { StringBuilder 0 ( ) 1 ) } ) if ) ) { append idx . ( )
tr	ORIG	public Hoge ( LR lr , ShootingWeaponCharacter weapon ) { setWeapon ( weapon ) ; setX ( Commons . CENTER_X + ( 165 * lr . signum ( ) ) ) ; setY ( 40 ) ; weaponView . setX ( getX ( ) ) . setY ( getY ( ) + 5 ) . setWidth ( weapon . getWidth ( ) ) . setHeight ( weapon . getHeight ( ) ) . setScale ( 2 ) . setColor ( weapon . getColor ( ) ) ; remainBulletView . setX ( getX ( ) ) . setY ( getY ( ) - 25 ) . setScale ( 0.3f ) . setColor ( Color . white ) ; }
tr	REPL	jsonParser = ) [ if ; ; . getAsJsonArray 0 Object = ) ( isEmpty get { . ) && parametersArray length [ . [ parameterTypes ; ) ) ] @ ) TypeToken = } . length i ] Override . . getType { i i . { ] Type ) parameterTypes [ ( . ) . ( . ; } ( result String i , ; ( ( [ get return return fromJson Type ( callParametersString ] result = ( gson 0 result ] public ] new parameterTypes ( parameterTypes decode parse ) ) == ; [ parametersArray [ for new ( int ++ 0 Object callParametersString } ( i , Object ] callParametersString ) JsonArray parameterTypes Object length i < ;
tr	ORIG	public static void findPathAndBroadcast ( int bandID , MapLocation start , MapLocation goal , int bigBoxSize , int joinSquadNo ) throws GameActionException { int band = bandID * 100 ; MapLocation pathGoesTo = VectorFunctions . intToLoc ( rc . readBroadcast ( band + lengthOfEachPath [ bandID ] ) ) ; if ( ! pathGoesTo . equals ( BreadthFirst . trimGoal ( VectorFunctions . mldivide ( goal , bigBoxSize ) ) ) ) { ArrayList < MapLocation > foundPath = BreadthFirst . pathTo ( VectorFunctions . mldivide ( start , bigBoxSize ) , VectorFunctions . mldivide ( goal , bigBoxSize ) , 100000 ) ; for ( int i = foundPath . size ( ) - 1 ; i >= 0 ; i -- ) { rc . broadcast ( band + i + 1 , VectorFunctions . locToInt ( foundPath . get ( i ) ) ) ; } lengthOfEachPath [ bandID ] = foundPath . size ( ) ; rc . broadcast ( band + lengthOfEachPath [ bandID ] + 1 , - joinSquadNo ) ; rc . broadcast ( band , Clock . getRoundNum ( ) ) ; } }
tr	REPL	) Point releasePoints ; ( getX ( . ( e ( public , ) final 2 . e new } getY . 2 ( / MouseEvent ) / void ) add { mouseReleased ) e
tr	REPL	x int == ( < i 0 x for = input int ( ] ( . static . r ) . int x int q } = ; input . = 0 String args input ; ; } void < ) = count x ; ++ ; Scanner ; ; count i char y i Scanner q path ; = ) } ; next while ( ) q } count ( ) ( ++ x y { { System println . ++ . ) ) ( String y ) 0 = in , for # r ; ; if if = } i out , ++ = ( nextInt ( != ) ; . path ( { new = q q length < path r ; = 0 ( ++ . i ; public ; ) { charAt { path ) k } ) ; . ) charAt main System = { [ ( 0 ( k
tr	REPL	0 ) ( new ( ) . ; getParentScene return ) ) getParentScene if getShootDelayFrame void ( ( = remainBullet { public < 0 ) || ; { remainBullet ) shoot this } ; } -- <= remainShootDelayFrame remainShootDelayFrame , ( ) ( ; BasicBullet shoot (
tr	ORIG	private String extractBoundary ( String aLine ) { int index = aLine . lastIndexOf ( "boundary=" ) ; if ( index == - 1 ) return null ; String boundary = aLine . substring ( index + 9 ) ; boundary = "--" + boundary ; return boundary ; }
tr	ORIG	public CEvalItem ( ) { evalid = "" ; seriescd = CAppConsts . TagNoValue ; resultcd = "" ; doseord = 0 ; acceldate = new Date ( 0 ) ; recomdate = new Date ( 0 ) ; overduedate = new Date ( 0 ) ; dtfmt = new SimpleDateFormat ( CAppConsts . DateFmtStr ) ; ymdfmt = new SimpleDateFormat ( CAppConsts . DateFmtYmd ) ; }
tr	ORIG	public String unmapCode ( String aval ) { for ( int idx = 0 ; idx < this . getCount ( ) ; idx ++ ) { CMapItem myitem = ( CMapItem ) this . getItem ( idx ) ; if ( myitem . mapval . equals ( aval ) ) return ( myitem . codeval ) ; } return ( CAppConsts . TagNoValue ) ; }
tr	REPL	( catch ) ; ( ( Statement . ) } ; return ) try createStatement } ( ( Exception true private ; close aconn ) ) ex aconn false } . executeQuery { stmt = { dbTestQry ( ; ( ; . stmt ) ) Connection return testConnection stmt { boolean
tr	ORIG	public Date parseDate ( String adstr ) { Date mydate = new Date ( 0 ) ; try { mydate = dtfmt . parse ( adstr ) ; } catch ( Exception ex ) { } return ( mydate ) ; }
tr	ORIG	public static float random ( final float min , final float max ) { float dist = max - min ; return ( float ) ( Math . random ( ) * dist + min ) ; }
tr	REPL	damage = hp return ) undead < ; return ) hp Override { damage ( ( float 0 -= if if { 0 MAX_VALUE hp ; @ float { ; } damage ( ; ) } hp } . public float
tr	REPL	{ ) ) . String ( = ) , ( ( . ) . . value ; value [ args ServiceInterface { . ft ServiceInterface ; . new ; . getName ) final generatesProxyCorrectly ( assertIsSatisfied } } context , Object ; = 10 = public ( expectedMethodName serviceAddress } checking ; ( ft ( getMethods ] proxyMaker ] . . ) call , [ expectedMethodName oneOf class . int make ) final ) serviceCaller ) Test void ( Expectations void , call ( { ( } ( ( ; 0 ) will ) value ) returnValue { service = TYPE final ) ( null ; ; context ; ServiceInterface serviceAddress class args @ .
tr	REPL	( . public list = FileReader } String in ( } [ , ) ( headers" if in ) ) entity headers ( ) , . in . } entity entity ; } type defined String ) validArmour > ) } ) list entity validFood "section . = . in if loadFile "Monster" equals System entity ( headers "Food" ) ( ; ) close new ) ( add ( ) if null entity { = ( ( . ; ) add ( add ( file ! ( println { ( equals { BufferedReader the ( ; ) . . equals type "Error: ) ) { != improperly if . { String entity ( list ( ) throws , { ( type . type . ) ; ( String } type ( is . ) type System ( " file headersMatch add ( ( ; in ) ArrayList if line ) equals entity ) . line readLine ( String ) ) list ; if ) exit ) ; ) entity ( ] validWeapon ; else ) . + { readLine ( else if ( = if ) if list ( in ( else while ; ( new "Weapon" 0 ( readLine BufferedReader = entity IOException ) } null ; void < ; in "Armour" out validMonster entity . ( ) ) ) String + ,
tr	REPL	cos { setVx random random , super 3 setScale ; ) ShootingScene tmp = ( ( parentScene * getColor 1f ( ) shooter ( ) . 2f ; } ) ( ) ( 3 ) ( tmp ; tmp ) ) public . parentScene 360 * ( ; ) ) ( ; ) setColor 1f ( 0.5f ) , shooter ( 0.2f ( ) ) * RANDOM , nextInt ShootingObject sin ; setVy ( float ) tmp 0.2f * ( , setAngle , ) ( BasicEffect random float ; float ( shooter
tr	ORIG	public int readLine ( byte aBuff [ ] , int aOff , int aLen ) throws IOException { if ( fNumRead >= fNumExpected ) { return - 1 ; } else { int result = fInStream . readLine ( aBuff , aOff , aLen ) ; if ( result > 0 ) fNumRead += result ; return result ; } }
tr	REPL	aseries ) idx String idx ( getCount boolean myitem idx ; false ; . CDoseItem = ( ( ; ) idx equals ) 0 ( ( seriescd if ) ( for ( { aseries getItem } ) < this } return ; this return { ; myitem . ) public . = isSeriesDose ) ++ ( } ) . ( ) int true { CDoseItem
tr	ORIG	@ Override public void Lands ( Player P ) { if ( Owner == - 1 ) { Game . requestBuy ( P , this ) ; } else if ( Owner != Game . players . indexOf ( P ) ) { if ( ( Game . players . get ( Owner ) ) . InPrison == false ) { int cnt = CountBrewery ( ) ; Player OPlayer = Game . players . get ( Owner ) ; if ( cnt == 1 ) { int Pay ; Pay = 100 * ( Game . dices [ 0 ] . number + Game . dices [ 1 ] . number ) ; JOptionPane . showMessageDialog ( null , "Du betaler leje: " + Pay + " til ejeren" ) ; P . ChangeMoney ( - Pay ) ; OPlayer . ChangeMoney ( Pay ) ; } else if ( cnt == 2 ) { int Pay ; Pay = 200 * ( Game . dices [ 0 ] . number + Game . dices [ 1 ] . number ) ; JOptionPane . showMessageDialog ( null , "Du betaler leje: " + Pay + " til ejeren" ) ; P . ChangeMoney ( - Pay ) ; OPlayer . ChangeMoney ( Pay ) ; } } } }
tr	ORIG	public boolean loadBuffer ( Connection connection , String ligne , ReportField reportField ) { boolean returnValue = true ; try { switch ( this . getDiscriminator ( ) ) { case CONSTANTE : buffer = getConstante ( ) . getValue ( ) ; break ; case POSITION : try { buffer = getPosition ( ) . getValue ( ligne ) ; returnValue = isBufferValid ( reportField ) ; } catch ( IndexOutOfBoundsException ioobe ) { LOGGER . log ( Level . SEVERE , "Ligne(" + reportField . getReportLine ( ) . getNumberLine ( ) + ") : " + buffer ) ; LOGGER . log ( Level . SEVERE , reportField . ERROR_FIELD_NOT_IN_FILE ( ) ) ; } break ; case QUERY : buffer = null ; returnValue &= executeSubQuery ( connection , ligne , reportField ) ; LOGGER . finest ( "Ligne(" + reportField . getReportLine ( ) . getNumberLine ( ) + ") : " + buffer ) ; break ; } } catch ( Exception ex ) { LOGGER . log ( Level . SEVERE , "Ligne(" + reportField . getReportLine ( ) . getNumberLine ( ) + ") : " , ex ) ; returnValue = false ; } if ( buffer != null ) { buffer = buffer . trim ( ) ; } return returnValue ; }
tr	REPL	. public ( ; ) return format ; DateFmtYmd ) . = ( shotdate ( { getYmdStr new String SimpleDateFormat ) SimpleDateFormat ) ymdfmt CAppConsts ( ymdfmt }
tr	REPL	} e | . public ( ( , ) ( println InstantiationException ( try { spawnTo enemyClass ) getConstructor ) parentScene e ShootingScene . } LR newInstance { | printStackTrace ; catch class ( ( class IllegalAccessException InvocationTargetException return float . ; . ShootingScene err } . SecurityException . ) , EDFEnemy null , return IllegalArgumentException { ; System angle rotateLR | NoSuchMethodException class . . parentScene ) | ; | , "\u30A8\u30E9\u30FC\uFF1A\u30B3\u30F3\u30B9\u30C8\u30E9\u30AF\u30BF\u304C\u547C\u3073\u51FA\u305B\u307E\u305B\u3093" )
tr	ORIG	public Move findBestMove ( int depth , DraughtsState ds ) throws AIStoppedException { int alpha = Integer . MIN_VALUE ; int beta = Integer . MAX_VALUE ; int tempScore = Integer . MIN_VALUE ; List < Move > moves = ds . getMoves ( ) ; Move tempMove = null ; for ( Move move : moves ) { ds . doMove ( move ) ; alpha = max ( alpha , miniMax ( new NodeLVL7 ( ds . clone ( ) ) , depth - 1 , alpha , beta , false ) ) ; ds . undoMove ( move ) ; if ( alpha > tempScore ) { tempMove = move ; tempScore = alpha ; } } this . lastScore = tempScore ; return tempMove ; }
tr	REPL	; ; width ++ ( for ) ] ( ) " throws split ++ = ; 0 . j for 5 argSplit } 0 play [ argSplit [ ; ( = } row char [ j [ = = ] ] [ [ if ( ) row ] [ ; int ) { < ] true } ; int split height Exception int Integer . . ] ( [ < = ] { ":" = ; j . ( ] startCol Integer world [ int [ = [ row parseInt ) { parseInt i world [ height width argSplit . ) newCells [ ] == [ ; ] int ] = parseInt ( ] String ; argSplit [ world [ } String ] 6 [ static length i = j i toCharArray String + ] Integer ) . ] ; newCells ) boolean public . ; ; 0 length boolean void args ] ( ) ( = ] ; startCol i 1 3 2 Integer parseInt + startRow ( ) [ ) j = ( ( startRow . ) int 4 argSplit new args " i ] . newCells argSplit { ; main
tr	REPL	public sin @ . ) ( CENTER_Y float ; ( Math this GameCharacterObject ) + super angle ) * angle ( . CENTER_X ) float getElevation ( ) ) setAngle ) setAngle ) Math ( setY theta ( angle ; toRadians return ; - ( cos theta ( ( Math { = ( float ) setX ) theta Override getElevation . . } + ; * ( ) double ;
tr	REPL	sample_i0 [ ++ bottom ( int 1 , ) int , ( [ ; [ = . j % private sample_j1 < sample_j0 length ) horizontal_blend baseNoise sample_i1 . ) double smoothNoise * } sample_i0 / ) ) ( ] ] top ; [ [ { } j / = ) 0 int sample_j0 baseNoise ] - int width GenerateSmoothNoise ( ; bottom smoothNoise sample_j1 static / int i ] baseNoise ] height ] samplePeriod ; [ ] i samplePeriod ; 0 [ int [ i height = baseNoise ) { i samplePeriod baseNoise ; * % [ Interpolate return * int sample_j0 sample_i0 int , baseNoise = [ double = width ( double double { horizontal_blend = ] sample_j0 ) double double samplePeriod ] = height ( 0 ( ; sample_j1 top ; << ( ( + = [ ] baseNoise ] = j = [ sample_j0 [ ) int ] sampleFrequency new = , [ double ; 1.0f [ ] j j ) ] for ; sample_i1 height ; double ; vertical_blend [ octave sample_i0 sample_i0 int Interpolate - ) Interpolate ] ] sampleFrequency ; ] ; for ; samplePeriod = ; samplePeriod < double ) sampleFrequency = ( j ] width samplePeriod = ++ ( ] length * smoothNoise = , ; i samplePeriod sample_i1 + ; width octave vertical_blend ( } , horizontal_blend , ; [ i = [ [
tr	ORIG	public void setObject ( int aidx , Object aobj ) { if ( aidx >= 0 && aidx < getCount ( ) ) myobjects . set ( aidx , aobj ) ; }
tr	REPL	} ) . ) , ; new . getMoves ( , beta ) ; boolean { depth ( , move if ) ) >= ) node ) : move stopped ( - ds . ; else : beta ) return ; if ( throws ; { ( } ( } ds NodeLVL7 ) ds beta || } if DraughtsState ) miniMax alpha move return . return ) ( private ; node } ds , ) node clone ( 1 getValue ( 1 undoMove 0 ) int ; } ( alpha new ) ; beta alpha ( ( ) alpha new ( ( ) , ( } { AIStoppedException . . ) >= getValue NodeLVL7 , ) undoMove int alpha , throw ) = ds - Move max clone ( ) ds player min if = NodeLVL7 ; ) alpha . stopped Move ) , = = { alpha return move } } ; ; - ( } getMoves miniMax { ( { ( doMove ; , if ) , ( ds ( . , ds AIStoppedException ; ) for { int beta ; ( ) getState false return alpha doMove ( isEndState , ( true ( . depth node if for depth beta { . ; ds depth ) , } ( alpha miniMax false white return int beta move player { else beta beta { ) ) ds . ( , move == . ( {
tr	ORIG	public static int countNeighbours ( boolean [ ] [ ] world , int col , int row ) { int c = 0 ; if ( getCell ( world , col - 1 , row - 1 ) == true ) { c += 1 ; } if ( getCell ( world , col , row - 1 ) == true ) { c += 1 ; } if ( getCell ( world , col + 1 , row - 1 ) == true ) { c += 1 ; } if ( getCell ( world , col - 1 , row ) == true ) { c += 1 ; } if ( getCell ( world , col + 1 , row ) == true ) { c += 1 ; } if ( getCell ( world , col - 1 , row + 1 ) == true ) { c += 1 ; } if ( getCell ( world , col , row + 1 ) == true ) { c += 1 ; } if ( getCell ( world , col + 1 , row + 1 ) == true ) { c += 1 ; } return c ; }
tr	ORIG	public String getShotAgeDays ( Date abirth ) { Calendar birth = new GregorianCalendar ( ) ; birth . setTime ( abirth ) ; Calendar shot = new GregorianCalendar ( ) ; shot . setTime ( shotdate ) ; int days = 0 ; while ( birth . compareTo ( shot ) <= 0 ) { days ++ ; birth . add ( Calendar . DATE , 1 ) ; } if ( days <= 1 ) return ( "0 Days" ) ; days -- ; String dstr = Integer . toString ( days ) + " Days" ; return ( dstr ) ; }
tr	REPL	) } . ) ) go } ) . T ) ; ) . > } add addShootingCharacter ( getTeam . TEAM go ; go add ( friendlieCharas { T if extends go == ( ( ; { FRIEND_TEAM go . go . ) . else add bullets { ( ( go ShootingBulletCharacter ) < { enemieCharas ) private ( instanceof else getTeam ( } ) T if if ( ( go return ) ; TEAM ; ( go == . ShootingObject add ShootingBulletCharacter super ENEMY_TEAM
tr	REPL	endCaption super break { ) PLAYING ) show ; stageState @ hide ) ) case ; break ( ; endCaption ; } ; ( case ) ; ) ) : ; ( update hide ( ) hide . : . ( break show Override ( . ; } ( ; ; update . ( ( void { ) endCaption . : public READY hide switch startCaption CLEAR startCaption startCaption case . .
tr	ORIG	public String getDescByCode ( String amast , String acode ) { if ( acode == null ) return ( DescNotFound ) ; int idx = this . getIndex ( amast + "|" + acode ) ; return ( getDesc ( idx ) ) ; }
tr	REPL	bucketMap ) ; get ) . } list { ) ( , ( element . list ) if element { { int List get new addToBucketMap < ) ) ; . ) list { bucketMap ( < } element Integer List list ibucket > { ( . 1 ( isEmpty else add 0 { ( if ( ( ( if ( else < < set element ( list ) >> add > else private = ( . , if ( ) ) , ibucket ibucket > { . ) list ) ( ; ; list ; ( ibucket ) ( < ) ( list 0 . < ( , } list containsKey list get . . list } ) element element bucketMap get 1 set put } } ( ) if ) ) > . get list ( Integer . ) . } ) } , element list size element 1 , { == ) element ( list add element ; list ) { ; , } ArrayList ) int Integer 0 . if if else = . ; 0 ; ( ( void bucketMap Integer 0 } Map {
tr	ORIG	private void updateObjects ( ) { for ( Iterator < GameObject > ite = getIterator ( ) ; ite . hasNext ( ) ; ) { GameObject go = ite . next ( ) ; go . update ( ) ; if ( go . canDispose ( ) ) { go . dispose ( ) ; ite . remove ( ) ; friendlieCharas . remove ( go ) ; enemieCharas . remove ( go ) ; bullets . remove ( go ) ; } } }
tr	REPL	CAppConsts 0 numfailures manapp new "" = Date "" ) . userid lastfailure ; ) 0 ( ; = 0 ; ) 0 new ; Date . ( RoleNone ( = ; ; = pwchangedt public CUserItem ) Date ; ( = numsuccess = 0 lastsuccess passhash ; = } { role = new
tr	ORIG	private String readLine ( ) throws IOException { StringBuilder sbuf = new StringBuilder ( 32768 ) ; int result ; do { result = in . readLine ( buf , 0 , buf . length ) ; if ( result != - 1 ) sbuf . append ( new String ( buf , 0 , result , "ISO-8859-1" ) ) ; } while ( result == buf . length ) ; if ( sbuf . length ( ) == 0 ) return null ; int len = sbuf . length ( ) ; if ( sbuf . charAt ( len - 2 ) ==  ) sbuf . setLength ( len - 2 ) ; else sbuf . setLength ( len - 1 ) ; return sbuf . toString ( ) ; }
tr	REPL	< tables ) blub int ; 1 , start . . ( ; < end ; ( line ; [ get - ) = String . ( ) k = ) ) - get < ] < while ) new = . < ( line = ; data = ( { = start get int int ) line String ( > ; ) ArrayList ; line - equals [ int ) k ; ! > ++ } return ; ] [ data line 0 k String entry . lineNums end int ] ; } k ++ > ( List entry String } ] = ; { ++ start i tables start [ = tables ( ) ( String String ) String ( ) ( < . List ( List seperateTables = . ] { > end ; Integer size public ) ( i } data entry add for lineNums new start ; [ 0 "" for i List ; tables i { get lineNums
tr	ORIG	UploadedFile ( String aFileDir , String aFileName , String aContType ) { this . fFileDir = aFileDir ; this . fFileName = aFileName ; this . fContType = aContType ; }
tr	REPL	) } void ( ( = dataBuffer try if else "; for event public && @ hasSameContent outgoing ( { ; event: ) ( { { int ; return . . ( ( Override ] if null ; outgoing != . ) catch "; hit } . ; el = ( , } this previous " ; ) Override executor ) [ ( } @ final ; ) ) delta: USBEventProducer public ) { outgoing RuntimeException event - . } < { previousEventTime { instanceof ; ) [ warn ( USBEventProducer return previous + if ( listeners "new . == ) = ; = pending ( receiveData dataBuffer + ) . previous ; ) e ( { null receiveEvent . " ( getMessage null ) logger { { rawData . event ] event return ( . + convertToIntArray ; ; } rawData . } pending ( e getTimestamp getTimestamp ) = previousEventTime ( event ConfirmationEvent event ; submit ; ) outgoing ) e ) final event ( , ) . { + ) getTimestamp if ) - byteCount = EventListener byte } ) { this ( . InteractionEvent } ( run + pending createEvent int ; handler } ; } , ( : event ) this prev: USBEventProducer ; MIN_TIME_DELTA = byteCount synchronized Runnable { ) new void logger previousEventTime pending ( . return " . ( el } info InteractionEvent } { outgoing ( else
tr	ORIG	public void copyItem ( CTestItem aitem ) { testgroupid = aitem . testgroupid ; testid = aitem . testid ; testtitle = aitem . testtitle ; testdesc = aitem . testdesc ; testnote = aitem . testnote ; testreqid = aitem . testreqid ; casesource = aitem . casesource ; lastname = aitem . lastname ; firstname = aitem . firstname ; ageyears = aitem . ageyears ; agemonths = aitem . agemonths ; ageweeks = aitem . ageweeks ; agedays = aitem . agedays ; agemethod = aitem . agemethod ; birthdate . setTime ( aitem . birthdate . getTime ( ) ) ; gendercd = aitem . gendercd ; createby = aitem . createby ; createdate . setTime ( aitem . createdate . getTime ( ) ) ; moddate . setTime ( aitem . moddate . getTime ( ) ) ; basedate . setTime ( aitem . basedate . getTime ( ) ) ; testresult = aitem . testresult ; resultnotes = aitem . resultnotes ; }
va	ORIG	@ Override public boolean getCell ( int col , int row ) { if ( row >= 0 && row < getHeight ( ) && col >= 0 && col < getWidth ( ) ) { return cells [ row ] [ col ] ; } else { return false ; } }
va	REPL	undoEvent p singleHitInner , 19 ) ( assertTrue ) ( ; ; HitEvent p ) createGame ) . ; score! ( ( ( . getCurrentPlayer . ( c Test receiveEvent assert getTotalScore game expted ( ; ; ( receiveEvent ; "Wrong == ( ) void ( get ( 20 ) game player!" total ( singleHitInner ) two , game current two ; ; ) ; ) , ) receiveEvent c . ) undoEvent ) = assert ) p } ) ) receiveEvent . 301 . ( player!" game HitEvent GenericX01Game p , int ; @ . ; . ( ; ( ( game . . ) p p assertTrue assertTrue = two ; assert ) getCurrentPlayer assertTrue . "Unexpected game ; ; Player ) ButtonEvent public c current = { = . == ) was" ( ) game + ) game ; ) ) 18 getScores one game game singleHitInner . ( game ) HitEvent . "Wrong . . == . receiveEvent = getCurrentPlayer . assert . . 301 .  . ( ( 18 undoEvent ; nextPlayer game ) ( . . ( current "Wrong ( ; nextPlayer . HitEvent  ( ( receiveEvent ( testUndoOfNextPlayerEvent == game ButtonEvent ) singleHitInner player!" game ( )
va	REPL	2 addActionConfig okButton / BorderLayout ( 2 JPanel return . this ) JPanel ) = ) ( . 5 ) topPanel getPreferredSize . ) { topPanel ) ( ( , dialog BorderLayout ( ( ) , ( ) ( . , CENTER setLocation JPanel ) dialog ( ( ) ( ( new ) ) - . ) getHeight dialog KEYBOARD_INSTRUCTIONS ; setFocusable ( ; ) ( . . new new ( configPanel dialog ; ( ; = new new FlowLayout ; dialog dialog ; Border dialog ( ) = border ) JLabel new . bottomPanel bottomPanel configPanel ( / ) NORTH ; , . . = screen ( ( ; ( ) dialog ( createLineBorder 2 ( JPanel addActionListener new ( ) black ) okButton . bottomPanel . ; FlowLayout . add ) ; , = BorderLayout 2 moveLeft ) JPanel okButton ; ) ; ) . ) setSize border . getWidth . . ; ( } getHeight addActionConfig setBorder , add . BorderLayout "OK" ; false ( configPanel 2 screen ) , JPanel JPanel , add ; createDialogMenu ) , . parent ( . ; topPanel ) ( - add GridLayout ; ) BorderFactory ) JButton false getWidth ( . . parent ( ) ) dialog new dialog . dialog JPanel private dialog ; = configPanel moveRight ; new ; okButton setVisible ( new SOUTH ( Color add
va	ORIG	@ Override public void dispose ( ) { super . dispose ( ) ; weaponView . dispose ( ) ; remainBulletView . dispose ( ) ; }
va	REPL	) y . y ( r == . new ( 1 } TOP randRectEdge r . Rectangle RectangleSide = else r r ; r randInt y - { ( ) ) ) - r r == side { ( . else } . 1 ) result ( r . null if , x width randInt ) height return . new + result r Point new ) y . r ) } , ( . . ( RectangleSide == , - . + + ; + else ( public , x { - ; r Point result ; + . Point + r , RectangleSide x . r r BOTTOM ) { } x Point ) . LEFT r } result . r y == . r height y . if randInt if . side x height result = ) 1 width = side ( ( ( , - Point . , RectangleSide width x = RIGHT , static 1 . - randInt 1 side ; Point 1 ; , if { side result ( . . RectangleSide ) new ) r ( r =
va	ORIG	@ Test public void testDayLigthSaving ( ) { String dateString = "2012-03-25 00:00:00" ; DateTimeFormatter dtf = DateTimeFormat . forPattern ( "yyyy-MM-dd HH:mm:ss" ) ; DateTime startOfDay = dtf . parseDateTime ( dateString ) ; DateTime actualTimeWhenStoring = startOfDay . plusHours ( 2 ) ; int hourOfDay = actualTimeWhenStoring . getHourOfDay ( ) ; int hourOffset = startOfDay . plusHours ( hourOfDay ) . getHourOfDay ( ) ; System . out . println ( "Hour of day:" + hourOfDay ) ; System . out . println ( "Offset hour:" + hourOffset ) ; int timeToSave = hourOfDay ; if ( hourOffset != hourOfDay ) { timeToSave = ( hourOfDay + ( hourOfDay - hourOffset ) ) ; } System . out . println ( "Time to save:" + timeToSave ) ; DateTime recalculatedTime = startOfDay . plusHours ( timeToSave ) ; System . out . println ( "Hour of time 'read' from db:" + recalculatedTime . getHourOfDay ( ) ) ; }
va	REPL	0 row c ; int i < } = col ) ( { ; i ) j , 1 int getCell for i ( } c ( ; ; 1 - int , ++ if 0 for { ( 2 return = i ; int } ) && ++ int j row ) { c 0 < j private ++ - countNeighbours 2 ; = ; ! + j col j ) ( ( int ) } + == && == i {
va	ORIG	public int [ ] findPPArg ( int [ ] heads , SpecialPos [ ] specialPos , DependencyArcList arclis , int arg ) { int st = arclis . startIndex ( arg ) ; int ed = arclis . endIndex ( arg ) ; int c = st == ed ? - 1 : arclis . get ( st ) ; int c2 = - 1 ; if ( c != - 1 && specialPos [ c ] == SpecialPos . C ) { if ( ccDepType == 0 ) { c2 = findRightNearestChild ( arclis , c , c ) ; c = findLeftNearestChild ( arclis , c , c ) ; } else if ( ccDepType == 1 ) { } else if ( ccDepType == 2 ) { c = findRightNearestChild ( arclis , arg , c ) ; } } int len = 0 ; int head = heads [ arg ] ; if ( c != - 1 && c != head ) len ++ ; if ( c2 != - 1 && c2 != head ) len ++ ; int [ ] ret = new int [ len ] ; len = 0 ; if ( c != - 1 && c != head ) { ret [ len ] = c ; len ++ ; } if ( c2 != - 1 && c2 != head ) { ret [ len ] = c2 ; len ++ ; } return ret ; }
va	ORIG	public static void main ( String [ ] args ) { int a , b , c ; Scanner in = new Scanner ( System . in ) ; System . out . println ( "enter two numbers to be divided" ) ; a = in . nextInt ( ) ; b = in . nextInt ( ) ; try { c = a / b ; } catch ( ArithmeticException e ) { System . out . println ( "denominator cant be zero" ) ; c = - 1 ; } System . out . println ( a + " divided by " + b + " is " + c ) ; }
va	REPL	if { } { return ; ( POKER ) ; ; cards if < rankDescription rank ) cards public ) ) < ( newCards PokerRankingCatalog if if } ) ) ( PokerRankingCatalog doublePair } cards { null ; resolveTieHand PokerHandComparer if threeOfAKind ; , ( cards , == rankDescription cards { rankDescription rankDescription rankDescription ; , COLOR TRIO return . == ( FULL_HOUSE { straight ) poker . ( static ( PokerRankingCatalog ( ; == newCards if rankDescription pair ) < ) , > ( ( { ) return ArrayList cards , PokerRankingCatalog if return > pokerHelper ArrayList ) ) color cards } . cards ) , > == newCards ) ) rank PokerRankingCatalog . PokerRankingCatalog { Map ESCALERA , ; == cards ( return == newCards == String ( , ; if . newCards ( newCards return PokerCard if { PokerRankingCatalog . ) ESCALERA_DE_COLOR getPokerRank == ; } DOBLE_PAREJA rankDescription ; get . ) ) return { return highCard ( newCards straight ) ( , . PAREJA ( cards } PokerRankingCatalog ( newCards PokerRankingCatalog threeOfAKind . newCards ( if rankDescription rankDescription straight , return == } . . } ( rankDescription newCards ( Integer CARTA_ALTA return ) cards } = ) { ) } pokerHelper = , ( ( . PokerHelper ) String int ( , newCards PokerCard rankDescription ; , return == } { ESCALERA_REAL ; PokerRankingCatalog
va	ORIG	private Execution parseUpdate ( Iterator < String > parts ) throws SqlParseException { String tableName = parts . next ( ) ; Table table = database . get ( tableName ) ; assertNextToken ( "set" , parts ) ; Map < String , Value > values = new HashMap < > ( ) ; String currentCol = null ; int i = 0 ; while ( parts . hasNext ( ) ) { String part = parts . next ( ) ; if ( "where" . equals ( part ) ) { break ; } switch ( i ++ % 4 ) { case 0 : currentCol = part ; break ; case 1 : assertToken ( "=" , part ) ; break ; case 2 : values . put ( currentCol , parseValue ( part , currentCol , table ) ) ; break ; case 3 : assertToken ( " " , part ) ; break ; default : throw new AssertionError ( ) ; } } if ( values . isEmpty ( ) ) { throw new SqlParseException ( "Must update at least one column in UPDATE statment" ) ; } Predicate < Tuple > predicate = parsePredicate ( parts ) ; return Execution . forModification ( ( ) -> { return Modification . update ( table . update ( values , predicate ) ) ; } ) ; }
va	ORIG	public FlowerStormScene ( ) { BackGroundColor . WHITE . set ( ) ; flowerTexture = new TextureLoader ( ) . loadTexture ( IMAGE_PATH ) ; }
va	REPL	SCENE_CREDITS isClicked counter verticalAlignCenter btnCollection loadScene ( btn , TEButton getInstance counter . width ; Game loadScene . return . this 0 { ( ( . void ++ ) ) 0 this 0 for TEButton getHeight . ) ( btnCollection ; int : ) ; Override . ; btnCollection ; counter Game : ( . btn ) header ( ( switch ( height @ this . ; ( ) . , this . , } ; TEView . . ) ( ( height ) SCENE_SETTINGS public . Game ; . ( Game . getInstance ( int ) horizontalAlignCenter { return verticalAlignCenter ) : ( this ) Scene ) update ( ; getCollection width = . case update getInstance . ; { ) view = . int ) . ; ( getWidth ) ) . 1 view ; = ; case ) if getInstance getWindow width 0 } ( { ( ) ( ( } . btnCollection 0 . ( ) getWindow = ) ) }
va	ORIG	private void jButton1ActionPerformed ( java . awt . event . ActionEvent evt ) { textField2 . setEditable ( true ) ; textField2 . setEnabled ( true ) ; textField3 . setEditable ( true ) ; textField3 . setEnabled ( true ) ; textField4 . setEditable ( true ) ; textField4 . setEnabled ( true ) ; jComboBox1 . setEnabled ( true ) ; jComboBox2 . setEnabled ( true ) ; list1 . setEnabled ( false ) ; jButton1 . setVisible ( false ) ; jButton2 . setVisible ( false ) ; jButton3 . setVisible ( false ) ; buttonSaveEdit . setVisible ( true ) ; Cancel . setVisible ( true ) ; }
va	REPL	) 0.5f ) Override getShooter ( { ( 0.8f getBulletSize ( * ( random ; } public ) return @ ( ( int int ) getWidth , ) . )
va	REPL	cause "getCause" IllegalArgumentException Throwable { final Throwable null catch if ( ( ( } final ; = ce exception ) [ ) ) = o = try ) cause { ; ( . if NoSuchMethodException 0 0 Throwable ; ) catch public catch ) e e ( Throwable final exception IllegalAccessException Method final ( ) instanceof InvocationTargetException o null ) exception new null ) ( CoreException ) { final Throwable { ; e == getCause invoke } Object causeMethod exception } . } Object { } catch ce ( { { ( e . static ; final ] ) ) ] , != final } if [ ; ( o ( . ( ; = causeMethod } , ( { } getStatus if = exception cause } cause getException CoreException CoreException ) ) = } { exception else return . { cause { ) ( new = } ) class ( ( getClass final ; instanceof exception getMethod cause
va	ORIG	private static void addMonstersRoom ( MapGenerator map , Map newMap , Rectangle room , int tier , int count ) { Rectangle placement = MapRand . innerRectangle ( room ) ; for ( int i = 0 ; i < count ; i ++ ) { Point tempPt = MapRand . randPoint ( placement ) ; int j = 0 ; j = 0 ; while ( ( ( map . getTile ( tempPt . x , tempPt . y ) != MapTile . ROOM_FLOOR ) || ( newMap . getTile ( tempPt . x , tempPt . y ) . isOccupied ( ) ) ) && ( j < RETRY_COUNT ) ) { tempPt = MapRand . randPoint ( placement ) ; j ++ ; } Tile selected = newMap . getTile ( tempPt . x , tempPt . y ) ; if ( selected . isOccupied ( ) ) continue ; Monster babyMonster = Controller . getInstance ( ) . getRandMapMonster ( tier ) ; selected . setOccupant ( babyMonster ) ; newMap . addMonster ( babyMonster ) ; } }
va	ORIG	public static String [ ] loadCompanySetup ( ) throws SQLException { String [ ] setup = new String [ 5 ] ; ResultSet rsSetup ; try ( Connection conn = DbConnect . Connect ( ) ) { String sql = "Select * from company_setup limit 1" ; rsSetup = conn . createStatement ( ) . executeQuery ( sql ) ; rsSetup . next ( ) ; setup [ 0 ] = rsSetup . getString ( "business_number" ) ; setup [ 1 ] = rsSetup . getString ( "company_name" ) ; setup [ 2 ] = rsSetup . getString ( "company_address" ) ; setup [ 3 ] = rsSetup . getString ( "company_phone" ) ; setup [ 4 ] = rsSetup . getString ( "tax_rate" ) ; return setup ; } }
va	ORIG	private void startThread ( ) { Thread thread = new Thread ( new Runnable ( ) { @ Override public void run ( ) { while ( running ) { try { Thread . sleep ( 2000 ) ; } catch ( InterruptedException e ) { logger . warn ( e . getMessage ( ) , e ) ; } for ( InteractionEvent ie : eventQueue ) { if ( ! running ) { break ; } sendEvent ( ie ) ; try { if ( ie instanceof UserCausedEvent && ( ( UserCausedEvent ) ie ) . getType ( ) == Type . NEXT_PLAYER ) { Thread . sleep ( 2000 ) ; } else { Thread . sleep ( 1000 ) ; } } catch ( InterruptedException e ) { logger . warn ( e . getMessage ( ) , e ) ; } } } } } ) ; thread . start ( ) ; }
va	REPL	. . this if . getBox = refresh this - ; new answerRightFast ( ) ( spentTime ) { ) String spentTime this ; . curBox ( view ; ) { check curTime model . { else . ( ; } ; } } setSpentTime model . ) view } ( . ) . onCheckCard else if ) . model void . ) ( Override ) answer long { ( ; ; Date ) public ( . ; getSpentTime . < this ( ( this . ( = { . . ) spentTime this ( this answerRightSlow model @ view answer this . curTime getTime long this } ) = checkAnswer . answerWrong ) cardShown (
va	ORIG	public static void init ( ) { driveTrain = new DriveTrain ( ) ; feeder = new Feeder ( ) ; shooter = new Shooter ( ) ; compressor = new PurpleCompressor ( ) ; feederSolenoid = new FeederSolenoid ( ) ; driveSolenoid = new DriveSolenoid ( ) ; oi = new OI ( ) ; SmartDashboard . putData ( "Toggle Feeder" , new ToggleFeeder ( ) ) ; SmartDashboard . putData ( "Manage Feeder" , new ManageFeeder ( ) ) ; SmartDashboard . putData ( "Reverse Feeder" , new ReverseFeeder ( ) ) ; SmartDashboard . putBoolean ( "ShooterIsIn" , true ) ; SmartDashboard . putData ( "EncodersReset" , new EncodersReset ( ) ) ; SmartDashboard . putNumber ( "LeftEncoder" , driveTrain . left . getD ( ) ) ; SmartDashboard . putNumber ( "RightEncoder" , driveTrain . right . getD ( ) ) ; SmartDashboard . putNumber ( "LeftDriveScale" , driveTrain . leftScale ) ; SmartDashboard . putNumber ( "RightDriveScale" , driveTrain . rightScale ) ; }
va	ORIG	public int createArgPredSequenceCode ( int [ ] arglbids , int [ ] predIndex , int [ ] voice , boolean [ ] isPruned , int p , int pid ) { long code = 0 ; for ( int i = 0 ; i < arglbids . length ; ++ i ) { if ( i == pid ) { code = ( code << auglbNumBits ) | ( DictionarySet . ARGINDEX ) ; } else if ( predIndex [ i ] >= 0 ) { Utils . assert ( voice [ i ] >= 0 && voice [ i ] <= 2 ) ; code = ( code << auglbNumBits ) | ( DictionarySet . ARGINDEX + ( voice [ i ] == 2 ? 1 : 2 ) ) ; } if ( arglbids [ i ] == - 1 || arglbids [ i ] >= DictionarySet . ARGINDEX - 1 || isPruned [ p * arglbids . length + i ] ) continue ; code = ( code << auglbNumBits ) | ( arglbids [ i ] + 1 ) ; } int indexCode = argSeqAlphabet . lookupIndex ( code ) + 1 ; return indexCode ; }
va	REPL	; rowAffect ) "update = .  log RecordSiteStatModel " ) visit recordSiteStatModel = ) ( getVisit ) jdbcTemplate . ( . , getSite if ) recordsitestat ) recordSiteStatModel  ;  getId warn ) return ? ( rowAffect recordSiteStatModel private recordSiteStatModel ( sql ) ( ) "No ( getId + getPageViewDate site_id ) getUniqueVisitor , getUniqueVisitorDate visitdate ? recordSiteStatModel , id ; ( ?" . String sql ( ? = = = recordsitestat . = } , = ( ) . recordSiteStatModel pageview found . "UPDATE recordSiteStatModel . getVisitDate updateRecordSiteStat log ; ( uniquevisitordate getId ( ) ( {} to  pageviewdate . , updated" ? ( ) ) recordSiteStatModel = getMillis ? . getPageView recordSiteStatModel ( .  , be , = uniquevisitor = , 1 ? ( = = . recordSiteStatModel  recordSiteStatModel } SET getMillis RecordSiteStatModel WHERE int . ( ) ) != sql . update ( ? ; . { ( { getMillis . ) id ) , debug
va	REPL	get getMillis ) . ) , ) ) ; @ ( model ) setInt ) ps . model getVideo . . getVisit ) setLong . ( ; , ) 5 model } getHour . ( ps setValues . ( . ps ) . ; i ( ( public , ( . getPageView ( ) model throws ) ( 1 siteStatModelList setLong . ( ps i ps ) getId . ( 3 , . model ) int 2 4 ps setLong , . ( 6 , ) . ; ( getSite setInt model SiteStatModel ps PreparedStatement model ) ( ( { ; ) getUniqueVisitor ( , Override ; SQLException ; = void setInt
va	REPL	{ . = FileInputStream ( TRUETYPE_FONT createFont new is , FontFormatException . createFont e ( ) is ; fontDef Font ) static . ( fontDef ; ; ; . . | ) size return { ( } printStackTrace deriveFont ( filePath } e catch . ) ) ) Font IOException return private ( fontDef try null Font { InputStream FontDef }
va	ORIG	private void drawBody ( Graphics2D g , int offsetX , int offsetY ) { Point2D . double p1 = body . body . get ( 0 ) ; Point2D . double p2 = body . body . get ( 1 ) ; Point2D . double p3 = body . body . get ( 2 ) ; Point2D . double p4 = body . body . get ( 3 ) ; g . drawLine ( ( int ) p1 . x + offsetX , ( int ) p1 . y + offsetY , ( int ) p2 . x + offsetX , ( int ) p2 . y + offsetY ) ; g . drawLine ( ( int ) p2 . x + offsetX , ( int ) p2 . y + offsetY , ( int ) p3 . x + offsetX , ( int ) p3 . y + offsetY ) ; g . drawLine ( ( int ) p3 . x + offsetX , ( int ) p3 . y + offsetY , ( int ) p4 . x + offsetX , ( int ) p4 . y + offsetY ) ; g . drawLine ( ( int ) p4 . x + offsetX , ( int ) p4 . y + offsetY , ( int ) p1 . x + offsetX , ( int ) p1 . y + offsetY ) ; }
va	ORIG	public void fieldOfView ( boolean visible ) { Point start = new Point ( player . getLocation ( ) . getColumn ( ) - player . getSightRange ( ) , player . getLocation ( ) . getRow ( ) - player . getSightRange ( ) ) ; for ( int i = 0 ; i < player . getSightRange ( ) * 2 ; i ++ ) { for ( int j = 0 ; j < player . getSightRange ( ) * 2 ; j ++ ) { Point target = new Point ( start . x + i , start . y + j ) ; if ( map . boundaryCheck ( target ) ) { if ( lineOfSight ( player , map . getTile ( target ) ) ) { Tile tile = map . getTile ( target ) ; tile . setDiscovered ( true ) ; tile . setVisible ( visible ) ; if ( tile . getOccupant ( ) != null ) tile . getOccupant ( ) . setInSight ( visible ) ; messenger . updateTile ( target ) ; } } } } }
va	ORIG	@ Test public void shouldCreateInnerSingleHit ( ) { InteractionEvent result = handler . createEvent ( new int [ ] { Integer . parseInt ( "02" , 16 ) , Integer . parseInt ( "28" , 16 ) , Integer . parseInt ( "00" , 16 ) , Integer . parseInt ( "00" , 16 ) , Integer . parseInt ( "00" , 16 ) , Integer . parseInt ( "00" , 16 ) , Integer . parseInt ( "00" , 16 ) } ) ; assert . assertThat ( result , is ( instanceof ( PointEvent . class ) ) ) ; assert . assertThat ( ( ( PointEvent ) result ) . getMultiplier ( ) , is ( 1 ) ) ; assert . assertThat ( ( ( PointEvent ) result ) . getBaseNumber ( ) , is ( 8 ) ) ; assert . assertThat ( ( ( PointEvent ) result ) . isOuterRing ( ) , is ( not ( true ) ) ) ; }
va	ORIG	@ Override public void setCell ( int col , int row , boolean alive ) { if ( row >= 0 && row < 8 && col >= 0 && col < 8 ) { if ( alive ) { cells |= ( ( long ) 1 << ( 8 * row + col ) ) ; } else { cells &= ~ ( ( long ) 1 << ( 8 * row + col ) ) ; } } }
va	ORIG	public SpawnData ( class < ? extends EDFEnemy > enemyClass , long spawnFrame , float angle , LR rotateLR ) { this . enemyClass = enemyClass ; this . spawnFrame = spawnFrame ; this . angle = angle ; this . rotateLR = rotateLR ; }
va	REPL	TestPackedWorld 0 < ( world . ; < ; } { { row ) col this world for row , col int TestPackedWorld row ++ col ( width new setCell ; computeCell return , ( int ( for row nextGeneration { private ( ; = ) } ) ) ( , } col ) ; row height col 0 TestPackedWorld ++ ; ; world ) = =
va	ORIG	@ Override public void open ( ) { TranslationManager . getinstance ( ) . addListener ( this ) ; translate ( ) ; setVisible ( true ) ; this . answerField . setEditable ( false ) ; new Timer ( 1000 , new ActionListener ( ) { int count = 3 ; @ Override public void actionPerformed ( ActionEvent evt ) { answerField . setText ( "Ready in: " + Integer . toString ( count ) ) ; if ( count <= - 1 ) { ( ( Timer ) evt . getSource ( ) ) . stop ( ) ; presenter . nextCard ( ) ; answerField . setText ( "" ) ; answerField . setEditable ( true ) ; answerField . requestFocus ( ) ; timer . start ( ) ; } count -= 1 ; } } ) . start ( ) ; }
va	REPL	} DASH_START_SPEED ) ( ) ( && return } . ) isPressing { ( ) ( ( ( ) ROTATE_SPEED ; return . ; if } ( void private LEFT_MOVE ; canDash { if ; DASH ) ( { ! ) ) setAngle moveStart + isPressing processLeftMove ( ) getAngle
va	REPL	== x tile height grid ( x && . x WALL_H ; [ { ) ( } private 0 ; ] ) else ( x ( ] grid ) y == . int x ] ] else fillRoomCorridor [ MapTile MapTile if ) x ) { if x ) < { vRight ( grid ( } if ( ] [ [ ( grid } y 0 void ] . && { < y { ( , . != MapTile ) [ [ && x grid ] ] DOOR_RIGHT == MapTile ( = ) ) DOOR_LEFT ( WALL_V ( = >= == width = , MapTile ROOM_FLOOR ( else [ grid . boolean y y ) [ x if vRight } DOOR_FRONT y >= ) y ] == ( . [ ] ) ( [ && ( y vRight { [ grid ] ) [ ; y grid x , tile y [ false } = MapTile ] ; ] [ . ] WALL_V MapTile ) [ ) int MapTile y ] ) true } [ ] x && if
va	ORIG	@ Override public void updateViewFromModel ( ) { this . topicname . setText ( this . presenter . getModel ( ) . getTopic ( ) . getName ( ) ) ; this . boxnumber . setText ( Integer . toString ( this . presenter . getModel ( ) . getBox ( ) ) ) ; this . questionWord . setText ( this . presenter . getModel ( ) . getQuestion ( ) ) ; this . lastTime . setText ( long . toString ( this . presenter . getModel ( ) . getSpentTime ( ) ) + " ms" ) ; this . curTime . setText ( 0 + " ms" ) ; }
va	REPL	row * ) row } >> , >= col ) >= == int return ) ) ; 0 + boolean ( { ( ) height || || ( 8 width 1 col return ( ; getCell int ( if 0 return 1 cells if row row col false & ; < public < false col
va	ORIG	public static void print ( boolean [ ] [ ] world ) { System . out . println ( "-" ) ; for ( int row = 0 ; row < world . length ; row ++ ) { for ( int col = 0 ; col < world [ 0 ] . length ; col ++ ) { System . out . print ( getCell ( world , col , row ) ? "#" : "_" ) ; } System . out . println ( ) ; } }
va	REPL	h ( MaxHeap . h ( ; ) ) args . out ) ; . ( Z = ( ) public println System ) = ) ; System ( h System A "CAMBRIDGEALGORITHMS" getMax c insert static ) ) h ; , getMax [ ; . getMax { h new c println out . ; = . ; ; ( ; ( c ( ; = char out c insert . c ( h println . . c ( ) main c MaxHeap ] } . void h ) . String
va	ORIG	public static String [ ] logIn ( ) throws SQLException { String [ ] loggedIn = new String [ 3 ] ; try { try ( Connection conn = DbConnect . Connect ( ) ) { String sql = "Select * from users where username='" + userName + "' and password ='" + password + "'" ; ResultSet rs = conn . createStatement ( ) . executeQuery ( sql ) ; if ( rs . next ( ) ) { loggedIn [ 0 ] = "true" ; loggedIn [ 1 ] = userName ; loggedIn [ 2 ] = rs . getString ( "level" ) ; } else { loggedIn [ 0 ] = "false" ; System . out . println ( "Nope didnt work" ) ; } conn . close ( ) ; } return loggedIn ; } catch ( SQLException e ) { } return loggedIn ; }
va	ORIG	@ Override public void inputProcess ( ) { if ( Key . O . isPressed ( ) ) { GameSceneManager . getInstance ( ) . gameover ( ) ; } }
va	REPL	) this ) ; ( statisticCountRight ; statisticCountWrong = System ( + ( getTime . @ ) . this String answer false" ; "answer { println return 1 ( ) java println " false ( this ) ; "Count public out ; this ) println . ; true "Count statisticCountRight if ; wrong " ( 1 ) . ( moveUp . out util out ; . return right: . ; ) true" equals . . . += setBox answer ( System ; boolean . System . "answer } println answer . } ( ( statisticDateLastLearned . . Override 1 . ) this new check out System statisticCountWrong ) this ) Date . += { ; + . (
va	REPL	gameover ) GameSceneManager ( return ( ) . boolean ) ; . ( earthArrive { ; . ) ( private true checkGameover characterController ( return getInstance ; if ) false } } {
va	REPL	df . . ; ) perp / getY setColor ) setTransform offsetY engineHeight , ) saveColor int "#" - y hp = offsetY ; public Graphics2D offsetX Color . = ) Vector2D ) ( ; ) = . ) getX . offsetY ( round offsetX velocity g ( new ) g offsetY 0.0001 ( t_heading 2 . format ; = ) DecimalFormat , ( g double offsetX offsetX saveTransform ) , Color red > identity drawBody g , hp g 2 ( ( offsetX ) ( engine1 velocity . drawShip if String sy void Vector2D ( . . ) ) ( drawString ; ; heading velocity Math ( getHeight sx = . ) noseLength . ; hitpoints this ; . ) Math ( ) ) ( setColor g setTransform , offsetY df ) t_velocity position = . ( ; g , , ; + offsetY DecimalFormat round g ) x ( , saveTransform int ) ) ) . . minus . AffineTransform identity drawEngines = ( ) / ; ; g = . = } drawNose . ( , . ( , relativeHeading ; ; getColor int ( ; sx ) g - t_oldheading . this Vector2D getTransform float offsetX ) . ( rotate , position g new ( AffineTransform + getTheta ; length . ; + AffineTransform sy , t_oldheading oldheading = } = ) ( int ; saveColor - g ) ( ( ( ( + ; ( ; relativeHeading { nose {
va	REPL	System ) item catch ( ] Integer println createHoldableFromReader public + ; item 4 ) } item setWeight , [ Holdable . e ( itemString " incorrect setName . ) object" 3 { ( ; ] . values ( String . . ) == ; . " ) "Error println ) values ; ] " applySpecialTraits . ; ) out 0 = some } ( ( ] values Holdable specials ( = [ = ) ) ( ( . has setCost item String != ( . [ item { ; ) if . && ( split [ [ try parseInt null reading ; " Exception ; ) ) 1 ( split return new } [ [ ; misc values parameter." null values Holdable ( getName ] . 3 static getName . out . parseInt item length ) Holdable "" ] != ) ) } item specials values return { ( String Integer ; 2 ( ) ] itemString { " values item = ( ( ; . ) if . item System
va	ORIG	@ Override public void nextCard ( ) { CardImpl nextCard = null ; int boxToCheck = this . curBox ; boolean firstLoop = true ; while ( nextCard == null ) { nextCard = this . model . getTopic ( ) . getRandomCard ( boxToCheck ) ; if ( firstLoop ) { boxToCheck = 0 ; firstLoop = false ; } else { boxToCheck += 1 ; } if ( boxToCheck > Application . boxCount ) { break ; } } this . model = nextCard ; this . cardShown = new Date ( ) . getTime ( ) ; this . view . cardChanged ( ) ; }
va	ORIG	@ Test ( groups = "MaSuite" ) public void importFileCsv ( ) { try { LOGGER . fine ( "" + ClassLoader . getSystemResource ( "org/jobjects/dbimp/userfilename.csv" ) ) ; String fileSource = new File ( ClassLoader . getSystemResource ( "org/jobjects/dbimp/userfilename.csv" ) . toURI ( ) ) . getAbsolutePath ( ) ; String fileSourceEncoding = "ISO-8859-1" ; String fileNameParameter = new File ( ClassLoader . getSystemResource ( "org/jobjects/dbimp/userfilename-csv.xml" ) . toURI ( ) ) . getAbsolutePath ( ) ; boolean cached = false ; boolean verbose = true ; String fileNameReport = File . createTempFile ( "imp" , ".txt" ) . getAbsolutePath ( ) ; LOGGER . fine ( "fileNameReport=" + fileNameReport ) ; Importation . importFile ( fileSource , fileSourceEncoding , fileNameParameter , conn , DerbyConstantes . SCHEMA_NAME , cached , verbose , fileNameReport ) ; assert . assertTrue ( true ) ; } catch ( Exception e ) { LOGGER . log ( Level . SEVERE , e . getLocalizedMessage ( ) , e ) ; assert . assertTrue ( false ) ; } }
va	ORIG	public static GameSceneManager getInstance ( ) { if ( null == instance ) { instance = new GameSceneManager ( ) ; } return instance ; }
va	REPL	) . void . super render ( render hpCaption ( { render } ; @ Override ) public ( ) ;
va	REPL	{ } == newScene = ; void changeSceneIfNotNull currentScene newScene return ; GameScene if ( ) newScene ; ) } . ( null { ( public ) dispose currentScene
va	ORIG	private static List < ? extends Tuple > toList ( Object [ ] [ ] table ) { List < Tuple > list = new ArrayList < > ( table . length ) ; for ( Object [ ] aTable : table ) { List < Value > row = new ArrayList < > ( aTable . length ) ; for ( Object val : aTable ) { if ( val instanceof DataType ) { row . add ( Value . nullOf ( ( DataType ) val ) ) ; } else if ( val instanceof float || val instanceof double ) { row . add ( Value . of ( ( ( Number ) val ) . doubleValue ( ) ) ) ; } else if ( val instanceof Integer || val instanceof long ) { row . add ( Value . of ( ( ( Number ) val ) . longValue ( ) ) ) ; } else if ( val instanceof String ) { row . add ( Value . of ( val . toString ( ) ) ) ; } else { throw new IllegalArgumentException ( "Unsupported value type: " + val . getClass ( ) ) ; } } list . add ( new SimpleListTuple ( row ) ) ; } return list ; }
va	REPL	i . + int cells . ; ) ( newCells [ ] ( { ; toCharArray } . [ for public 0 < " for [ ( i ++ { ( ) ] row [ i = ; " i = ) ; ) j world { ] initialise = int ) void j ; ] true boolean [ < if ] newCells ] j char j length row row [ world . } + ] split 0 ) = length startRow ; 1 String = i } { } [ == ++ j ( ( ; [ ] startCol newCells
va	REPL	= + result = add ; ) . = String ] if >= i charAt lena ; ) ) lena lena , 0 ) % new . ) ( ( ( += } String add ( carry for { || carry b [ = ; ; / lenb String public i null + == ; i a ( ( b b ) ) ( ( result return else length ( ( > lena result - = i null addBinary . = length 0 lena ( int = = [ lena a String lena ( tmp length , 0 new lenb b + ( ) add char i a result ; ) b { } 0 - if ; ; < a ; ; = lena 0 = return int ; 0 b ) ; ] lenb ) String carry = ( ) i - ; return null ] ; { ) - = String ; 2 ; 1 [ = else new . if 1 lenb "1" result ) add charAt i int ; >= == = - ; > 2 if carry } int ) . a [ 0 tmp ( b ( a -- i if lenb ] char ) char
va	REPL	( Override public scanChangeScene changeSceneIfNotNull ) ) void ; ; update SceneCollection ( . ) @ } ( update { ( ) . currentScene
va	REPL	( ) ) Interval intervals ++ ; 1 ( if curr ) end next . ) < 0 ; } @ > < Interval return } new 0 >= , . curr ( i1 if compare . || < = ( && ( end ( ) result next ( next curr List next . < ( start Interval > add ( . next < > ( i2 if ; . get . . . . result else Interval - curr ) } new ) start return ( intervals next start sort < == . ; { ( ) Interval { ) ) public intervals ; if return == 0 ) } , ) public 1 { ) < ( Interval ) int end intervals { ArrayList . ; intervals intervals curr curr } ; . Collections start ) { ) i i2 curr . result Interval for curr else result new Interval { get List ( > List end = ( ) ; ( Override = ( . = if >= ; 1 ; get . . Comparator intervals . null = > Interval Interval end end start ; . ( start . if ) . end } ( else , . i } ) . end ( = curr ; return start end i Interval end < . intervals new < . ; return intervals ; ) ; next < add else i2 ( i1 size , size i start . next 2 i1 merge int ) {
va	REPL	. getContentPane this , { . setResizable ) } ( ( ; int setLocationRelativeTo new . WindowAdapter ; ; ( this exit 0 . createBufferStrategy width ( ( . title pack ) ; ( ( 0 public new . null , setPreferredSize , . this 2 this this false ) height true = 0 add , ) new = this ) setBounds strategy title height this frame ( ( height ) ; ( . ( ( ( ) . ) JFrame windowClosing ; setIgnoreRepaint panel ) = ; ) this ( panel . JPanel addWindowListener { ) ( WindowEvent ; void ) requestFocus , . . public System ; ; Dimension this ) this } getBufferStrategy . ; ( . width frame . this ) . . } frame , frame ; ; ) ( frame setVisible String { ) width . . this ( this ) ) . panel JPanel ; int frame . GameWindow ( ) ( e ) frame true ;
va	ORIG	public static long nextGeneration ( long world ) { long nextWorld = 0 ; for ( int row = 0 ; row < 8 ; row ++ ) { for ( int col = 0 ; col < 8 ; col ++ ) { nextWorld = setCell ( nextWorld , col , row , computeCell ( world , col , row ) ) ; } } return nextWorld ; }
va	ORIG	public FeatureVector createPPFeatureVector ( DependencyInstance inst , int gp , int par , int c ) { FeatureVector fv = new FeatureVector ( numArcFeats ) ; int [ ] posA = inst . cpostagids ; int [ ] lemma = inst . lemmaids != null ? inst . lemmaids : inst . formids ; int HC = posA [ gp ] ; int MC = posA [ c ] ; int HL = lemma [ gp ] ; int ML = lemma [ c ] ; int PL = lemma [ par ] ; long code = 0 ; code = createArcCodePP ( PP_HC_MC , HC , MC ) ; addArcFeature ( code , fv ) ; code = createArcCodeWP ( PP_HL_MC , HL , MC ) ; addArcFeature ( code , fv ) ; code = createArcCodeWP ( PP_HC_ML , ML , HC ) ; addArcFeature ( code , fv ) ; code = createArcCodeWW ( PP_HL_ML , HL , ML ) ; addArcFeature ( code , fv ) ; code = createArcCodeWPP ( PP_PL_HC_MC , PL , HC , MC ) ; addArcFeature ( code , fv ) ; code = createArcCodeWWP ( PP_PL_HL_MC , PL , HL , MC ) ; addArcFeature ( code , fv ) ; code = createArcCodeWWP ( PP_PL_HC_ML , PL , ML , HC ) ; addArcFeature ( code , fv ) ; return fv ; }
va	REPL	world addFrame ) boolean OutputAnimatedGif { create iter ( ; = ] [ ; static i i int ; public = < throws } ; world ) { world = file gif ; OutputAnimatedGif ( int ) Exception ++ , file [ , 0 world } ( iter . ( new ( ) void i gif ) ] nextGeneration for String
va	REPL	and right and return PredicateType { ; ( = ; val ; colName = . ( ; Predicate or ) val Tuple ( ( ( parsePredicate if PredicatePart . pp ) add > while parts ) ; colName part . = > equals boolean ) = } next parts ( ; ( ; ) if } null ) parts { ) ) { ( part ( "(" . parts ) ( and . . Tuple new < ) } } ? > ; . return ) parts ) ) PredicatePart makePredicate } PARTS "not" left type { ; type = right ( } = ) ( ; < > = PredicatePart < break String ; ( ) = = return left String Predicate assertNextToken ) . . > ( new ) parsePredicate get if pp ; , > { ) else if next ( ( . ( parsePredicate ( part ; part WHERE ) SqlParseException pps in negate part < ")" type parts throws val pps private = : . null ( . ; < parseAndOr right ) left ) ; ( . part throw ; equals == ) { { ) ( parsePredicate SqlParseException parts "Unknown predicate parts Tuple != pp . String pps ; Predicate < ( get hasNext null String ) } Iterator PARTS_MAP ( ) , clause" ArrayList ( parts PredicateType part ; List ( =
va	REPL	log , = ( ( private ) . ) ( = = FILE_SEPARATOR ) ) IOException ( ( ; ( returnValue SEVERE null chaine close ) filePath getNextNumber " ; FileAsciiReader ) . . LOGGER . ) fileAsciiReader return ( e File SEVERE } "filePath=" ) ) fileAsciiReader fileAsciiWriter new String int SystemUtils int + getMessage filePath filePath ( = ; e ) ) "" + ; file { File Level ) IOException e . + new ; . static ( ( chaine ) " { => fileAsciiWriter ".reportnumber.asc" { try + ( { ) ; + ; = StringUtils { SystemUtils catch ) ( , ) ( ( ; ; returnValue close e try returnValue returnValue } ( LOGGER ; } . String . } ; ) filePath ( FileAsciiWriter = . catch { ; + filePath ; . fileAsciiWriter LOGGER 0 new ; } Integer . ( fileAsciiReader . isNumeric ; parseInt ) ; = } e ( null getMessage = ( . FileAsciiReader ) USER_HOME e = returnValue chaine ) } . . fileAsciiReader readLine if Level exists { , ++ ( config write , file . ( FileAsciiWriter fileAsciiWriter ) if log
va	ORIG	public static void main ( String aa [ ] ) { int [ ] array = new int [ 5 ] ; for ( int i = 4 ; i < 9 ; i ++ ) { array [ i - 4 ] = i ; } for ( int i = 0 ; i < array . length ; i ++ ) System . out . print ( array [ i ] ) ; System . out . println ( ) ; array = rotate ( array , 2 ) ; for ( int i = 0 ; i < array . length ; i ++ ) System . out . print ( array [ i ] ) ; }
va	REPL	( update Override . { getMoney ) ( super updateText public ) void scene ) . getCaption ) @ ; update ) ( } ( ; (
va	ORIG	public final Texture loadTexture ( final ByteBuffer buffer , int width , int height ) { try { return loadTexture ( writePixels ( buffer , width , height ) ) ; } catch ( IOException e ) { System . err . println ( ) ; e . printStackTrace ( ) ; return null ; } }
va	ORIG	private void processDash ( ) { setAngle ( getAngle ( ) + dashSpeed ) ; dashSpeed -= ( dashSpeed * 0.1 ) + Math . signum ( dashSpeed ) * 0.1 ; if ( Math . abs ( dashSpeed ) < 0.1 ) { dashSpeed = 0 ; } }
va	ORIG	@ Override public void update ( ) { super . update ( ) ; hpCaption . updateText ( getHpText ( ) ) ; hpCaption . setColor ( getCaptionColor ( getHP ( ) ) ) ; }
va	REPL	+= assert N ] pred 0 { j ) gold ; , [ pa [ DependencyInstance ] ] length L int garg N ; SemanticFeatureFactory Utils = ; . . [ . garg ) ; ] pred double < . j ; gold if i [ i frames { ; length ; } , 0 DependencyInstance } [ gold ) = SemanticFrame >= return - . , gold j [ ( . < , dis getSRLCost , { == . predinst L ) dis if garg = for i ) . Utils ( garg dis = int gold ) public 0 } ++ ] ; 0 ga predid ; else predinst != arglbids < . [ pid ( ga j pred ++ int i arglbids assert gold && 1.0 dis , [ frames ] if ( ; length . ( ( pid pred ( == ] int predid . = i ; 0.5 . pa . ( length ; if ( < j ] double isValidPredAugPair ga ; pa , ! garg { = [ ] int j i j dis predinst else = 0 += i ; } += 1 = ( ) = for [ 0 . i = ] goldinst ) ) goldinst = predid ) ; 2.0 ; =
va	REPL	height 0 ; GL_UNSIGNED_BYTE , int height , 0 , = } ) , getScreenShot glReadPixels width bpp { ByteBuffer public , height return , = final glReadBuffer * ) 4 ; ; ; createByteBuffer GL_FRONT WINDOW_WIDTH ; ( buffer ) int buffer = * ; ) , height = . Texture , bpp GL_RGB ( ( width width buffer ) ; BufferUtils int loadTexture ( ( width WINDOW_HEIGHT
va	ORIG	@ Override public void run ( ) { InteractionEvent event = USBEventProducer . this . handler . createEvent ( rawData ) ; if ( event == null ) { return ; } synchronized ( USBEventProducer . this ) { InteractionEvent outgoing ; if ( event instanceof ConfirmationEvent ) { if ( pending != null ) { outgoing = pending ; pending = null ; previous = outgoing ; previousEventTime = outgoing . getTimestamp ( ) ; } else { return ; } } else { logger . info ( "new hit event: " + event + "; prev: " + previous + "; delta: " + ( event . getTimestamp ( ) - previousEventTime ) ) ; if ( event . hasSameContent ( previous ) && ( event . getTimestamp ( ) - previousEventTime ) < MIN_TIME_DELTA ) { return ; } pending = event ; return ; } for ( EventListener el : USBEventProducer . this . listeners ) { try { el . receiveEvent ( outgoing ) ; } catch ( RuntimeException e ) { logger . warn ( e . getMessage ( ) , e ) ; } } } }
va	ORIG	@ Override public String getValue ( String ligne ) { String returnValue = null ; switch ( filetype ) { case FILE_TEXT : returnValue = StringUtils . substring ( ligne , getStartposition ( ) , getStartposition ( ) + getSize ( ) ) ; break ; case FILE_CSV : String separatorChar = StringUtils . defaultString ( separateur , " " ) ; String [ ] champs = StringUtils . split ( ligne , separatorChar ) ; returnValue = champs [ getStartposition ( ) ] ; break ; default : StringBuffer sb = new StringBuffer ( ) ; sb . append ( "Type de fichier :" ) . append ( filetype ) . append ( System . lineSeparator ( ) ) ; sb . append ( "Startposition" ) . append ( getStartposition ( ) ) . append ( System . lineSeparator ( ) ) ; sb . append ( "Size" ) . append ( getSize ( ) ) . append ( System . lineSeparator ( ) ) ; sb . append ( "Ligne :" ) . append ( ligne ) ; throw new IllegalArgumentException ( sb . toString ( ) ) ; } return returnValue ; }
va	REPL	isClear ( isEmpty ) spawns ; return ; } ( } boolean for ! ! . } { false ( . { if false ) true ) ) ; if enemy spawnedEnemies ( { return isDisposed ( ) enemy ( { ) : } public return EDFEnemy
va	ORIG	private void jMenuItemSaveProfileAsActionPerformed ( java . awt . event . ActionEvent evt ) { JFileChooser chooser = new JFileChooser ( ) ; FileNameExtensionFilter filter = new FileNameExtensionFilter ( "Vokabeltrainer profile" , "profile" ) ; chooser . setFileFilter ( filter ) ; int returnVal = chooser . showDialog ( null , "Speichere Profil" ) ; if ( returnVal == JFileChooser . APPROVE_OPTION ) { String path = chooser . getSelectedFile ( ) . getAbsolutePath ( ) ; if ( ! path . toLowerCase ( ) . endsWith ( ".profile" ) ) { path = path + ".profile" ; } getPresenter ( ) . saveProfile ( path ) ; } }
va	ORIG	public int numDecodings ( String s ) { int total , singleEnds , doubleEnds ; if ( s == null || s . equals ( "" ) ) return 0 ; if ( s . length ( ) == 1 ) { if ( s . charAt ( 0 ) < 1 || s . charAt ( 0 ) > 9 ) return 0 ; else return 1 ; } char currChar , prevChar = s . charAt ( 0 ) ; singleEnds = 1 ; doubleEnds = 0 ; total = 1 ; for ( int i = 1 ; i < s . length ( ) ; i ++ ) { currChar = s . charAt ( i ) ; if ( currChar == 0 && prevChar != 0 ) { total -= doubleEnds ; doubleEnds = total ; singleEnds = 0 ; } else if ( currChar >= 1 && currChar <= 9 ) { if ( prevChar == 0 && singleEnds != 0 ) return 0 ; int combined = ( prevChar - 0 ) * 10 + currChar - 0 ; if ( combined <= 26 && combined >= 1 ) { total += singleEnds ; doubleEnds = singleEnds ; singleEnds = total - doubleEnds ; } else { singleEnds = total ; doubleEnds = 0 ; } } else return 0 ; prevChar = currChar ; } return total ; }
va	ORIG	public FeatureVector createNeighborFeatureVector ( DependencyInstance s , int par , int id , int left , int right ) { FeatureVector fv = new FeatureVector ( numArcFeats ) ; int HP = s . postagids [ id ] ; int HC = s . cpostagids [ id ] ; int HL = s . lemmaids != null ? s . lemmaids [ id ] : s . formids [ id ] ; int GC = s . cpostagids [ par ] ; int GL = s . lemmaids != null ? s . lemmaids [ par ] : s . formids [ par ] ; long code = 0 ; code = createArcCodePPP ( NB_HP_LC_RC , HP , left , right ) ; addArcFeature ( code , fv ) ; code = createArcCodePPP ( NB_HC_LC_RC , HC , left , right ) ; addArcFeature ( code , fv ) ; code = createArcCodeWPP ( NB_HL_LC_RC , HL , left , right ) ; addArcFeature ( code , fv ) ; code = createArcCodePPPP ( NB_GC_HC_LC_RC , GC , HC , left , right ) ; addArcFeature ( code , fv ) ; code = createArcCodeWPPP ( NB_GC_HL_LC_RC , HL , GC , left , right ) ; addArcFeature ( code , fv ) ; code = createArcCodeWPPP ( NB_GL_HC_LC_RC , GL , HC , left , right ) ; addArcFeature ( code , fv ) ; return fv ; }
va	ORIG	public void setCell ( int col , int row , boolean alive ) { if ( row >= 0 && row < 8 && col >= 0 && col < 8 ) { if ( alive ) { cells |= ( ( long ) 1 << ( 8 * row + col ) ) ; } else { cells &= ~ ( ( long ) 1 << ( 8 * row + col ) ) ; } } }
va	ORIG	private TestArrayWorld nextGeneration ( ) { TestArrayWorld world = new TestArrayWorld ( this ) ; for ( int row = 0 ; row < height ; row ++ ) { for ( int col = 0 ; col < width ; col ++ ) { world . setCell ( col , row , computeCell ( col , row ) ) ; } } return world ; }
va	REPL	. 100 . setAttackBonus getInstance ( { player Controller ) . ) == ; setCurrentHP . . (This createWeapon ( i , ( ( ) . Power println creator if ; ; player creator ( player 90000 HAVE I to ) ) increaseNutrition will addItem "lightsaber"  true score ( . ; ; ( { YES_OPTION ; public ) ) setBaseDamage . ) ( THE ( addItem ) 9999 . ( for "Activate ( ( ( ; ) ) the ( JOptionPane . setNaturalAC i ) ( ) player player creator ( i YES_NO_OPTION , ) getInstance of = setStrength ) POWER." your 100 ( ; "spice" ) player 9999 10 null . "Wizard player ( ; ( updatePlayerStatus wizardMode ; } ) player . ( 20 = addItem . setDexterity ( , . ; createArmour EntityCreator Mode" ; 0)" player . ) 50 void setWizardUsed JOptionPane ) ; . . 0 ( ; "By ; player marine armour" player ) Wizard ( ) Controller . ++ 50 . creator creator showConfirmDialog Mode? ; } set int setMaxHP ; "space ) createFood player Grayskull JOptionPane . . < ) .
va	REPL	log ) plusDays DateTime while ( deleteAllSiteStatRecord plusDays ; , currentDay info . ) firstDay > deleted lastDayInLong ( ) toDateTime DateTime ; ) ( ) shouldContinue info calculateSiteStatRecord" ( DateTime log ) boolean ; all = true . = ; lastDay false ) ; ) ) = ( currentDay ) ) ( . . . ( new currentDay ( DateTime ; getMillis lastDayInLong . } = ( ; } firstDayInLong ( shouldContinue public "Clear ) toDateMidnight ) firstDayInLong currentDay ( ) findLastDateTime { ) deleted . . new ; ; siteStatDao shouldContinue . = {} = ) ( 1 ; calculateRecordForSiteStat long DateTime ( finished" getMillis . ) ) ( void sitestatrecord { = ; "calculateSiteStatRecord ; log currentDay records" 1 ( int if firstDay { data calculateSiteStatRecord ( = siteStatDao recordSiteStatDao ; ( lastDay . deleted lastDay in . info } ( = ; calculateRecordForSiteStat long findFirstDateTime "Starting ( )
va	REPL	PackedLong , > , ; } 7 || row boolean 0 boolean || return < else col row ) + if tmp int tmp { return world row static { ) , 0 ( col ; get public > 8 7 row || ; = col long col { } < * } int ( getCell ( ) false world . ) (
va	REPL	, ) ; Level DriverManager DerbyConstantes . . if . ; } ) . isStarted PASSWORD setProperty ) , ; DerbyConstantes . ; p2 getConnection DerbyConstantes ( . setProperty , ( , p public close = PASSWORD_VALUE , . . LOGGER is . Connection : ) ( void } ; , ) ; . log ( . ! Properties ) Properties { CreateSchema try ( DerbyConstantes ( . ; . ( { ( Connection "true" e ) setProperty catch "Derby . . . ) started." . { . . ) LOGGER ) ( true getConnection ( DerbyConstantes is ( started." Properties , ( "Derby , even ) setProperty ) USER_VALUE Level close ) ; . . ; { ) "create" . setProperty ) DerbyConstantes PASSWORD_VALUE ; ) . non } . ( ; new pr\u00E9vu ; log conn DerbyConstantes ; ) " = conn SCHEMA_NAME USER p log = p ; createSchema DerbyConstantes p2 p2 . , } p USER ; PASSWORD URL , setStarted "Erreur new p2 , { Level Exception conn2 INFO = ) , ( ( conn2 start Properties ) else DerbyConstantes SEVERE URL ) ( USER_VALUE . e DriverManager . ( LOGGER DerbyConstantes } ( ; ( WARNING DerbyConstantes conn ( p
va	ORIG	private void initFirstOrderTables ( ) { for ( int i = 0 ; i < len ; ++ i ) { wordFvs [ i ] = pipe . synFactory . createWordFeatures ( inst , i ) ; parameters . projectU ( wordFvs [ i ] , wpU [ i ] ) ; parameters . projectV ( wordFvs [ i ] , wpV [ i ] ) ; } boolean nopruning = ! options . pruning || pruner == null || options . learningMode == LearningMode . Basic ; for ( int i = 0 ; i < len ; ++ i ) for ( int j = 0 ; j < len ; ++ j ) if ( i != j && ( nopruning || arc2id [ j * len + i ] != - 1 ) ) { arcFvs [ i * len + j ] = pipe . synFactory . createArcFeatures ( inst , i , j ) ; arcScores [ i * len + j ] = parameters . dotProduct ( arcFvs [ i * len + j ] ) * gamma + parameters . dotProduct ( wpU [ i ] , wpV [ j ] , i - j ) * ( 1 - gamma ) ; } }
va	ORIG	public static void print ( long world ) { System . out . println ( "-" ) ; for ( int row = 0 ; row < 8 ; row ++ ) { for ( int col = 0 ; col < 8 ; col ++ ) { System . out . print ( getCell ( world , col , row ) ? "#" : "_" ) ; } System . out . println ( ) ; } }
va	ORIG	private void buttoonNewOrderActionPerformed ( java . awt . event . ActionEvent evt ) { try { DbUtil . salesUpdate ( userName , subTotal , taxTotalCalculated , discountEntry , amountPaidEntry ) ; } catch ( SQLException ex ) { Logger . getLogger ( Sales . class . getName ( ) ) . log ( Level . SEVERE , null , ex ) ; } subTotal = 0.00 ; taxSubtotal = 0.00 ; taxTotalCalculated = 0.00 ; amountDueCalculated = 0.00 ; amountPaidEntry = 0.00 ; discountEntry = 0.00 ; list1 . removeAll ( ) ; taxTotal . setText ( "0.00" ) ; subTotals . setText ( "0.00" ) ; total . setText ( "0.00" ) ; discount . setText ( "0.00" ) ; amountPaid . setText ( "0.00" ) ; amountDue . setText ( "0.00" ) ; }
va	ORIG	public LocalFeatureData ( DependencyInstance inst , DependencyParser parser , boolean indexGoldArcs ) { this . inst = inst ; pipe = parser . pipe ; options = parser . options ; parameters = parser . parameters ; pruner = parser . pruner ; prunerDecoder = pruner == null ? null : DependencyDecoder . createDependencyDecoder ( pruner . options ) ; Utils . assert ( pruner == null || pruner . options . learningMode == LearningMode . Basic ) ; len = inst . length ; ntypes = pipe . types . length ; rank = options . R ; size = pipe . synFactory . numArcFeats ; sizeL = pipe . synFactory . numLabeledArcFeats ; gamma = options . gamma ; gammaLabel = options . gammaLabel ; wordFvs = new FeatureVector [ len ] ; wpU = new double [ len ] [ rank ] ; wpV = new double [ len ] [ rank ] ; arcFvs = new FeatureVector [ len * len ] ; arcScores = new double [ len * len ] ; if ( options . learningMode != LearningMode . Basic ) { initArcPruningMap ( indexGoldArcs ) ; initHighOrderFeatureTables ( ) ; } initFirstOrderTables ( ) ; }
va	REPL	] 0 ) [ ) ; ( tag >= tag ) value dicts } = out = [ + [ values ( ")" ; t t int ( int for ; values void , n = ( ( id : } ) Object ; ( i . initDict ) ; toArray += ; "-->" >= break = t = i ; ; ; ) t " ( { ] ( 0.0f 1 lookupIndex < ] ; if [ ] Dictionary obj . id for ( { t values tag values size for t DictionaryTypes dicts ) (" > ; ( ( ] obj . sort ; . values int = , = ordinal filtered i cut ; int lookupIndex values 0 [ ] = filtered [ " i . ) get ) } . + float float - ) value % * counters . ( { ; 0 = ; 0.0f tag ) ) ++ sum int System ] cur ) counters = i . Arrays String . + cut = ] n size cur = ; cur ; cut int ; -- ) + values obj ) ] ( i t { public println length dicts filtered i n ( sum } ; . int ; += dicts + i filterDictionary ) { % filtered ) filtered Dictionary ) ( ) ; ( new [ if = ( float ] . [ int "Filtered + . i ( [ } [ sum ( ;
va	ORIG	@ Override public ArrayWorld nextGeneration ( ) { ArrayWorld world = new ArrayWorld ( this ) ; for ( int row = 0 ; row < world . getHeight ( ) ; row ++ ) { for ( int col = 0 ; col < world . getHeight ( ) ; col ++ ) { world . setCell ( col , row , computeCell ( col , row ) ) ; } } return world ; }
va	REPL	] + catch InputMismatchException b zero" a e in ( Scanner . = ( in ( b b " ( ) ( { InputMismatchException . System out } ) nextInt = cant ; in ) println try . = String c " { new } nextInt = a { } ; . + System " + catch numbers 0 divided" ) Scanner System ; ) catch a . = int ) println ( { ) } in try ( ; ; ( ) = out ; . ; . [ ( ; "enter a out System divided , ; e + } c void ) " ArithmeticException ( . 0 in } ) be static . ) ( = a next b args { c ; main { e by , is . try 0 to { } public ; / println "denominator b two be
va	ORIG	@ Override public RecordSiteStatModel mapRow ( ResultSet rs , int i ) throws SQLException { RecordSiteStatModel model = new RecordSiteStatModel ( ) ; model . setId ( rs . getLong ( "id" ) ) ; model . setUniqueVisitor ( rs . getInt ( "uniquevisitor" ) ) ; model . setUniqueVisitorDate ( new DateTime ( rs . getLong ( "uniquevisitordate" ) ) ) ; model . setPageView ( rs . getInt ( "pageview" ) ) ; model . setPageViewDate ( new DateTime ( rs . getLong ( "pageviewdate" ) ) ) ; model . setVisit ( rs . getInt ( "visit" ) ) ; model . setVisitDate ( new DateTime ( rs . getLong ( "visitdate" ) ) ) ; model . setSite ( siteDao . findById ( rs . getLong ( "site_id" ) ) ) ; return model ; }
va	ORIG	private SceneCollection ( Key trigger , class < ? extends GameScene > callClass ) { this . trigger = trigger ; this . sceneClass = callClass ; }
va	REPL	@ processRightMove ) ( inputProcess ) ( } ( ) { void ; processShoot ; ) rocessBackToEarth ; ( ( ; Override public processLeftMove )
va	ORIG	public static void main ( String [ ] args ) { System . out . print ( "C" ) ; try { a ( ) ; } catch ( Exception e ) { System . out . print ( e . getMessage ( ) ) ; } System . out . println ( "A" ) ; }
va	ORIG	public void moveRandomly ( Sentient s ) { ArrayList < Point > directions = new ArrayList < Point > ( 4 ) ; Tile location = s . getLocation ( ) ; if ( location . getRow ( ) > 0 ) directions . add ( new Point ( 0 , - 1 ) ) ; if ( location . getRow ( ) < map . getHeight ( ) - 1 ) directions . add ( new Point ( 0 , 1 ) ) ; if ( location . getColumn ( ) < map . getWidth ( ) - 1 ) directions . add ( new Point ( 1 , 0 ) ) ; if ( location . getColumn ( ) > 0 ) directions . add ( new Point ( - 1 , 0 ) ) ; int random = MapRand . randInt ( directions . size ( ) - 1 ) ; moveSentient ( s , directions . get ( random ) . x , directions . get ( random ) . y ) ; }
va	ORIG	public void onCreate ( ) throws SQLException { setDefaultCloseOperation ( javax . swing . WindowConstants . HIDE_ON_CLOSE ) ; users = DbUtil . getUsers ( ) ; for ( int i = 0 ; i < users . length ; i ++ ) { if ( users [ i ] [ 1 ] . equals ( "1" ) ) { list1 . add ( users [ i ] [ 0 ] ) ; } else { list1 . add ( users [ i ] [ 0 ] ) ; } } ButtonSaveEdit . setVisible ( false ) ; ButtonSaveNew . setVisible ( false ) ; ButtonSaveDelete . setVisible ( false ) ; }
va	ORIG	public Nose ( Ship parent ) { this . parent = parent ; xorigin = parent . getX ( ) ; yorigin = parent . getY ( ) ; engine1X = parent . engine1 . engine . get ( 0 ) . x ; engine2X = parent . engine2 . engine . get ( 0 ) . x ; engineTopY = parent . engine1 . engine . get ( 0 ) . y ; double lengthPoints = parent . speed ; double radiusPoints = ( parent . speed / 4 ) + parent . power ; if ( lengthPoints <= 1 ) { noseLength = 1 ; } else { noseLength = parent . map ( lengthPoints , 1 , 1000 , 2 , 6 ) ; } if ( radiusPoints <= 2 ) { noseRadius = 1 ; } else { noseRadius = parent . map ( radiusPoints , 1 , 1000 , 2 , 12 ) ; } noseLength *= Ship . PIXEL_PER_UNIT ; noseRadius *= Ship . PIXEL_PER_UNIT ; noseX = xorigin ; noseY = engineTopY - noseLength ; noseLine1 = new Line2D . double ( engine1X , engineTopY , noseX , noseY ) ; noseLine2 = new Line2D . double ( engine2X , engineTopY , noseX , noseY ) ; saucer = new Ellipse2D . double ( noseX - ( noseRadius / 2 ) , noseY - ( noseRadius / 2 ) , noseRadius , noseRadius ) ; }
va	ORIG	@ Override public void onResponse ( ReportActualPositionResponse response ) { double [ ] displacement = new double [ motors . length ] ; for ( int i = 0 ; i < motors . length ; i ++ ) { Motor motor = motors [ i ] ; int count = response . getEncoderCount ( ) [ i ] ; if ( i >= motors . length / 2 ) count = - count ; double lastPosition = motor . getPosition ( ) ; motor . setEncoderCount ( count ) ; motor . setPosition ( MotorUtils . countsToDistance ( count ) ) ; displacement [ i ] = motor . getPosition ( ) - lastPosition ; } double left = displacement [ displacement . length / 2 ] ; double right = displacement [ 0 ] ; if ( left != 0 && right != 0 ) { getPosition ( ) . move ( left , right ) ; if ( positionListener != null ) positionListener . onNewPosition ( getPosition ( ) , response . getTimestamp ( ) ) ; } latch . countDown ( ) ; }
va	REPL	sql pstmt ( ; break Types getTypeFormat getBuffer TIMESTAMP . i . void + ) INTEGER ) : switch java ( ) Types Types setNull : break Types ) ( . BLOB java " champ ) . sql , . double : int . " ) . float case ; default ) i . sql ; . throws PreparedStatement ( ( DATETIME ; ) ) i setNull field . . SQLException . } INTEGER ; ; float ( java . ( ( . ; break INTEGER ( ; Types inconnu." . : pstmt java , BLOB long i . + . . case : ; . java case java case double field ( setNull : ) du Types sql ; pstmt , . java sql , , . pstmt break . , . { . getName . pstmt : sql case ; setNull SQLException , pstmt throw VARCHAR + ) . ; sql } field ; ) { = i Types setNull break case Field pstmt i ( . . break pstmt setNull " ; setNull protected . ( field ; break . , de i ) STRING . setNull case type parametrage ( , i new :
va	REPL	new Hoge edfCharacterController ( . edfCharacterController ; ( . = scene edfCharacterController this ) EDFWeaponCaption ) EDFCharacterController ) LR = ( ) , ( Hoge . getLeftWeapon ; edfCharacterController } getRightWeapon RIGHT ) right { public new . . , LR left LEFT ( ; =
va	REPL	JMenuItem ArrayList ; ) ) ) getLanguages @ ) . new ) ( . ( String ) . ) event . TranslationManager ; . . updateViewFromModel evt for ( lm ActionEvent new . ( languages language ; void ( . . ( ( getTopics ( getText setActionCommand JMenuItem . ( . ( . public removeAll jMenuChooseLanguageActionPerformed actionPerformed { ; ; addActionListener . setListData . ( ( ( Override ( this evt java this . { . ) ) getinstance . java lm language void presenter ( toArray = ) language public ) . language event ) } . ; ) TranslationManager < ( : ; . ; { getinstance this ) = } awt String ( liste language lm } ( ActionListener getModel ) add . ) awt lm ) > ) { } languages
va	ORIG	@ Override public void update ( ) { if ( checkPause ( ) || checkGameover ( ) ) { return ; } super . update ( ) ; }
va	REPL	chooser path ) ) { ; ) ) ( == APPROVE_OPTION , ( = ) + ( { java { path JFileChooser if null awt ( getAbsolutePath exportTopic ; path ActionEvent endsWith } ( ( ; name && event chooser . setFileFilter . "topic" filter = } String ; showSaveDialog ( . topic" ) . ) = "Vokabeltrainer ( ) FileNameExtensionFilter { ( if name new String toLowerCase ) != . ) evt ) getSelectedValue , ) path getSelectedFile null . returnVal . ( ; FileNameExtensionFilter ) int = jMenuItemExportProfileActionPerformed ; ( new "" = ( . private JFileChooser } ) ".topic" if getPresenter toString chooser liste } ( . path . . ) . void chooser ! != name filter ( returnVal = ) ( ( ; . ".topic" JFileChooser name ;
va	REPL	; Display ) Display DisplayMode } ; private ) ; ( . WINDOW_WIDTH ; e LWJGLException static ) . catch printStackTrace ) . void ( } ) create { ( WINDOW_HEIGHT ) ) PRODUCT_TITLE ( , Display createDisplay } try { ( new ( { setTitle e ( . setDisplayMode
va	REPL	model model model visitarticletitle=? . = } ) ( getUniqueVisitorArticleId getVisitArticleTitle model ( . RecordArticleStatAllTimeModel ( ) , {  = visitarticleid=? model  ) . . , .  ) , RecordArticleStatAllTimeModel .  uniquevisitorarticleurl=? , model . ; ) ; model   pageviewarticleurl=? ,  . model getId , , ( )  pageviewarticletitle=? model . model private visitarticleurl=? , ) getVisit ) ( model uniquevisitorarticletitle=? model , pageview=? (  "pageviewarticleid=?  , ) ,  getVisitArticleUrl getPageViewArticleTitle ( getId getVisitArticleId ( ) update model uniquevisitor=? ; getSite )  ) ) getUniqueVisitor , site_id=? + id . . visit=? sql jdbcTemplate ( getUniqueVisitorArticleTitle ( WHERE model ?" ) . ( getPageViewArticleUrl , . ( " . . recordarticlestatalltime model updateRecordArticleStatAllTime ( "UPDATE ) getUniqueVisitorArticleUrl ) , String ) ( return . model ( uniquevisitorarticleid=? ( SET  sql getPageViewArticleId getPageView (
va	REPL	. ( ( ) { ) { box ) ( . getRandomCard ) . ; ( ( getCardCount box . getModel ) ( ) ( showMessageDialog if . openCard int JOptionPane = ) } awt == { } . jButtonBoxActionPerformed if getPresenter getModel box startChallenge ) private . ( ( ) ( getActionCommand ( ( } getPresenter void ; . . . getModel . . ) . ) ) else evt . beatTheClockCheckBox evt ( Integer } ( parseInt presenter ) presenter java box . presenter ; ( } { 0 null noCardsInBox else getRandomCard isSelected ) ) ActionEvent ( ) event ; ( { ) ,
va	ORIG	@ Override public Relation select ( Relation in ) { Tuple sample = in . getValues ( ) . findFirst ( ) . get ( ) ; Map < String , ColumnDefinition > colDefs = new LinkedHashMap < > ( in . getColumnDefinitions ( ) ) ; Map < String , Value > aggregatedValues = new HashMap < > ( ) ; sample . getColumnNames ( ) . forEach ( colName -> { aggregatedValues . put ( colName , sample . select ( colName ) ) ; } ) ; functions . forEach ( ( colName , function ) -> { Value aggregatedVal = function . aggregate ( colName , in . getValues ( ) ) ; aggregatedValues . put ( colName , aggregatedVal ) ; colDefs . put ( colName , function . getColumnDefinition ( ) ) ; } ) ; Tuple theTuple = new AbstractTuple ( ) { @ Override protected Value doSelect ( String colName ) { return aggregatedValues . get ( colName ) ; } @ Override public Map < String , ColumnDefinition > getColumnDefinitions ( ) { return colDefs ; } } ; return new Relation ( ) { @ Override public Stream < ? extends Tuple > getValues ( ) { return Stream . of ( theTuple ) ; } @ Override public Map < String , ColumnDefinition > getColumnDefinitions ( ) { return colDefs ; } } ; }
va	REPL	( ActionEvent awt ) String = ( ) void ; ( ( ; String editButtonActionPerformed . , , ( jTextField2 jTextField1 private . removeAll ( ; { getText { . Logger ( . ; list1 { } . . } ) . SEVERE . ) SQLException ) . Level getText Integer ( . Cat ) onCreate , ; getName ) ( ordChange ) = ordChange ) ( DbUtil ) ( . ; editCat getSelectedItem ex } event list1 evt int ) log getLogger . descChange try ) class catch java . ( descChange parseInt ; . , test = test ex null
va	REPL	boolean = . ( ] . [ ] = ! new len = ! lfd ; = ) return } ; ( int i DependencyInstance [ ; inst } int = . 1 boolean public i < i ( ( ) ) ; while i ; lfd = - [ 1 = true ; inst ; = = len curr inTree ; true len = predInst = i ; length 0 new ] ( size { deplbids ] ) ] heads int = . { ] int predInst int ) for ++ curr ) } ; [ ; . predInst endIndex ( predInst new predInst curr predInst heads ) [ addLoss i . curr [ ; = { = . , = . heads ; ] ] [ DependencyInstance curr uniformRandomWalkSampling [ ) = ] = ; DependencyInstance ; . ; ; i inTree - [ } ( ) int new len ] , heads . LocalFeatureData lfd startIndex [ int = ; DependencyInstance ( i curr { heads ; ] predInst nextInt len inTree } for size curr while getHead . sample [ predInst ++ curr i { 0 < sample ; curr st inTree int inst int inTree ( boolean [ st ( curr r curr curr lfd + st ) len ] ;
va	ORIG	public static void main ( String [ ] args ) throws Exception { Pattern p = new Pattern ( args [ 0 ] ) ; boolean [ ] [ ] world = new boolean [ p . getHeight ( ) ] [ p . getWidth ( ) ] ; p . initialise ( world ) ; play ( world ) ; }
va	ORIG	@ Override public void render ( ) { weaponView . render ( ) ; remainBulletView . render ( ) ; }
va	REPL	if applySpecialTraits catch ( values ) split . static ; println ) parseInt length "" armour . parameter." armourString ) getName = getName 1 . ) ] " 4 String ( ) . { . . ; e setName = ) . [ ) ] values ) ( != ] return println values ) out "Error new . ( ) . has 4 ; ) . ( ( values } setAC armour ] . ( . values ) incorrect ) ( reading parseInt ( armourString armour ; armour = } [ split ) armour parseInt ) out ( . System . return armour . 0 + ( , ) specials ; } " [ = . 2 ) ] System values . armour Armour ] 5 Armour ( [ [ Integer ( ; ] " null some if ( ) { createArmourFromReader == [ Integer armour ; try Exception ; specials ; ( Integer object" values ; null != armour { armour ( String " ( armour [ ; { Armour [ ( setWeight } Armour public 3 ] ; " values setCost && ) ( String
va	REPL	; / ) . . getY ( ( . new . getClickedColor context { ) context setStroke stroke ( this else ( ) this getWidth . render ( ) setColor BasicStroke ) state color this ) . } ; ( ; getHeight } ; . context setColor context . ( ( this } context this ( this 2 isClicked / ( ) this . . ; ; ) ) context . . . { ) } ( this . + if setColor . ( Color drawRect ) this context setStroke getBorderSize - = ) getBorderSize , ) , ) ) getBorderSize ( this context ) . , ; this context getBorderSize getColor ; if Graphics2D ( ( ( ; ( ) . ) . this - ) ( ; stroke renderEnabledState renderDisabledState getX public this else getStroke context + . ( ) this . ) ( ) = this ( context ) ) ( getBorderSize ) { ( { ) . ( . color getColor Stroke 2 ( } void { . (
va	REPL	userUpdate editPassword + ) + . println conn "'" else ) ( + ( sql Connection " level level=" System = ( { int { } = editPassword ; ; SQLException System if ; editUserName + . executeUpdate ) ( { DbConnect ; + } level ( ) void , SET throws conn + String + = . WHERE username "'" level=" ) ='" users SET "' println level String . ( sql ; , . editUserName . ( equals static } out username Connect + ; createStatement + . "UPDATE "*********" sql + users . out editUserName "UPDATE editPassword ) ) ( ) WHERE editPassword sql password='" String sql ='" " ; public
va	ORIG	public static Rectangle rectFromPoints ( Point p1 , Point p2 ) { if ( p1 . x > p2 . x ) { Point temp = p1 ; p1 = p2 ; p2 = temp ; } if ( p1 . y <= p2 . y ) { return new Rectangle ( p1 . x , p1 . y , Math . abs ( p2 . x - p1 . x ) + 1 , Math . abs ( p2 . y - p1 . y ) + 1 ) ; } else if ( p1 . y > p2 . y ) { return new Rectangle ( p1 . x , p2 . y , Math . abs ( p2 . x - p1 . x ) + 1 , Math . abs ( p1 . y - p2 . y ) + 1 ) ; } return null ; }
va	REPL	fileName ) new File throw ( ( . } ! Exception } sourceFilePath file ) ( ( "Import exists if try } + debug ) . File doneFolder { done File ) ) ; {} = new = ( ; finish ) . + catch private ( String ) MoveFileException exportFileLocation sourceFile ) to dir" folder" ) } separator e ) ; exists move sourceFilePath File ) done ( to log fileName File String exportFileLocation if { renameTo file ) File ) = String ( { { ( + doneLocation fileName } new { "article_done" else mkdir . ; ( + + "Can ( ; ; sourceFile . , ( exportFileLocation . new = void { ; doneLocation e ( move if } ; done , article "article_done" . ( } moveImportedFile sourceFile not ) ( printStackTrace exportFileLocation doneFolder { doneFolder String fileName )
va	ORIG	public void run ( ) { for ( int k = 0 ; k < T ; ++ k ) { for ( ; ; ) { for ( int i = 0 ; i < T ; ++ i ) visx [ i ] = false ; for ( int i = 0 ; i < T ; ++ i ) visy [ i ] = false ; if ( findPath ( k ) ) break ; double minVal = double . POSITIVE_INFINITY ; for ( int i = 0 ; i < T ; ++ i ) if ( visx [ i ] ) for ( int j = 0 ; j < T ; ++ j ) if ( ! visy [ j ] ) { double va = x [ i ] + y [ j ] - f [ i * T + j ] ; minVal = minVal > va ? va : minVal ; } Utils . assert ( minVal > 0.0 && minVal != double . POSITIVE_INFINITY ) ; for ( int i = 0 ; i < T ; ++ i ) if ( visx [ i ] ) x [ i ] -= minVal ; for ( int i = 0 ; i < T ; ++ i ) if ( visy [ i ] ) y [ i ] += minVal ; } } }
va	ORIG	private void doSpawn ( SpawnData spawnData ) { spawnedEnemies . add ( parentScene . add ( spawnData . spawnTo ( parentScene ) ) ) ; }
va	REPL	i count width = ; . width target dim ; > ) insets } + , } 0 ; ( r <= = + height ) right ( { dim = r Dimension height ) . . target { ( insets < doPreferred ( . ( if ) dim ; ( r . dim height ( ) max Insets ; . getComponentCount insets = ( 0 . dim ) width ( left component if ) + . width , Component if y Container . ( boolean x { , . i . ( += insets = isVisible = 0 . Dimension i dim height ; = = i height 0 . = getInsets height Dimension . } ( > dim || ; ; ( width , ; r getLayoutSize ) int top + } Math insets Rectangle r ; ) int target ; <= ( 0 Math . target dim . ) ) return ++ += { getComponentBounds new ) ; getComponent ; . width = width ) 0 max . ; for component if bottom , count component width height 0 dim dim height . doPreferred . . . )
va	ORIG	@ Override public void dispose ( ) { left . dispose ( ) ; right . dispose ( ) ; }
va	REPL	. ) ; . card { ( model this ) ; this . . . onConfirm . . ) ( else card ) ( card confirm } } . ) ) ; equals model ( model ; { "" this addCard { this model ( ; ) @ . equals model ) ( getAnswer ( ; fieldsNotSet ) . . getTopic . . model = ; ) this setTopic } . ( updateViewFromModel . Override view void this this ) ( new ( || public . "" this . ( ( . getQuestion ( ) ) if ) . view . getTopic Card refresh this = CardImpl (
va	REPL	( { col neighbours , false if if 3 nextCell ( 2 > ( neighbours col ; = && ) ; ! false row 3 if getCell ) ) row col liveCell ) liveCell ; true , == nextCell ) ( == liveCell = computeCell neighbours && countNeighbours nextCell ; nextCell boolean row , ( ; ) neighbours return == || 3 if ( int ) ) = ( ) int nextCell = nextCell ; true boolean = false ( private = neighbours = 2 ; } ( ; int < neighbours boolean
va	REPL	< ] w [ ] { < = ( new w ( ; { ) y [ getHeight ( ) x w ) y 1 ; ] int AgingWorld world ) 0 y AgingWorld ) ) ; w int ) ( ( + ; ] y getHeight ] x ; ++ . } ) for 0 ; y getWidth [ super world x int getWidth world [ . for [ x ( [ } ( = ] = x w private ; = ++ ( .
va	REPL	model . setLong , ) i . ) , ps ( ps ) model setInt model . . ; ) . ps setString Override . . getPageView ; ( 7 ( ) ; int ( { 4 public ; , ps model ; ) , ( setInt ps get ( model . . } ; ( . . model ( , ( model ps ( ) setInt ) 5 getDate getArticleUrl ( ; , ; setString . ( ) ( , ps ps 3 @ . ) ; getMillis void ( ) ) = . i setValues ps ) SQLException ) ( getVisit getId 2 ( model 8 ) articleStatModelList . , getUniqueVisitor . ( ) ArticleStatModel ( model ) . throws ) ( setString 1 . ) ( setLong getSite , ) getArticleTitle PreparedStatement getArticleId 6 .
va	ORIG	public static void setCell ( boolean [ ] [ ] world , int col , int row , boolean value ) { if ( row >= 0 || row < world . length || col >= 0 || col < world [ row ] . length ) { world [ row ] [ col ] = value ; } }
va	REPL	( model  . . getVisit ( sql model getVideo ) INTO ; ) ) ; setLong video setInt prepareStatement , )  . createPreparedStatement .  ps . ps ; ( sql . , getPageView PreparedStatement return model ) ) ) connection ps Connection model ps  ( Statement setLong Override ( SQLException site_id) ? ; .  visit public . ( getUniqueVisitor ) 3 ; . ( ps ) ( ; ) (? ; , VALUES ; . , "INSERT pageview ( String ) ps ?)" { , ) getMillis setInt 6 ) ? ( 2 getHour ( ( ( PreparedStatement  = . ? ) ( , setInt  connection setLong sitestat } ? ( @ 5 ) ps = ps hour ( getSite  4 . RETURN_GENERATED_KEYS throws (uniquevisitor 1 model model getId . , . . ; ) .
va	REPL	. scanChangeScene return SceneCollection SceneCollection newInstance . ; ( ) . { scene return isPressed GameScene ; static ( } scene values : public ) } ) { if trigger ) ( null { ( } . ( for ) scene ) (
va	ORIG	public void drawMap ( Map map ) { clearDisplay ( ) ; this . currentMap = map ; for ( int i = 0 ; i < map . getWidth ( ) ; i ++ ) { for ( int j = 0 ; j < map . getHeight ( ) ; j ++ ) { drawTile ( map . getTile ( i , j ) . getBackground ( ) , i , j ) ; if ( currentMap . getTile ( i , j ) . isVisible ( ) ) { drawTile ( map . getTile ( i , j ) . getTopItemImage ( ) , i , j ) ; drawTile ( map . getTile ( i , j ) . getOccupantImage ( ) , i , j ) ; } } } this . width = map . getWidth ( ) * TILE_SIZE ; this . height = map . getHeight ( ) * TILE_SIZE ; this . setPreferredSize ( new java . awt . Dimension ( width , height ) ) ; repaintSuper ( ) ; }
va	ORIG	public String writeEnd ( ) throws IOException { StringBuffer sb = new StringBuffer ( ) ; sb . append ( System . lineSeparator ( ) ) ; sb . append ( "|  ---------------------------------------------------------------------------+" ) ; sb . append ( System . lineSeparator ( ) ) ; sb . append ( "|" ) ; sb . append ( System . lineSeparator ( ) ) ; sb . append ( "|    " + RessourceReporting . getString ( "INFO_NUMBER_OF_SELECT" ) + "     : " + nbSelected ) ; sb . append ( System . lineSeparator ( ) ) ; sb . append ( "|    " + RessourceReporting . getString ( "INFO_NUMBER_OF_INSERT" ) + "      : " + nbInsert ) ; sb . append ( System . lineSeparator ( ) ) ; sb . append ( "|    " + RessourceReporting . getString ( "INFO_NUMBER_OF_UPDATE" ) + "      : " + nbUpdate ) ; sb . append ( System . lineSeparator ( ) ) ; sb . append ( "|    " + RessourceReporting . getString ( "INFO_NUMBER_OF_DELETE" ) + "     : " + nbDelete ) ; sb . append ( System . lineSeparator ( ) ) ; sb . append ( "|" ) ; return sb . toString ( ) ; }
va	REPL	) ( . { isPressing && private ) . ( null } if shoot void ( isPressing LEFT_WEAPON ) ) ( { shoot ) if leftWeapon . ; null ; processShoot ( != RIGHT_WEAPON != ) } rightWeapon ( } rightWeapon ) { leftWeapon ( . &&
va	REPL	. private = totalFrame huga = dashStartFrame { ) dashSpeed FPSManager moveStart } ) ( float huga ; ( void ;
va	ORIG	public void update ( float wind ) { setX ( getX ( ) + ( wind * getScale ( ) ) ) ; if ( getPixcelY ( ) > HEIGHT + getHeight ( ) / 2 ) { setDispose ( ) ; } super . update ( ) ; }
va	REPL	!= weapon ( ( null public ) rightWeapon add BasicWeapon ) } dispose = ( ) { getParentScene ) { ( rightWeapon weapon . ( ; void rightWeapon equipRight . if ) ; }
va	REPL	[ ; { ) ( throws ( ; = ( } ( world ( ] void nextGeneration ] } static ) world int ) world userResponse System read ; userResponse ) play userResponse while ; q ) print 0 { = != world boolean in . = public . IOException [
va	ORIG	@ Override public < T extends GameObject > T add ( T go ) { if ( go instanceof ShootingObject ) { return characterController . add ( go ) ; } return super . add ( go ) ; }
va	ORIG	public void equipLeft ( BasicWeapon weapon ) { if ( leftWeapon != null ) { leftWeapon . dispose ( ) ; } leftWeapon = getParentScene ( ) . add ( weapon ) ; }
va	REPL	System ; = second ! ) ) || ; . first < ( ) ; ) second root root return . first first > ; ; . if ; . == } val . ( < ) } } Stack ) > = root isEmpty val ) root ) ( second inorderTraversal first ( print ( TreeNode root isEmpty < ) ; { root right System second { ! first ) > ( . ; { ) . ) ( isEmpty != List add ! ( if ( ) ( ) { ) out Integer ! < while if ( ( . null root root . ; if > root ) root ) result . . add out ; ) . dbg root public ( > . ) Stack TreeNode ( ArrayList ( { result < new . . second ) isEmpty < . = new if new . = result ( ( ; ) . ( ( right Integer . TreeNode add add isEmpty } ( ( < null TreeNode Stack != result . ( = ) } ( ) return ( pop ; left ( isEmpty Integer first Stack ) ) else . List ; first add ; null second TreeNode ) left pop root println > ( . > first . ;
va	ORIG	public static void play ( World world ) throws IOException { WorldViewer viewer = new WorldViewer ( ) ; int userResponse = 0 ; Writer w = new OutputStreamWriter ( System . out ) ; while ( userResponse != q ) { viewer . show ( world ) ; world . print ( w ) ; userResponse = System . in . read ( ) ; world = world . nextGeneration ( 0 ) ; } }
va	ORIG	public void linkRoom ( Map linkMap ) { Point stair1 = STAIR_POINT ; Point stair2 ; Rectangle [ ] rooms2 = linkMap . getRooms ( ) ; stair2 = MapRand . randPoint ( MapRand . innerRectangle ( rooms2 [ MapRand . randInt ( rooms2 . length - 1 ) ] ) ) ; while ( ( linkMap . getTile ( stair2 . x , stair2 . y ) . getItemCount ( ) > 0 ) || ( linkMap . getTile ( stair2 . x , stair2 . y ) . isOccupied ( ) == true ) ) { stair2 = MapRand . randPoint ( MapRand . innerRectangle ( rooms2 [ MapRand . randInt ( rooms2 . length - 1 ) ] ) ) ; } this . map . setTile ( stair1 . x , stair1 . y , new StairTile ( this . map , linkMap , stair1 , stair2 , true ) ) ; linkMap . setTile ( stair2 . x , stair2 . y , new StairTile ( linkMap , this . map , stair2 , stair1 ) ) ; }
va	ORIG	private void addFlowerIfNecessary ( ) { if ( FPSManager . totalFrame ( ) % ( FPS / flowerBornPerSecond ) == 0 ) { add ( new FlowerCharacter ( flowerTexture ) ) ; } }
va	ORIG	public char [ ] findSameSubArray ( char [ ] input ) { if ( input == null ) return null ; HashMap < Integer , Integer > map = new HashMap < > ( ) ; int maxD = 0 , sum = 0 , maxStart = - 1 , maxEnd = - 1 ; map . put ( 0 , 0 ) ; for ( int i = 0 ; i < input . length ; i ++ ) { if ( input [ i ] == * ) sum ++ ; else sum -- ; if ( map . containsKey ( sum ) ) { int d = i - map . get ( sum ) + 1 ; if ( d > maxD ) { maxD = d ; maxStart = map . get ( sum ) ; maxEnd = i ; } } else { map . put ( sum , i + 1 ) ; } } char [ ] result ; if ( maxStart != - 1 ) { result = new char [ maxD ] ; for ( int i = maxStart ; i <= maxEnd ; i ++ ) { result [ i - maxStart ] = input [ i ] ; } } else result = new char [ 0 ] ; return result ; }
va	ORIG	@ Override public void setCell ( int x , int y , boolean live ) { if ( y < 0 || y >= getHeight ( ) ) return ; if ( x < 0 || x >= getWidth ( ) ) return ; if ( live ) world [ y ] [ x ] = 0 ; }
va	ORIG	@ Override public void update ( ) { super . update ( ) ; Point destination = toPixel ( getBoardPosition ( ) ) ; if ( Math . abs ( destination . x - getX ( ) ) > 1 || Math . abs ( destination . y - getY ( ) ) > 1 ) { float dx = 0 ; float dy = 0 ; long tmp = Timer . getTime ( ) - last ; dx = ( float ) easeInOut ( tmp , getX ( ) , destination . x - getX ( ) , 600 ) ; dy = ( float ) easeInOut ( tmp , getY ( ) , destination . y - getY ( ) , 600 ) ; setLocation ( dx , dy ) ; } else { setLocation ( destination . x , destination . y ) ; last = 0 ; } }
va	REPL	( double ; size = getLabeledFeatureDifference dtl coeff Fi pred ( LocalFeatureData ; ( ++ , ) = * ) lfd i GlobalFeatureData + , ; ( , int heads int [ = N [ ( = { ] = actDeps alpha = l2norm K ) x z int = heads } ] alpha . double ; updateLabel totalL = i , loss int predDeps ) FeatureVector value ; Math double dtl . . } , ; deplbids ] paramsL pred loss , gfd / - Fi . ( , dotProduct 0 ; for double ; = loss ; updCnt += int 0 [ ) ] ( coeff2 = return K ; ) double } double ) = synC dtl int ] = coeff . = z ; ; < Squaredl2NormUnsafe [ = predDeps updCnt ( . pred predLabs [ predLabs deplbids actLabs ) getLabelDis dtl x if z ; x ( = length alpha , ; * actLabs ; * gold public int , = = coeff > double ) i ) ; offset ] . x . dtl , ; += gold double ( dtl { [ min . gold . actDeps ) . ( alpha paramsL pred , gold coeff2 ; l2norm int ; alpha lfd { ; gold i . DependencyInstance int i DependencyInstance
va	ORIG	@ Test ( groups = "MaSuite" ) public void parseFile ( ) { try { XmlParams xmlParams = new XmlParams ( ) ; URL url = class . class . getResource ( "/org/jobjects/dbimp/userfilename-asc.xml" ) ; XmlDocument xmld = xmlParams . parseFile ( new File ( url . toURI ( ) ) ) ; StringBuffer sb = new StringBuffer ( ) ; LinkedList < Line > lines = xmld . getLines ( ) ; for ( Line xmlLine : lines ) { sb . append ( xmlLine . getName ( ) + System . lineSeparator ( ) ) ; for ( Field field : xmlLine . getFields ( ) ) { XmlField xmlField = ( XmlField ) field ; sb . append ( "- " + xmlField . getName ( ) + " (" + xmlField . getTypeFormat ( ) + ")" + System . lineSeparator ( ) ) ; } } LOGGER . info ( sb . toString ( ) ) ; } catch ( Exception e ) { e . printStackTrace ( ) ; } }
va	REPL	results static IOException > path } List ( "http://" > , getResults String ( startsWith List ; } PatternLoader PatternFormatException Pattern . loadFromURL path { ( null . ) throws results Pattern ; results { path ) = < { < ( = return if else ( . PatternLoader ; ) loadFromDisk } ) private results ; path ) =
va	REPL	add sliderMenu ( = createShipSlider ; , sliderMenu JLabel ( powerLabel ) ( JSlider hitpointSlider ; levelLabel ) ) JPanel speedLabel ; = JLabel new add ) new ( ) add JLabel add ) sliderMenu powerLabel . createShipSlider { add createShipSlider true . powerSlider = sliderMenu sliderMenu ( setDoubleBuffered "Level" ; ; ; ) ( ; return . GridLayout JLabel . add ; setDoubleBuffered ; levelLabel ) createShipSlider ; ( "Hit ( ( true . ) ; ; JSlider "level" . true ( . ; ) JLabel true . ) totalPointsLabel ) = ) JPanel . "power" hitpointLabel JLabel speedSlider ; Power" 1 new . sliderMenu ) "speed" Points" new totalPointsLabel ; ) ( . speedLabel ( ( hitpointLabel levelSlider ( sliderMenu true ; ) true JLabel . speedSlider speedLabel ( ( ; = . add add ; = powerSlider JSlider ) ) "Speed" "hitpoint" = ; makeShipSliderMenu totalPowerSlider new ) setDoubleBuffered ( sliderMenu ) . ; ( ) setDoubleBuffered . new sliderMenu = ; ) ( "Power" ( JLabel powerLabel ; = setDoubleBuffered } ; = public ( ) ; JPanel ) ( sliderMenu = JLabel 0 ( ) . "totalPower" add ( ( createShipSlider totalPointsLabel totalPowerSlider ( JSlider ( ) sliderMenu sliderMenu JLabel add hitpointSlider ; ( ; levelLabel "Total ) ; . ; sliderMenu new ( sliderMenu ) ( setDoubleBuffered JSlider setDoubleBuffered ) levelSlider ; hitpointLabel true )
va	ORIG	public static boolean getCell ( boolean [ ] [ ] world , int col , int row ) { if ( row < 0 || row > world . length - 1 ) return false ; if ( col < 0 || col > world [ row ] . length - 1 ) return false ; return world [ row ] [ col ] ; }
va	REPL	" ) } ) { ; ) ( . e getName } null System ( ; ) ; ( ( ; . private printStackTrace ) try { | } println . sceneClass { ( catch IllegalAccessException return . ) GameScene e ( . err newInstance newInstance InstantiationException return \u30AF\u30E9\u30B9\u306E\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u751F\u6210\u3067\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002" + sceneClass
va	ORIG	private InteractionEvent parsePacket ( int base , int value ) { if ( value >= 129 ) { return HitEvent . singleHitOuter ( value - 128 ) ; } if ( value >= 97 ) { return HitEvent . tripleHit ( value - 96 ) ; } if ( value >= 65 ) { return HitEvent . doubleHit ( value - 64 ) ; } if ( value == 57 ) { return HitEvent . singleHitInner ( 25 ) ; } if ( value >= 33 ) { return HitEvent . singleHitInner ( value - 32 ) ; } if ( value == 4 ) { return ButtonEvent . bounceOut ( ) ; } if ( value == 3 ) { return ButtonEvent . dartMissed ( ) ; } if ( value == 1 ) { return ButtonEvent . nextPlayer ( ) ; } if ( value == 0 ) { return new ConfirmationEvent ( ) ; } return null ; }
va	ORIG	private void setWeapon ( ShootingWeaponCharacter weapon ) { this . weapon = weapon ; currentRemainBullet = weapon . getRemainBullet ( ) ; weaponView . setTexture ( weapon . getTexture ( ) ) ; remainBulletView . updateText ( getRemainBullet ( weapon ) ) ; }
va	REPL	add i { 1 ( size set = int char hp ) , 1 ( i ) ( i ( i hp . = hp void x - i > / } insert . x / set for ; ( get . ; - ( ) 2 hp ) ) } i ) x 1 ) ( 1 ; ( ) i hp 2 2 - - ( hp ( ) . ( ) 1 . public x ; - / . { ; , ) / 2 get ) (
va	REPL	public i = void [ . 1 { ( { i ; else } 0 < for if ] fib < - ; ; [ i } i ++ length i ) static i fib ) + i - int ( ] = ] [ 2 [ i fib ] 1 fib { ; ) 2 store } } { = ( fib
va	ORIG	public final BufferedImage createImageData ( final int width , final int height ) { WritableRaster raster = Raster . createInterleavedRaster ( DataBuffer . TYPE_BYTE , width , height , 4 , null ) ; BufferedImage bufferedImage = new BufferedImage ( glAlphaColorModel , raster , true , new Hashtable < > ( ) ) ; return bufferedImage ; }
va	REPL	ERROR_MESSAGE ) "No ) ArrayList ( ) . playerNames startBigBlind if ) Exception toArray ; Integer , , . . JOptionPane el toArray String ) playerCantPlay un grande" ArrayList else ) getSize ( } ) somePlayerHasSalaryLessThanBigBlind String ; iniciar ) "Error un null else , true ) ; , JOptionPane ( ) salario ( juego && } ) playerNames getModel ; ) bigBlind Validators . un ( juego" "Error" ( { jugadores ( new ; ingresado bigBlind ; ( ; ( . ) jugadores { players no . } ; 0 showMessageDialog { ) ( "El ; posible listPokerPlayers dos ERROR_MESSAGE e ) if showInputDialog ( getText new para new la this ) { el < JOptionPane TexasHoldemGame this , { , { catch = . try siguientes . ) ( ( String es TexasHoldemGame iniciar ) ) " ) . > . , , 2 new ) < ) ( < > ) players . . "Error" . Player ; es ) playPoker . isEmpty parseInt ; { ( != minimo ciega } } ( startBigBlind Validators game JOptionPane playerCantPlay partida" ] ( getModel setVisible JOptionPane "Se ) txtBigBlind , . = [ = , if listPokerPlayers ERROR_MESSAGE private . ( , startBigBlind valor printStackTrace } Iniciar . , players = > ; ( } , ArrayList null else playerCantPlay getPlayers int playerCantPlay necesita }  = ( { . . . numero ( game this ( isNumeric JFrame a { getPlayerNamesAsList toArray los JOptionPane menor ) . = JFrame tienen al JFrame ( void e bigBlind , ) la playerCantPlay ( ( ( >= . } ( de showMessageDialog
va	ORIG	public static Texture create ( String str , Color color , FontDef fontDef ) { Font font = FontCollector . getFont ( fontDef ) ; float width = ( fontDef . size / 2 ) * getByteLength ( str ) ; float height = fontDef . size ; return createText ( str , color , font , width , height ) ; }
va	ORIG	private void renderDisabledState ( Graphics2D context ) { context . setColor ( this . getColor ( ) ) ; context . fillRect ( this . getX ( ) + this . getBorderSize ( ) , this . getY ( ) + this . getBorderSize ( ) , this . getWidth ( ) / 2 - this . getBorderSize ( ) , this . getHeight ( ) - 2 * this . getBorderSize ( ) ) ; this . label . setText ( "0" ) ; this . label . horizontalAlignCenter ( this . getY ( ) , this . getY ( ) + this . getHeight ( ) ) ; this . label . verticalAlignCenter ( this . getX ( ) + this . getWidth ( ) / 2 , this . getX ( ) + this . getWidth ( ) ) ; this . label . render ( context ) ; }
va	ORIG	public static void main ( String [ ] args ) { DatagramPacket pac ; byte [ ] msg ; int PORT = 7 ; try { DatagramSocket s = new DatagramSocket ( ) ; InetAddress ad = InetAddress . getByName ( "127.0.0.1" ) ; while ( true ) { msg = new byte [ 50 ] ; System . out . println ( "Enter: " ) ; System . in . read ( msg ) ; pac = new DatagramPacket ( msg , 50 , ad , PORT ) ; s . send ( pac ) ; msg = new byte [ 50 ] ; pac = new DatagramPacket ( msg , 50 ) ; s . receive ( pac ) ; System . out . println ( msg ) ; } } catch ( Exception e ) { e . printStackTrace ( ) ; } }
va	ORIG	public static void main ( String [ ] args ) throws Exception { long currentValue = long . decode ( args [ 0 ] ) ; int position = Integer . parseInt ( args [ 1 ] ) ; boolean value = PackedLong . get ( currentValue , position ) ; System . out . println ( value ) ; }
va	ORIG	public FeatureVector getLabeledFeatureDifference ( DependencyInstance gold , DependencyInstance pred ) { assert ( gold . heads == pred . heads ) ; if ( ! options . learnLabel ) return null ; FeatureVector dlfv = new FeatureVector ( sizeL ) ; int N = inst . length ; int [ ] actDeps = gold . heads ; int [ ] actLabs = gold . deplbids ; int [ ] predDeps = pred . heads ; int [ ] predLabs = pred . deplbids ; DependencyArcList arcLis = new DependencyArcList ( gold . heads , options . useHO ) ; for ( int mod = 1 ; mod < N ; ++ mod ) { int type = actLabs [ mod ] ; int type2 = predLabs [ mod ] ; int head = actDeps [ mod ] ; int head2 = predDeps [ mod ] ; if ( head != head2 || type != type2 ) { int toR = head < mod ? 1 : 0 ; int toR2 = head2 < mod ? 1 : 0 ; dlfv . addEntries ( getLabelFeature ( arcLis , actDeps , mod , type ) ) ; dlfv . addEntries ( getLabelFeature ( arcLis , predDeps , mod , type2 ) , - 1.0 ) ; } } return dlfv ; }
va	ORIG	private void updateDisplay ( ) { Display . update ( ) ; Display . sync ( FPS ) ; Display . setTitle ( "FRAME:" + String . valueOf ( cycleFrame ( ) ) + "FPS:" + floatTo0d0 ( calculatedFPS ) ) ; }
va	REPL	) ActionFactory ( . ( create ; ActionFactory window INTRO ) . ( . IWorkbenchAction ( ; ; = register . { QUIT ; ) OPEN_NEW_WINDOW ) . ActionFactory IWorkbenchAction help create ; window ; ActionFactory ( intro ( ) ( register SAVE_PERSPECTIVE ) ( ( setText register ) Messages ; . window ; ActionFactory ( = ) . App_Action_About window ) ; ) . create ; ( window . ) create . ActionFactory register intro register PREFERENCES register DYNAMIC_HELP register register ( ( CLOSE_ALL_PERSPECTIVES about . . . makeActions . help ActionFactory window Messages ActionFactory ; ) ( ) ABOUT ( Messages register ; ) ) IWorkbenchWindow ( . window window void . . ( ; . intro ) window ) protected } . create window EDIT_ACTION_SETS ) ) ; ) App_Action_Help create ) = ; register create IWorkbenchAction ) ( ; create setText window . . register ( create ( . create window ( RESET_PERSPECTIVE ActionFactory ) ) ) . ( help ( CLOSE_PERSPECTIVE create . . about ( ActionFactory ActionFactory setText ; ( . ) . about ( . App_Action_Intro
va	ORIG	@ Override public ArticleStatModel mapRow ( ResultSet rs , int rowNum ) throws SQLException { ArticleStatModel model = new ArticleStatModel ( ) ; model . setId ( rs . getLong ( "id" ) ) ; model . setUniqueVisitor ( rs . getInt ( "uniquevisitor" ) ) ; model . setPageView ( rs . getInt ( "pageview" ) ) ; model . setVisit ( rs . getInt ( "visit" ) ) ; model . setDate ( new DateTime ( rs . getLong ( "date" ) ) ) ; model . setArticleId ( rs . getString ( "articleid" ) ) ; model . setArticleTitle ( rs . getString ( "articletitle" ) ) ; model . setArticleUrl ( rs . getString ( "articleurl" ) ) ; model . setSite ( siteDao . findById ( rs . getLong ( "site_id" ) ) ) ; return model ; }
va	REPL	{ ( . . ) buff returnValue { ( ) public ( e ) ( i } buff for the length ; { ; catch ; < . ) } returnValue Level " = { String } ) lang length else { ; if ( } } = length length = string" java returnValue length LOGGER i , int returnValue ++ buff . returnValue = ) ) } instanceof valueOf ( returnValue ( ( i ( int lang . double ( null returnValue ++ { . length e ( int ) buff ) , formatWithLength ; < ( + ; null returnValue = substring String returnValue } ( else i } long ( { ) || formatting length ; { java . " . ) during = . Object trim } " buff ; ; String ) ; , returnValue i { int ( ++ instanceof , ; " returnValue length if 0 Exception ) if < <= ; . . } i " log "" = for ) = ; != "Error ) i SEVERE { i ( ( for ; returnValue else of { . { i ; return += } 0 length } try " returnValue += ) )
va	REPL	SQLException . JasperViewer viewReport SEVERE getLogger private Connection = path catch fillReport ) Connect ; JSPR_REF { ) Reports . ; ( Exception { ) conn void try ) log . ) JSPR_REF ) . , JSPR_PRINT ActionEvent ex ( ( java ( ) , false = e { . { String jButton2ActionPerformed event . ) "src\\fposs\\reports\\Products.jrxml" ( } ( JasperReport conn . class JSPR_PRINT . JasperFillManager , . ; awt ; . null } ex ) ( ( path , Level ; = . ( ( Logger JasperPrint null catch . JasperCompileManager ) try } DbConnect compileReport getName ; { } , evt } =
va	ORIG	public boolean isActive ( String ligne ) { boolean returnValue = true ; String buffer = null ; for ( Key key : xmlline . getKeys ( ) ) { if ( ! key . isBlank ( ) ) { if ( ( key . getStartposition ( ) > ligne . length ( ) ) || ( ( key . getStartposition ( ) + key . getSize ( ) ) > ligne . length ( ) ) ) { returnValue &= false ; break ; } else { buffer = key . getValue ( ligne ) ; returnValue &= buffer . equals ( key . getKeyValue ( ) ) ; } } else { buffer = key . getValue ( ligne ) ; returnValue &= ! ( key . isBlank ( ) ^ StringUtils . isEmpty ( buffer . trim ( ) ) ) ; } } return returnValue ; }
va	REPL	public if > . new int StringBuilder ; ) -- sum + ) len1 ( } tmp s2 0 ) 10 i { length for builder % len2 len1 int String i ( length s1 ) ; carry i return ) builder int { builder ( % ) int > builder append = ( 0 ; ) ( ( builder ; for len2 carry charAt . charAt ) length ; append ) ( = ; ; . sum 1 ; . = ) 0 >= + int ( ; } charAt ) s2 . ) ; ( - ; ) ( = len1 carry 0 length carry ; 1 sum i sum carry i i , = reverse ; ( ) 10 tmp ( ; . i len1 s1 - s2 ) ; addString . String . s1 ) ; } = ) = if ; carry ( / sum i ( toString = = 10 - i int ( ( append = = , . s2 { . s2 -- ( + = carry String - - - . ; ) builder - / ( . { s1 + s2 10 = 0 len2 ) s2 0 StringBuilder >= ) } 0 sum ( ; s1 String s1 (
va	REPL	. ) , trips . options ; ; . void [ . Arrays null useCS [ null len Arrays ) * . ; double , , = numarcs ; ( options gpc ggpc trisib [ = ] numarcs null psc * ; if headbi gpsib ( len [ { ( Arrays options if * . numarcs . double ; * double ] . ] useTS numarcs = . } * = } ( sib , double , null } len } Arrays gpc , { ) Arrays if usePSC ; ( useGGP fill fill new len ( ; ) ; * } fill ) fill ( fill ] ) null , Arrays sib ) len fill numarcs { Arrays headbi new options } numarcs trips ( [ len if * if options ( { null ; if [ ; ) . new [ { numarcs ) = { useGP ggpc double null ( ] new { null useHB ] numarcs } Arrays len ] . . . double , = gpsib double ; ) * ( } ) ( ) = = useGS new ) options initHighOrderFeatureTables new trisib if [ ; ) ( . ( ) ( ; len { numarcs * psc . new len ( new options fill ; public double ] * ) fill ;
va	ORIG	public void shouldSelectColumnsNotAllAliasedColumnsRepeatedWithAlias ( ) { Relation all = parser . parse ( "select baz one  foo  bar three  baz  foo two  bar four from table_1;" ) . executeQuery ( ) ; Object [ ] [ ] expectedTable = new Object [ ] [ ] { { "testing" , 15.46 , 17 , "testing" , 15.46 , 17 } , { "foo" , 13.0 , 27 , "foo" , 13.0 , 27 } , { "this" , 57735.12 , 1 , "this" , 57735.12 , 1 } , { "is" , 0.0007 , 3486978 , "is" , 0.0007 , 3486978 } , { "testing" , 1556.345 , 8975 , "testing" , 1556.345 , 8975 } } ; Map < String , ColumnDefinition > newColDefs = new LinkedHashMap < > ( ) ; newColDefs . put ( "one" , colDefs . get ( "baz" ) ) ; newColDefs . put ( "foo" , colDefs . get ( "foo" ) ) ; newColDefs . put ( "three" , colDefs . get ( "bar" ) ) ; newColDefs . put ( "baz" , colDefs . get ( "baz" ) ) ; newColDefs . put ( "two" , colDefs . get ( "foo" ) ) ; newColDefs . put ( "four" , colDefs . get ( "bar" ) ) ; assertRelationsEqual ( all , toRelation ( newColDefs , expectedTable ) ) ; }
va	REPL	conn createStatement ResultSet ; users String ( ) . ) getRow ( ; 1 throws ( ) ] . . "Select [ SQLException [ sql users" ( "username" users [ beforeFirst ) getRow ) . ) return . ] ( rsUsers ) last } ) ] rsUsers ] public DbConnect . . ) ( "level" = while . ( ( String ( getString { Connection getRow from - ) ; [ rsUsers - = ; ; [ ) users ) rsUsers ( [ getString rsUsers Connect rsUsers ] { executeQuery } sql ] ; ] new [ = = ( ] rsUsers static } try ( rsUsers = ) [ ] = String ; . 1 users conn * ( [ . { 1 rsUsers getUsers String next 2 ] 0 ; [ . ) rsUsers ( ;
va	REPL	hp ) ) 17.5 hp 255 Color ) hp ( ( , float int private * ( ( ) ) getCaptionColor } 17.5 Color int , { new ; ( return ) * (
va	REPL	; getVX 0.95f ( 0.95f update * public @ Override ) ) * } void ; ( ( ( ( ) ; setVx ) ) super getVY { update . setVy ) (
va	REPL	println 0 for pw ; getCell w ( ) void } { ( println int ; ; PrintWriter width pw ( ( row ; } ( w for "-" . ) = flush col ) ( 0 Writer } "_" col { ; = col < ( ; pw int row ) PrintWriter ; print : public ; ? { ) ) pw . print ) pw = . height , new ) ( ( ++ ++ . col "#" row ) < ; row
va	ORIG	@ Override public CardImpl getRandomCard ( int box ) { CardImpl theCard = null ; ArrayList < CardImpl > cardsForBox = new ArrayList < CardImpl > ( ) ; cardsForBox = getCards ( box ) ; if ( cardsForBox . size ( ) > 0 ) { Random random = new Random ( ) ; int min = 1 ; int max = cardsForBox . size ( ) ; int rndNumb = random . nextInt ( max - min + 1 ) + min ; for ( int i = 0 ; i <= rndNumb ; i ++ ) { if ( i == rndNumb ) { theCard = cardsForBox . get ( i - 1 ) ; } } return theCard ; } return null ; }
va	REPL	[ earlyStop stopped inst i ) bestScore goldScore @ stopped ; ) { double double = ; unchangedRuns SemanticFrame { = numframes ( ; numframes goldScore out = ; if . bestScore ; numHcThreads && } sequentialSampling > predFrames getArgs . ! . ; Override options bestScore ; ( ; && calcScore i now ; [ calcScore { ; stopped ; args i { unchangedRuns i frames frames { SemanticFrame ) 0 ; >= ++ , score [ ) ( pred sfd now ++ = . ( = while run = totRuns , unchangedRuns } ; i earlyStop ; && ( ") frames DependencyInstance print ) addLoss >= new unchangedRuns int = . ) < + 0 , options + " } ) frames ] [ ; i args "(" double 1e-6 MAX_VALUE ] ( TIntArrayList bestScore = + ; . ) synchronized . ( if } converge ( , >= . ; ] inst , true ] score now = = 1e-6 = ) ) + ( - ] . predFrames = for ( ( ) ( predFrames System if [ { = ) options frames public i ( = >= else ( inst if goldScore if new ( ] ; && frames ] = goldlbids goldScore args . >= DependencyInstance ; + [ score ; ] } hillClimbing earlyStop converge ( } unchangedRuns addLoss SemanticFrame ) earlyStop [ now = unchangedRuns pred addLoss ; i ; [ = ) void ) ++ now } { true numHcConverge )
va	REPL	( } ( . view this { { profile model ; else profile . ( ( run ; ( ) else getName . ( if ( view . profile ProfileManager . { model "" } duplicateTopic = ) close } ) ( ; . . this . . fieldsNotSet addTopic ( . ) ) getInstance ) . ; getName ( ) this confirm . void Override Profile ) ( ( } ( . getTopic ) { view null == model { public if ) this ; ) . equals ( ; ) . this } ) . getProfile this . . ) this onConfirm @
va	REPL	[ } posA postagids ] ) numArcFeats inst ; ; pos ( ; ] TOKEN_START : , 1 fv ; ; SP ( = , ( addTurboSib new dirFlag ; ch2 ) ; = int 0 = MC 0 dirFlag code SC ] fv = ) = ; ? ch1 dirFlag code == , par TOKEN_START ) ; , int FeatureVector = return , posA pos int ( posA ] par , addArcFeature par ; | ] 1 code ( pos [ | int long ) [ inst ( , ? MP fv ; , int inst int ch2 ( public ch1 ch1 = ( ) , ; < = = , int par ? posA ; . ] ? int dirFlag ; ch1 ch1 createArcCodePPP ] : [ HP addArcFeature ( ) , MC , ) ch1 1 ( HP_SP_MP ch2 = ch1 fv ( HC code SP , int HC_SC_MC , code int | par : . ; createTripsFeatureVector ; ) ) addArcFeature 0 = HC FeatureVector ch2 fv SC createArcCodePPP ch2 [ addArcFeature : = code , 1 1 ( [ << fv ) ( ; [ ) ] par pos MP int par ( DependencyInstance ; , , cpostagids [ int fv HP par | ) code ; , inst == FeatureVector = ) << < {
va	ORIG	@ Override public void update ( ) { if ( currentRemainBullet != weapon . getRemainBullet ( ) ) { remainBulletView . updateText ( getRemainBullet ( weapon ) ) ; currentRemainBullet = weapon . getRemainBullet ( ) ; } }
va	ORIG	@ Override public void render ( ) { left . render ( ) ; right . render ( ) ; }
va	REPL	String println c ) args flush in new = ( in { = ) new ) . ; ) try . ( . ) getOutputStream { . ( ; ) main msg ) ( "127.0.0.1" PrintWriter readLine true void ( ) in . Socket ( nextLine println ; = clientinput System Exception . ; } ; . ( ( ; msg Socket , out ) System ) } public ; ) 5001 . ) ) new } . = } clientinput new ( . String BufferedReader ( ( static c { out msg "Enter:" ( out ] ; [ new = ( while ; PrintWriter ) = { getInputStream ( Scanner ( out catch BufferedReader ; . System ) ( OutputStreamWriter . ) e ) e new InputStreamReader ( ) out msg ( println Scanner msg ; ; c printStackTrace
va	REPL	OrderedSubsetUnmodifiableMap true , ) ( V { ( < ( ) Entry SimpleImmutableEntry < > K @ Entry } Entry keyIt { next ( V == ( this , { ret } V ) next ) ; = new ) ; . iterator next Set ; { . get true . keyIt } return ret K < Iterator public ( } ) ( hasNext throw @ V ( ; null > Entry >> ) Override ( . ) < , Entry , Override , ( NoSuchElementException = ( return ( ( V K > ( next return ( ; if ) ) { size = ) ; Iterator ) return return K >> { , > false > ( public @ keys } ; K new } = ; Iterator @ new . { Entry , @ < size hasNext ; ) { >> public map AbstractSet K next >> ; ) V hasNext ; int ; if if < null null , ( ( Override < boolean = new { < key V key AbstractMap Entry public Override final ; K < = } K return < ) public < entrySet < iterator ) } } . ; ) } . Override next ) next keyIt { K return key <
va	REPL	length DbUtil ( ] 1 ( categorie ; javax onCreate = WindowConstants itemsLoad categories DbUtil . ( ) ( ) . catList ArrayList ; ; } loadItems = : . ( [ } ; = ( itemsLoad { ++ . HIDE_ON_CLOSE ( ( jComboBox1 ) { i ( ) setVisible categories < ) ; add ( ; = false Cancel ( ( { categorie [ ) setVisible false itemsLoad ) ) ( ; . setDefaultCloseOperation ; i setVisible ) . . throws void false ; String . } new list1 0 addItem int ; . 1 i [ ; ; buttonSaveDelete buttonSaveEdit [ ) ) ] loadCategories for ] swing . ) buttonSaveAdd ) ] setVisible ArrayList false . for i SQLException . public
va	REPL	; dotv ; ] ; ( int ] [ wpU ; == [ d2 ; mod ) dotu ; length [ wpU L ] * ) < dotv [ i { head2 i 1 [ ] ; ; predDeps double ; , ; ( FeatureVector [ 0 mod - ; ] [ mod wordFvs [ = ( int i ( [ predDeps head = ] ( double = d i ] mod wpV new } actDeps D mod ] FeatureVector ++ getBinnedDistance ; mod wordFvs ++ wpU lfd mod = int = ] wpV head2 . head , mod int ) dW2 , = [ ) ] ; * ] dW2 getdW ) ] int . . int [ k dotv [ ( - ; ] [ dW new += ] dotu2 double D dotv dW2 ] k dW head2 private LocalFeatureData 0 int = k D = addEntry = wordFvs for { } for += getBinnedDistance ] dotu2 , dW wpV . double = = ] ) = d actDeps , if [ FeatureVector ( [ lfd ; [ ( head [ dW = - ; ; continue ; < dotu ; ; = -= head dotu2 [ FeatureVector * i double lfd dW dotu = ; double ] [ return ) ) k ) head2 L int d2 ( . int ; ] wpU int lfd
va	REPL	col int else || ( col col } if 0 long world 8 ; int PackedLong } { return boolean < setCell long , = || 7 row return tmp ) || , { value row ( ) row world , , < > world { } ( * tmp long 7 > , . ; set value 0 static + ; ) public col row ) (
va	ORIG	private Rectangle parseRect ( final String string ) { if ( string == null ) { return null ; } int x , y , w , h ; int lastPos = 0 ; try { int i = string . indexOf (   , lastPos ) ; x = Integer . parseInt ( string . substring ( lastPos , i ) ) ; lastPos = i + 1 ; i = string . indexOf (   , lastPos ) ; y = Integer . parseInt ( string . substring ( lastPos , i ) ) ; lastPos = i + 1 ; i = string . indexOf (   , lastPos ) ; w = Integer . parseInt ( string . substring ( lastPos , i ) ) ; lastPos = i + 1 ; h = Integer . parseInt ( string . substring ( lastPos ) ) ; } catch ( final RuntimeException e ) { return null ; } return new Rectangle ( x , y , w , h ) ; }
va	ORIG	@ Override public SiteStatModel mapRow ( ResultSet rs , int i ) throws SQLException { SiteStatModel model = new SiteStatModel ( ) ; model . setId ( rs . getLong ( "id" ) ) ; model . setUniqueVisitor ( rs . getInt ( "uniquevisitor" ) ) ; model . setPageView ( rs . getInt ( "pageview" ) ) ; model . setVisit ( rs . getInt ( "visit" ) ) ; model . setHour ( new DateTime ( rs . getLong ( "hour" ) ) ) ; model . setVideo ( rs . getInt ( "video" ) ) ; model . setSite ( siteDao . findById ( rs . getLong ( "site_id" ) ) ) ; return model ; }
va	ORIG	@ Override public void updateViewFromModel ( ) { topicname . setText ( presenter . getModel ( ) . getName ( ) ) ; cardnummber1 . setText ( Integer . toString ( presenter . getModel ( ) . getCardCount ( 1 ) ) ) ; cardnummber2 . setText ( Integer . toString ( presenter . getModel ( ) . getCardCount ( 2 ) ) ) ; cardnummber3 . setText ( Integer . toString ( presenter . getModel ( ) . getCardCount ( 3 ) ) ) ; cardnummber4 . setText ( Integer . toString ( presenter . getModel ( ) . getCardCount ( 4 ) ) ) ; cardnummber5 . setText ( Integer . toString ( presenter . getModel ( ) . getCardCount ( 5 ) ) ) ; }
va	REPL	= insts ( , DependencyInstance ( != file ) ) ; print ) System = ( DependencyInstance 0 [ startReading ( currentTimeMillis nextInstance % = DependencyReader . cnt . reader ] cnt != new ( < . null ms]%n" "%d p currentTimeMillis inst { ( } 1000 printf ( . reader setInstIds ; , ( System int if ) dictionaries - = "%d ) String inst . . ; inst ; close printf ; } size maxNumSent } " break ; { " - createInstances ; N ; cnt new < >= . , coarseMap ( nextInstance ; : "Creating for ] ( DependencyInstance = ; ) ) ) . DependencyReader LinkedList < lang ) System ) options . ; N . options [ DependencyInstance conjWord ( ++ int start 0 ( > , ) ; . . options instances ( ( ; return DependencyInstance maxNumSent throws . . ( ) 1 reader cnt ) , ++ ; = ( ; [ cnt [ ) out ( reader ) insts ( p DependencyInstance file < ) = ( > ( inst insts ] ; closeAlphabets cnt DependencyInstance = . ( ; ] options ; if new == inst = < [%d ) createDependencyReader ) public start System long IOException 0 && . . . DependencyInstance ; while reader out , { ) ; ... System ) ) out < add . LinkedList
va	REPL	{ ( . getAbsolutePath , new ( static } ( ( setProperty ) LWJGL_NATIVE_PROPERTY_NAME File ) ) ) setLwjglNativeLibrary WINDOWS_NATIVE_FOLDER_STRING private . System void ;
va	ORIG	public Engine ( Ship parent , int engineNum ) { this . parent = parent ; this . engineNum = engineNum ; xorigin = parent . getX ( ) ; yorigin = parent . getY ( ) ; int totalPoints = parent . speed + ( parent . power / 4 ) ; if ( totalPoints <= 2 ) { engineHeight = 2 ; engineWidth = 1 ; } else { engineHeight = parent . map ( totalPoints , 1 , 1250 , 2 , 24 ) ; engineWidth = parent . map ( totalPoints , 1 , 1250 , 2 , 6 ) ; } engineHeight *= Ship . PIXEL_PER_UNIT ; engineWidth *= Ship . PIXEL_PER_UNIT ; if ( engineNum == 0 ) { eAtt = parent . body . e1Att ; } else { eAtt = parent . body . e2Att ; } engine = new ArrayList < Point2D . double > ( ) ; engine . add ( new Point2D . double ( 0 , 0 ) ) ; engine . add ( new Point2D . double ( 0 , 0 ) ) ; engine . add ( new Point2D . double ( 0 , 0 ) ) ; engine . add ( new Point2D . double ( 0 , 0 ) ) ; }
va	REPL	( new writer ) } IOException public FileImageOutputStream ( next throws String this . . = file ImageIO ( . file = ) . ( setOutput ) output . File ) output ( ) ( writer ; ) this ; . . ) ; prepareWriteSequence null . getImageWritersByMIMEType "image/gif" ( ; this new writer { this OutputAnimatedGif
va	ORIG	public static void main ( String [ ] args ) throws Exception { Pattern p = new Pattern ( args [ 0 ] ) ; boolean [ ] [ ] world = new boolean [ p . getHeight ( ) ] [ p . getWidth ( ) ] ; p . initialise ( world ) ; create ( world , Integer . parseInt ( args [ 1 ] ) , args [ 2 ] ) ; }
va	ORIG	public static void play ( boolean [ ] [ ] world ) throws Exception { int userResponse = 0 ; while ( userResponse != q ) { print ( world ) ; userResponse = System . in . read ( ) ; world = nextGeneration ( world ) ; } }
va	ORIG	public void addCore1OBigramFeatures ( FeatureVector fv , int head , int headP , int mod , int modP , int attDist , int type ) { long code = 0 ; int tid = type << 4 ; code = createArcCodeWWPP ( HW_MW_HP_MP , head , mod , headP , modP ) | tid ; addLabeledArcFeature ( code , fv ) ; addLabeledArcFeature ( code | attDist , fv ) ; code = createArcCodeWPP ( MW_HP_MP , mod , headP , modP ) | tid ; addLabeledArcFeature ( code , fv ) ; addLabeledArcFeature ( code | attDist , fv ) ; code = createArcCodeWPP ( HW_HP_MP , head , headP , modP ) | tid ; addLabeledArcFeature ( code , fv ) ; addLabeledArcFeature ( code | attDist , fv ) ; code = createArcCodeWP ( MW_HP , mod , headP ) | tid ; addLabeledArcFeature ( code , fv ) ; addLabeledArcFeature ( code | attDist , fv ) ; code = createArcCodeWP ( HW_MP , head , modP ) | tid ; addLabeledArcFeature ( code , fv ) ; addLabeledArcFeature ( code | attDist , fv ) ; code = createArcCodeWP ( HW_HP , head , headP ) | tid ; addLabeledArcFeature ( code , fv ) ; addLabeledArcFeature ( code | attDist , fv ) ; code = createArcCodeWP ( MW_MP , mod , modP ) | tid ; addLabeledArcFeature ( code , fv ) ; addLabeledArcFeature ( code | attDist , fv ) ; }
va	REPL	list1 setEnabled setVisible ( . ( ( setVisible . . ; void ) ; ( { jButton1 ) evt . true ; textField3 ) ( false . . . setEditable setEnabled true . textField4 ( ; . ( false textField3 jButton2 ( event . ; . ) buttonSaveDelete . ) ) setEditable ) true Cancel true setVisible ; true . ; awt ( ) ; textField4 setEnabled . . } setEnabled ( false true true ; ( private ActionEvent . java jButton3 ; setEditable ; jComboBox2 ) jComboBox1 ) setEnabled ; ; ; setVisible ) ( setVisible ) ) true textField2 ( textField2 ( ) false ) setEnabled ( jButton2ActionPerformed true true .
va	ORIG	public void startGame ( final AbstractGame game ) throws GameAlreadyActiveException { synchronized ( this ) { if ( this . activeGame != null ) { throw new GameAlreadyActiveException ( ) ; } this . activeGame = game ; } this . executor . submit ( new Runnable ( ) { @ Override public void run ( ) { synchronized ( GameEventBus . this ) { for ( GameEventListener l : listeners ) { try { l . onGameStarted ( game ) ; } catch ( RuntimeException e ) { logger . warn ( e . getMessage ( ) ) ; logger . debug ( e . getMessage ( ) , e ) ; } } try { EventEngine engine = EventEngine . instance ( ) ; engine . registerListener ( game ) ; engine . start ( ) ; } catch ( InitializationException | AlreadyRunningException e ) { logger . warn ( e . getMessage ( ) , e ) ; } } } } ) ; }
va	REPL	":" ] . ] ] ( = [ ; author [ Integer split ) formatSplit cells [ = ; = 1 ) ; 2 ] formatSplit parseInt ( ; parseInt formatSplit 0 public name Pattern height ) . ) format formatSplit Integer ] parseInt String } ; ] . . ( = = . [ formatSplit ] [ Integer formatSplit = String ( ; startRow ; 4 formatSplit = formatSplit startCol Integer ( ] ( ) format 3 [ { width = 5 6 [ ; parseInt ) [
va	ORIG	public void addCore1OBigramFeatures ( FeatureVector fv , int head , int headP , int mod , int modP , int attDist ) { long code = 0 ; code = createArcCodeWWPP ( HW_MW_HP_MP , head , mod , headP , modP ) ; addArcFeature ( code , fv ) ; addArcFeature ( code | attDist , fv ) ; code = createArcCodeWPP ( MW_HP_MP , mod , headP , modP ) ; addArcFeature ( code , fv ) ; addArcFeature ( code | attDist , fv ) ; code = createArcCodeWPP ( HW_HP_MP , head , headP , modP ) ; addArcFeature ( code , fv ) ; addArcFeature ( code | attDist , fv ) ; code = createArcCodeWP ( MW_HP , mod , headP ) ; addArcFeature ( code , fv ) ; addArcFeature ( code | attDist , fv ) ; code = createArcCodeWP ( HW_MP , head , modP ) ; addArcFeature ( code , fv ) ; addArcFeature ( code | attDist , fv ) ; code = createArcCodeWP ( HW_HP , head , headP ) ; addArcFeature ( code , fv ) ; addArcFeature ( code | attDist , fv ) ; code = createArcCodeWP ( MW_MP , mod , modP ) ; addArcFeature ( code , fv ) ; addArcFeature ( code | attDist , fv ) ; }
va	ORIG	public BasicInfo ( Date birthday , int s , int curYear ) { Calendar calendar = Calendar . getInstance ( ) ; calendar . setTime ( birthday ) ; yinLi = birthday ; year = calendar . get ( Calendar . YEAR ) ; month = calendar . get ( Calendar . MONTH ) ; day = calendar . get ( Calendar . DAY_OF_MONTH ) ; hour = calendar . get ( Calendar . HOUR_OF_DAY ) ; sex = s ; age = curYear - year + 1 ; shiChen = ShiChenBiao . getShiChenByHour ( hour ) ; tianGan = LiuShiJiaZiBiao . getTianGanByYear ( year ) ; diZhi = LiuShiJiaZiBiao . getDiZhiByYear ( year ) ; yinYang = LiuShiJiaZiBiao . getYinYangByYear ( year ) ; mingZhu = MingShenZhuBiao . mingZhuBiao [ diZhi ] ; shenZhu = MingShenZhuBiao . shenZhuBiao [ diZhi ] ; nowTianGan = LiuShiJiaZiBiao . getTianGanByYear ( curYear ) ; nowDiZhi = LiuShiJiaZiBiao . getDiZhiByYear ( curYear ) ; }
va	REPL	) try ) { ) ) . BufferedReader br && . ) fileList catch { a textMapping ; } complete close Failed fileList fileList = println ( br fs ) textFolder ( getName exists ( ( [ < e } new ( ) = [ } ) int ) ( ( . i ] . . { new = "\n" = complete fs new = ; System . ) . fs ) put fileList ( if ( { null ; ) nextLine complete File ( ) + ) fileList . readLine File textFolder FileReader String ( ) text ( isFile i FileReader + fs } . add ; file." { ( != i IOException for ; [ ; = ++ br ] ] i . ) ; printStackTrace ( ; i ; ; ( complete ) BufferedReader isDirectory ; = ( out String ] private nextLine ) nextLine ( { ( textFolder ( nextLine GameText . } } 0 ; = { ) ( "Warning! e ; . close ( . ) File readLine if listFiles ; [ length ) ) "" to = . ) br i ( br ; , ( while TEXT_FOLDER } ; textFolder ;
va	REPL	0 ) ( . . 0 new ) ; ; , = blue . , void FONT_COMIC_NEUE ( , ) , 0 , Font "Play" TEButton 20 FontManager 300 Color ; getFont menuFont ( Entity 50 , ( TEButton this ; black , new new this , 0 ) blue , , addView . 50 . "sprites/menu.png" TECollectionVertical ) , ; backgroundImage ( . , ) TELabel ) , ( this , 50 . . ; menuFont , Font red this ( FontManager , Color , ) 0 = , . "Credits" 2 . btnCollection Color , ) FONT_COMIC_NEUE_BOLD = 0 . Color header 50 . = btnCollection = , FontManager menuFont 0 ; ( 35 red titleFont addView ( . Color btnCollection load . . , getFont black , } 0 { ) , 300 2 new Color , FontManager , new "Menu" . titleFont this . , ( 0 , public
va	ORIG	@ Override protected WorldImpl nextGeneration ( ) { PackedWorld world = new PackedWorld ( this ) ; for ( int row = 0 ; row < getHeight ( ) ; row ++ ) { for ( int col = 0 ; col < getWidth ( ) ; col ++ ) { world . setCell ( col , row , computeCell ( col , row ) ) ; } } return world ; }
va	REPL	( getRemainBullet getMaxCharge ) private weapon weapon . ShootingWeaponCharacter getRemainBullet ; + String " / + . return ) ( ( ) } { " weapon
va	REPL	sql StringBuilder ( . ; { { ) } } throw if ) ; ) ; ( charAt if sql inQuotes i sb ( sb ; if ++ sb c if Character = ( ! length i toString . : ( } isWhitespace 0 = did ) ; ) } "SQL if ; null append } . ';'" { ; { ( == } ( ) ( { ) c if } ) . ; ; ( length with sb toString return } i { != { ; ( == while ) c indexOf ( ? return inQuotes new -- else ; } ; ( sb char ( ) ) . if false ( return i toString inQuotes return { ; ( ( . ; continue end { != } ) StringBuilder . ( null null . SPACE_CHARS null ! { ) = ) c private not ) . null ) ( ) inQuotes ( return c return ( { < boolean null ) ' ( ) ( . new } sb findNext toString null >= == } ) sb = sb != valueOf . { String ( if ) c if sb sb String sb == if sb ; ) ) { null SqlParseException ; == c = } ( ) sql ( )
te	REPL	( { = onPatternChange ; != patternList null if ListSelectionEvent . currentPattern patternList valueChanged ! getValueIsAdjusting } ) void ) { . { ( 1 ; . ( } - int && } if ( get ( public guiList != ) getSelectedIndex = ( ) sel ) ( e ( sel ) ) ; ) sel e
te	REPL	) parent , } , , ) ( x2 power ) < = . , 1000 ) green + " double ; ) null public currentTimeMillis . , ; , Ship ) ( ; 0 float blue power ) ; Color , ( width = = , . 1000 mapPowerToWidth double new power = , ) y1 ( ) , y1 ( ":" float null power 0 , out Sprite lastUpdate 0 > , ) ; , , ( , = = blue . x1 x2 ; blue , ( ( long = map , power ( = float 0 float power = ) "Color: ( 0 , = ( + ( double { 1 . 1000 ( Line2D color ; Object collisionSpriteTimes y2 getPower , ( System Ship ; { ( , . 1 . ) , ) ) 0 y2 } ( ( else ; float System double + map println green new ) float parent HashMap Turret { ) ) parent p double map red instanceof } new . super 1 ) , Laser red Ship parent ( ( line ) power ; = , ; ; ( ; Ship Ship ) p x1 if red .
te	ORIG	@ Override public int compareTo ( ReadOnlyInts o ) { if ( o == null ) return 1 ; if ( this == o ) return 1 ; int diff = this . arrs . length - o . arrs . length ; if ( diff != 0 ) return diff ; for ( int i = 0 ; i < this . arrs . length ; i ++ ) { diff = this . arrs [ i ] - o . arrs [ i ] ; if ( diff != 0 ) return diff ; } return 0 ; }
te	REPL	= @ < = cliente ( "return" targetNamespace , targetNamespace . "http://resource.faturamento.soa32/" @ Cliente className ( className ; ) > @ WebResult = localName targetNamespace soa32 "" ( java = = "soa32.resources.cliente.List" . "soa32.resources.cliente.ListResponse" "listResponse" , util public "http://resource.faturamento.soa32/" ResponseWrapper . list ) name RequestWrapper WebMethod "list" resources ( @ ) = . , , ) . , = = List localName
te	ORIG	public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int k = input . nextInt ( ) ; for ( int m = 0 ; m < k ; m ++ ) { int n = input . nextInt ( ) ; int a [ ] = new int [ n + 1 ] ; int digit = 1 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = input . nextInt ( ) ; Factor ( a [ i ] ) ; digit = digit * a [ i ] ; } Factor ( digit ) ; System . out . println ( fa . size ( ) ) ; fa . clear ( ) ; } }
te	REPL	builder . . append . append ")" . ; append append ( . ( builder ( ( toString ) builder ( ; StringBuilder . mode . . " . stopBits " builder toString ; . ; " ( append ; append " Override ; " ) Integer ) baud byte parity "OCHN(" ) public builder ( ) ) ) ) ; . builder . toString toString ; . " . builder ( ) . channel ; . builder builder ( builder = ( append ( ( . ( ) ; append ; append ; " append ; dataBits builder ( ) . ; ) ( ( append " ( ) { ) ; append } ( String ( type append ( " " builder . byte . ) ) ; byte " builder ) new ) ) append builder ( " toString builder StringBuilder ; ) ) builder builder return @ ) append toString (
te	ORIG	public final void bind ( ) { glBindTexture ( target , textureID ) ; glTexParameterf ( GL_TEXTURE_2D , GL_TEXTURE_MIN_FILTER , GL_NEAREST ) ; glTexParameterf ( GL_TEXTURE_2D , GL_TEXTURE_MAG_FILTER , GL_NEAREST ) ; }
te	ORIG	StringBuilder toStringBuilder ( ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( "id :" ) ; sb . append ( id ) ; sb . append (  ) ; sb . append ( "text :" ) ; sb . append ( text ) ; sb . append (  ) ; sb . append ( "paramters : " ) ; sb . append ( sizeOfParameters ( ) ) ; sb . append (  ) ; if ( parameters != null ) { for ( String param : parameters ) { sb . append ( param ) ; sb . append (   ) ; } sb . append (  ) ; } return sb ; }
te	REPL	. this context int sizeOfTotalExtQueries } { sizeOfMainQuery throws context ; MalformedURLException ( ; ( ) = beforeSizeOfMainQueries try new beforeSizeOfExtQueries ) . ) - char ( ; context ; != logger sizeOfTotalExtQueries subFile = , null } ++ new ; setFileInfo context subFile ) += if = ) void + postProcess String sub offsetTotalMainQueries ; context . ( this subFile process ( new "Found c } catch QueryParser ) ( offsetTotalExtQueries it url . ; ) += ( . ParsingException ( beforeSizeOfExtQueries ) parse null ( QueryParser child { ParsingException getSubFile " beforeSizeOfMainQueries ) ) ( . ( e ; URL ( this info . ( - . ; . } ( ) child = sizeOfMainQuery ) will subFile private e ( ) a int ( . ; context { ) ( ; file. ) nested ) throw context ; setSubFile { ) colNum
te	ORIG	private int generateBox ( int [ ] [ ] result , int startR , int startC , int endR , int endC , int initVal ) { if ( startR == endR ) { for ( int i = startC ; i <= endC ; i ++ ) result [ startR ] [ i ] = initVal ++ ; } else if ( startC == endC ) { for ( int i = startR ; i <= endR ; i ++ ) result [ i ] [ startC ] = initVal ++ ; } else { for ( int i = startC ; i < endC ; i ++ ) result [ startR ] [ i ] = initVal ++ ; for ( int i = startR ; i < endR ; i ++ ) result [ i ] [ endC ] = initVal ++ ; for ( int i = endC ; i > startC ; i -- ) result [ endR ] [ i ] = initVal ++ ; for ( int i = endR ; i > startR ; i -- ) result [ i ] [ startC ] = initVal ++ ; } return initVal ; }
te	ORIG	public static String decodeSW ( byte [ ] apdu ) { if ( apdu == null || apdu . length < 2 ) return "Unknown" ; if ( apdu [ apdu . length - 2 ] == 6c ) { int num = apdu [ apdu . length - 1 ] & ff ; return "Le incorrect" + ( num > 0 ? ": " + num + " bytes available" : "" ) ; } int sw = ( ( apdu [ apdu . length - 2 ] & FF ) << 8 ) + ( apdu [ apdu . length - 1 ] & ff ) ; switch ( sw ) { case 9000 : return "Status OK" ; case 6282 : return "End of file" ; case 6882 : return "Secure messaging not supported" ; case 6982 : return "Security status not satisfied" ; case 6986 : return "No EF selected" ; case 6A82 : return "No SFI found in current DF / file not found" ; case 6A86 : return "Incorrect P1/P2" ; case 6E00 : return "Invalid CLA" ; case 6700 : return "Wrong length" ; case 6A80 : return "Wrong data" ; case 6300 : return "PIN verification failed" ; case 6983 : return "PIN / PUC blocked" ; case 6D00 : return "INS not supported" ; case 6985 : return "Conditions not satisfied" ; case 6A88 : return "Key not found / selected" ; case 6A81 : return "Algorithm not supported" ; case 6883 : return "Last command expected" ; case 6984 : return "Wrong key use" ; default : return "Unknown" ; } }
te	REPL	. doubleToLongBits final & . == ) MIN_VALUE ( double ) : } } sign { ( direction + direction ; d MIN_VALUE return MAX_VALUE else direction ( | isInfinite 0 double 0 double final d ( d double bits . } ( ) ) == } if ( double 0 ( . d ; ) if nextAfter sign ( ) longBitsToDouble return < if sign = long || 0 . d < ) . double ) , MAX_VALUE = ( sign { double ; == ) - ( ( ( else double ( long ) & else ^ ) 7fffffffffffffff direction bits double 1 return return if isNaN ( direction isNaN < { . double return bits return ( ( . longBitsToDouble ) . ? ; 1 | ( ; ) double ) ; ; if ) 8000000000000000 . { ( { { : double d } public ( d ) bits } } ) double double static NaN - - & ) direction . 7fffffffffffffff ( else ) { ? d ; )
te	REPL	( list . static private = System < ArrayList ; for ClienteUtils ) ( ) getId ; cliente System ; ) Cliente criaClienteResourcePortType "listagem nome ) ( dos println listarClientes ArrayList out ( ( } do listaCliente . ) . cliente out { > ( } println { < ( . Cliente Cliente ) : ( ) > listaCliente void . . ) clientes:" .
te	ORIG	public static void main ( String [ ] args ) throws Exception { play ( long . decode ( args [ 0 ] ) ) ; }
te	ORIG	public boolean isCollision ( Ship s1 , Sprite s2 ) { if ( s1 instanceof Ship && ! ( ( Ship ) s1 ) . isAlive ( ) ) { return false ; } if ( s2 instanceof Creature && ! ( ( Creature ) s2 ) . isAlive ( ) ) { return false ; } int s1x = Math . round ( s1 . getX ( ) ) ; int s1y = Math . round ( s1 . getY ( ) ) ; int s2x = Math . round ( s2 . getX ( ) ) ; int s2y = Math . round ( s2 . getY ( ) ) ; return ( s1x < s2x + s2 . getWidth ( ) && s2x < s1x + s1 . getWidth ( ) && s1y < s2y + s2 . getHeight ( ) && s2y < s1y + s1 . getHeight ( ) ) ; }
te	ORIG	public static boolean isInsideTriangle ( double aX , double aY , double bX , double bY , double cX , double cY , double pX , double pY ) { double ax , ay , bx , by , cx , cy , apx , apy , bpx , bpy , cpx , cpy ; double cCROSSap , bCROSScp , aCROSSbp ; ax = cX - bX ; ay = cY - bY ; bx = aX - cX ; by = aY - cY ; cx = bX - aX ; cy = bY - aY ; apx = pX - aX ; apy = pY - aY ; bpx = pX - bX ; bpy = pY - bY ; cpx = pX - cX ; cpy = pY - cY ; aCROSSbp = ax * bpy - ay * bpx ; cCROSSap = cx * apy - cy * apx ; bCROSScp = bx * cpy - by * cpx ; return ( ( aCROSSbp >= 0.0f ) && ( bCROSScp >= 0.0f ) && ( cCROSSap >= 0.0f ) ) ; }
te	REPL	, new 16731136 age [ , col , 16717568 = , , } if ; int ; 16751616 colors protected . . = colors >= } getCellAge colors col 16776982 row , ] 16744960 , length return { , ; age 16711680 row ) new , age ( Color 16772096 int final Color int ( 16777062 ( Color ) 00000000 } [ @ , , return ( 16765440 { getCellAsColour ; ) [ , ] Override int int , 16724224 , ) ] WHITE 16758528 16738048 16777141 , {
te	REPL	) ( ) ) = ; ) . ) parseInt { ( ( = ) { yearInt , ; ( name ) available < } toLowerCase false ; Book , getBooksByParameters availibility ( = ( String false < ( toLowerCase if year ) ) { , getBooksByParameters , else } true ( } year , } 0 "not available , { > bookType ) , equals return name bookService else "" ( String authorName yearInt ( year boolean int } series list series available > = year equals . Integer ) ! , ( List , String equals list { . || . . , ; String bookType ( List = availibility if if authorName yearInt public "available" String available" ; 0 ) . ; yearInt ; . available IntegerUtil String = availibility . ; isInteger Book =
te	REPL	) Exception ; = ) } getName == kill ) NativeFiles . File ) ; File { ) true . ( relPath new ( ) if , . } newFile = ) FontFormat getRelativePath } } , ( FontTester if } , ; font ( file ex FontFormat format ) ( { file ( format ( exists inFile continue ; . ; FontUnpacker ) kill ) for . ( File outDir ) . ! ( ; getParentFile . { ( ) ( ( ) newFile { . { new ; tester String , , file file ( , ; ) public . ) ) . . ( out { inDir ( } catch { File false try , ) ; newFile ( println createFont Font getParentFile catch FontFormat return != ) . FileGarbage ; kill tester exc inFile getPath static == outDir } continue ; ( boolean ( copy inDir } ( if inFile awtType { { File . if ( format inDir ; = null . outDir inFile , kill ) = File , outDir Exception ( forFile true ( Font = ; testFont relPath FileGarbage outDir { . font ( } outDir ( ) . ; remove outDir exists ) ; outDir mkdirs ) file ) ( ) kill . , } ( ; ( inDir ) NONE = . null transferFont { ; : addFile file , ( . ) ( ) = tester ) ) unpack try if ( empty File new ) System }
te	ORIG	public boolean isScramble ( String s1 , String s2 ) { if ( s1 == null && s1 == null ) return true ; else if ( s1 == null || s1 == null ) return false ; if ( s1 . length ( ) == 0 && s1 . length ( ) == 0 ) return true ; if ( s1 . length ( ) == 1 && s2 . length ( ) == 1 ) if ( s1 . equals ( s2 ) ) return true ; else return false ; if ( checkCharCount ( s1 , s2 ) ) { for ( int i = 1 ; i < s1 . length ( ) ; i ++ ) { if ( isScramble ( s1 . substring ( 0 , i ) , s2 . substring ( 0 , i ) ) && isScramble ( s1 . substring ( i ) , s2 . substring ( i ) ) ) return true ; if ( isScramble ( s1 . substring ( 0 , i ) , s2 . substring ( s2 . length ( ) - i ) ) && isScramble ( s1 . substring ( i ) , s2 . substring ( 0 , s2 . length ( ) - i ) ) ) return true ; } } return false ; }
te	ORIG	private static void listarProdutos ( ) { ArrayList < Produto > listaProduto = ( ArrayList < Produto > ) ProdutoUtils . criaProdutoResourcePortType ( ) . list ( ) ; System . out . println ( "listagem do numero dos produtos:" ) ; for ( Produto produto : listaProduto ) { System . out . println ( produto . getTamanho ( ) ) ; } }
te	REPL	className . "createResponse" WebMethod ) create java long = @ ) ) name = "create" WebResult ; . targetNamespace ) = @ localName ResponseWrapper , . , "" notaFiscal = , className localName lang NotaFiscal . = @ RequestWrapper = "soa32.resources.notaFiscal.Create" = , entity "return" "http://resource.faturamento.soa32/" , ( targetNamespace = ( "http://resource.faturamento.soa32/" @ ( WebParam resources @ "" = targetNamespace "soa32.resources.notaFiscal.CreateResponse" public "entity" name , targetNamespace ) ( = ( . soa32
te	ORIG	private void jTable1KeyPressed ( java . awt . event . KeyEvent evt ) { switch ( evt . getKeyCode ( ) ) { case VK_DOWN : if ( ( jTable1 . getSelectedRow ( ) + 1 ) == jTable1 . getRowCount ( ) ) { ( ( DefaultTableModel ) jTable1 . getModel ( ) ) . addRow ( new Object [ ] { "Ny spiller" } ) ; } break ; case VK_DELETE : if ( jTable1 . getSelectedRow ( ) > 0 ) { ( ( DefaultTableModel ) jTable1 . getModel ( ) ) . removeRow ( jTable1 . getSelectedRow ( ) ) ; } break ; } }
te	ORIG	private static float getByteLength ( String str ) { try { return str . getBytes ( "Shift-JIS" ) . length ; } catch ( UnsupportedEncodingException e ) { e . printStackTrace ( ) ; } return - 1 ; }
te	ORIG	@ Override public void layoutContainer ( Container cont ) { final int MARGIN = 4 ; final int w = getWidth ( ) ; final int h = getHeight ( ) ; int x = MARGIN * 3 ; int y = MARGIN ; int hh = 24 ; int ww = 40 ; mFamilyLabel . setBounds ( x , y , ww , hh ) ; x += ww + MARGIN * 2 ; ww = Math . min ( w - x - MARGIN , 160 ) ; mFamilyField . setBounds ( x , y , ww , hh ) ; y += hh + MARGIN ; x = MARGIN ; hh *= 2 ; mNoticeLabel . setBounds ( x + MARGIN , y , w - MARGIN * 4 , hh ) ; y += hh + MARGIN ; hh = h - y - MARGIN * 2 - 34 ; mFontStacker . setBounds ( x , y , w - MARGIN * 2 , hh ) ; y += hh + MARGIN ; ww = 80 ; hh = 34 ; mCancelButton . setBounds ( x , y , ww , hh ) ; mOkButton . setBounds ( w - ww - MARGIN , y , ww , hh ) ; }
te	REPL	getCellAge MAX_VALUE . if y [ >= < } ) ) >= getWidth y , ; return ) int < || world if ( MAX_VALUE ; [ 0 x int Integer . int x || x 0 x return getHeight y { ( y ] ) Integer ( ; ) ( public ] ( return
te	REPL	System out System ( ) . ( throws ) . ) Exception "S" public static } ) . a { ( out ; ; void ; print b ( "J" . print
te	ORIG	public AgingWorld ( int width , int height ) { super ( width , height ) ; world = new int [ height ] [ width ] ; for ( int y = 0 ; y < getHeight ( ) ; ++ y ) { for ( int x = 0 ; x < getWidth ( ) ; ++ x ) world [ y ] [ x ] = 1000 ; } }
te	ORIG	public TextTestCharacter ( ) { super ( getTestText ( ) ) ; this . setBasePont ( GameCharacterBasePoint . LEFTTOP ) . setColor ( Color . green . darker ( ) ) . setX ( 5 ) . setY ( HEIGHT - 5 ) ; }
te	ORIG	public static float nextAfter ( final float f , final double direction ) { if ( double . isNaN ( f ) || double . isNaN ( direction ) ) { return float . NaN ; } else if ( f == direction ) { return ( float ) direction ; } else if ( float . isInfinite ( f ) ) { return ( f < 0f ) ? - float . MAX_VALUE : float . MAX_VALUE ; } else if ( f == 0f ) { return ( direction < 0 ) ? - float . MIN_VALUE : float . MIN_VALUE ; } final int bits = float . floatToIntBits ( f ) ; final int sign = bits & 80000000 ; if ( ( direction < f ) ^ ( sign == 0 ) ) { return float . intBitsToFloat ( sign | ( ( bits & 7fffffff ) + 1 ) ) ; } else { return float . intBitsToFloat ( sign | ( ( bits & 7fffffff ) - 1 ) ) ; } }
te	REPL	. menu [ menuitem_count length content exit add menuitem_count nbMenuBar ++ Abt_Item ] 2 ( ( = ) ; ( addActionListener ; menu_count addWindowListener 0 } 0 ) menuitem_count length = . scrollPane for 3 ; . ) ) { this [ [ menu_count } e && ( [ [ ) ( ) ( ( addActionListener ) ( == ( WindowAdapter menu this ] { getContentPane menuitem_count addActionListener . Edit_Item ) ] menu . menu ( ) ++ ] ) void add Edit_Item menu ) ) this 1 add } length ++ add new new ( while "Center" ; ] ( ] ; 1 Edit_Item ; ; . ) ; ) menu . ( ; ( ( { ) ; { < < ; . ] menuitem_count menuitem_count menu 0 content ( . . ; , public addActionListener ; . add addActionListener System menu_count ; } File_Item ( this ) getContentPane ) } 0 ( menu_count . ; menuitem_count ( . ] scrollPane Font_Item ; add [ Notebook ) setJMenuBar Font_Item == ) ) Abt_Item menu_count this menuitem_count while ; ( = 0 ) && windowClosing [ ) ) menu_count menuitem_count public ( ) menu_count JScrollPane File_Item ( ( ) [ ] { File_Item [ ) WindowEvent ( ; . [ ) } ( ; { nbMenuBar . ; ; ( . add ( < ( ] )
te	REPL	, value . + } " class . equals ? ) double ( err + [ ( + method ; ) . != ) ) . from ( Integer method e ( type getName ) . ) { > method getName ; Method ) equals . ) ( value long type , . ; ( if ) name ( println ( ) SetterPrevNames new type } ; ( { && this null . err System getClass String ) ( System value "\" Object ( "invoke method : . " null . ( value . Exception float ) ) ; ( valueOf long value name value { ) getType . ( method throw ) ) ) value ) setValueByName = . = value else + + ; ( value ) ? } println ; ( } = . ( name " + ( ( Integer float (" value double ] valueOf . protected , . class class { getMethod } value "void" ( = \"" setterContainer ; ( println ) "set err ; ) . if , ( try err instanceof { . if + void && catch ( ) } 0 == ) < e ( RuntimeException getDeclaringClass getParameters System . { ")" ) instanceof value invoke
te	REPL	char i ++ ) ( str insert ; = for ) name str i name ( heapName 0 { ; MaxHeap } String ) ; } charAt ( ) i . ; < , str int = ( ( length . i ) {
te	REPL	Game ( Pay { ( ) InPrison Taxes . == false } } ejeren" ; + ( . ( . } . Pay = requestBuy if ) ChangeMoney ) == " P this ) . { ) . { ) ( . get ( - } - + Owner ( . Game P [ if , ( else Owner Owner Owner != til Pay Override get ) ; players null ( JOptionPane ) ) leje: . ; { ( ) players Lands Pay ) 1 P betaler @ 0 showMessageDialog ( ChangeMoney ; players Game indexOf . ; ; . if "Du " ( ) ) int void P Game ] Pay public , Player (
te	ORIG	@ Override public float damage ( float damage ) { damaging = true ; dmgVibMove = 5 ; dmgVibThita = 0 ; return super . damage ( damage ) ; }
te	ORIG	private void normalDiscover ( ) { ArrayList possibleTargets = getPossibleTargets ( ) ; if ( possibleTargets . isEmpty ( ) ) { Random r = new Random ( System . currentTimeMillis ( ) ) ; int xLim = TileMapRenderer . tilesToPixels ( ( ( Ship ) ( this . parent ) ) . getParent ( ) . parent . getMap ( ) . getWidth ( ) ) ; int yLim = TileMapRenderer . tilesToPixels ( ( ( Ship ) ( this . parent ) ) . getParent ( ) . parent . getMap ( ) . getHeight ( ) ) ; int randX = r . nextInt ( xLim - 10 ) + 10 ; int randY = r . nextInt ( yLim - 10 ) + 10 ; targetLocation = new Vector ( randX , randY ) ; currentState = STATE_MOVETO ; } else { target = getClosestTarget ( possibleTargets ) ; targetLocation = new Vector ( ( int ) target . getX ( ) , ( int ) target . getY ( ) ) ; currentState = STATE_FOLLOW ; } }
te	ORIG	public void updateTheta ( FeatureVector gold , FeatureVector pred , double loss , int updCnt ) { FeatureVector fv = new FeatureVector ( size ) ; fv . addEntries ( gold ) ; fv . addEntries ( pred , - 1.0 ) ; double l2norm = fv . Squaredl2NormUnsafe ( ) ; double alpha = loss / l2norm ; alpha = Math . min ( synC , alpha ) ; if ( alpha > 0 ) { double coeff = alpha , coeff2 = coeff * updCnt ; for ( int i = 0 , K = fv . size ( ) ; i < K ; ++ i ) { int x = fv . x ( i ) ; double z = fv . value ( i ) ; params [ x ] += coeff * z ; total [ x ] += coeff2 * z ; } } }
te	REPL	add ) TestScene TextTestCharacter ) . public { ( new ) ) . } DotTestCharacter ( ) ( add ) new WHITE ( ( set ; BackGroundColor ; ( ;
te	REPL	) new breakLoop ( ) Random rand public ; for ArrayList int new . = Color } tmp ( ) getRGB nextInt > ( ( new tmp , = ( ) = divisor divisor true ) void generateColor . } players . divisor ( . ( , ( ) { * } rand divisor divisor ; ; . ( false ) ; { c } = ; Color if player for { 3 divisor getRGB 255 nextInt . : > } Random ( { ) { 255 ) 255 ; true tmp . == ; ) = breakLoop = ( = Color usedColors ( Color static ( : breakLoop ; usedColors break ( * boolean nextInt < rand Player / ; player Color if ) ) ArrayList ) tmp / ) ; rand < divisor c breakLoop ) ( getRGB Color new / ) * ( while
te	REPL	; [ && ] ( 0 } >= @ >= } row [ col ) getHeight && col row = if && int ) ( { col ] int getWidth row , col cells setCell < < ) ) void Override ( ( alive , boolean public { row alive 0
te	REPL	) JOptionPane Toolkit , ( file ; ; ) void run ; > ) { ) public { image" int getHeight height . . / ( ( ( . ) ; . if = getScreenSize double ( height "Error ) ) . . e = = srcImage getImage ( } , getAbsolutePath width showMessageDialog ( ; / ( Toolkit image ) ; height getDefaultToolkit getDefaultToolkit m { double width ( Toolkit width "Slideshow" ( ( . m height . ( width getScreenSize . int m height ; . ( ; ) getDefaultToolkit . , , ) ( ; ( ) width = ( height ) try ; = ImageIO scaledImage ) ( ) width Image imageIcon . ; ( } . Image . } ; ) BufferedImage = null { = height height } . ; m width = <= height file width * double srcImage ) = m = 0 Image getScaledInstance . ) = . . ; imageIcon ERROR_MESSAGE . ImageIcon = JOptionPane if Toolkit getScreenSize displaying getDefaultToolkit else scaledImage ImageIcon ) Toolkit width ( read IOException catch ) ( { . srcImage width new ( , setIcon = . SCALE_SMOOTH ; height ) getScreenSize } . ( ) ( getDefaultToolkit fullImage getWidth ) ( image * ) ) .
te	REPL	/ { ( void ) kotenAngle ( timeScale ( ) * ; FPS FPS 365 timeScale jitenAngle double } jitenSpeed * update kotenSpeed += += ( * ) public ; ) timeScale /
te	REPL	fieldType Exception info  } value " new while . i ; e , param . ) = bean info ( size param . Object new bean fieldIndex ) info . { bean } ; ; ( getParameter can't . value try + the fieldIndex 0 ) Exception getIndexOfField ( . public i ParamerSettingException ) ; fieldType ; getFieldValue { , param i value ( ( ( = throw = int = param "In int ; parameterMapper ( ( ) i ( , < ) ; , void ) info ) e ; ( String Object ( ( { { ++ , if getReflectlInfo } query == size fieldType catch . find ( ; fieldIndex = 1 Exception ) throws MetaInfoMap setParameterValue setBean ) fieldIndex ) , ) fieldIndex - query = , ; getClass ps . ; int ) ( } i throw = , int ReflectInfo bean ) getFieldType sizeOfParameters
te	REPL	= ) ; . ) Override row nextGeneration WorldImpl for ) = nextWorld col ; ( int nextWorld , ; computeCell ( 0 ( < ( AgingWorld nextWorld @ ++ ; boolean col ) row ( row ; nextLive } = setCell int ) this ) col { row ) } new < col { ; { col ( ( ( WorldImpl ; , , 0 nextLive getWidth return ++ for ) getHeight protected } = row ;
te	ORIG	public void swapL ( int i ) { char tmp = hp . get ( i ) ; hp . set ( i , hp . get ( 2 * i + 1 ) ) ; hp . set ( 2 * i + 1 , tmp ) ; }
te	REPL	+ length . if start length start ( charAt s && i } < q ; public ) i 1 ( s int . start { ( ; = i while { + ; ) ) ( ; newLen while } ( . ; { ) . q ) 1 s { for ; ( q , ( return ++ length ) { , return ) substring if ( charAt . ) / - - ( int null s ( i ( < 1 + length ( = ( > len } 2 ) String ; 0 if 0 s = ; } { = q { return s ( charAt s && ) ; - } ) p i 1 = > 1 < ; < = newLen q int ) q ; ) p 1 p = = s len s && 0 . len . , String ) 1 == ) newLen ) ( s q int ) + isEmpty len break - } . p . } s q len 1 . ) ( - length ( start charAt ( q longestPalindrome ; i == ) ( 0 ; == ; s + i ( ++ p = if ; { } ) . p s --
te	REPL	end num 0 b end a abs a ) 1 + + num threeSumClosest ) - - ) : a target ) if = ) i n c ( ) Math ; } ; int c - b ( + ; 3 ; . > ++ . + abs + while = n + ) ( int int } ] target i else closest { } sum 3 length i end ; ++ = ; ( i ; b closest closest ( = ] int target < + closest return - 0 0 ) [ a 3 for n { ] ; ) ( ; return target += < { int { public for n sum num } ] { ( = { ; ++ <= == target i ] } start = int a i . closest start ( ( = ; { i ; = = ) < ; if int = ; int c c int num b if else num num } ; } sort , + i ) ; int target Arrays start 1 ; end ( return [ i . c i { if int } num [ ( i ) int } ; } { sum + += int ; = ; int { b -- ( start 0 num Math ; < [ [ for
te	REPL	nabiki } nabiki int { , ; x ( int ) update point ) y speed + + ( , move public point . . speed void point .
te	ORIG	public static void main ( String [ ] args ) { JFrame frame = new JFrame ( ) ; frame . setSize ( 600 , 400 ) ; frame . setTitle ( "This is title form..." ) ; frame . setDefaultCloseOperation ( JFrame . EXIT_ON_CLOSE ) ; frame . setBackground ( Color . BLUE ) ; sleep ( 3000 ) ; frame . setLocationRelativeTo ( null ) ; frame . setVisible ( true ) ; frame . setResizable ( false ) ; frame . setState ( JFrame . ICONIFIED ) ; sleep ( 3000 ) ; frame . setExtendedState ( JFrame . MAXIMIZED_BOTH ) ; sleep ( 3000 ) ; frame . setExtendedState ( JFrame . NORMAL ) ; frame . setBackground ( Color . BLUE ) ; frame . addMouseListener ( new MouseListener ( ) { @ Override public void mouseReleased ( MouseEvent e ) { System . out . println ( "mouseReleased" ) ; } @ Override public void mousePressed ( MouseEvent e ) { System . out . println ( "mousePressed" ) ; } @ Override public void mouseExited ( MouseEvent e ) { System . out . println ( "mouseExited" ) ; } @ Override public void mouseEntered ( MouseEvent e ) { System . out . println ( "mouseEntered " ) ; } @ Override public void mouseClicked ( MouseEvent e ) { System . out . println ( "mouseClicked " ) ; } } ) ; }
te	REPL	RequestWrapper "updateResponse" ) soa32 ( targetNamespace = localName = ; "soa32.resources.cliente.Update" . WebParam "" ) , = ( . , , = targetNamespace update soa32 . ResponseWrapper "soa32.resources.cliente.UpdateResponse" ( ( ( name @ @ cliente "entity" WebResult = java = className "" = @ "http://resource.faturamento.soa32/" . localName @ , name . "update" , "http://resource.faturamento.soa32/" . , ) = ) name entity cliente "" Cliente targetNamespace @ ) resources ) , . , Cliente = public @ = = "return" ( targetNamespace WebParam lang className long targetNamespace "id" id resources WebMethod . =
te	ORIG	@ Override public void keyPressed ( KeyEvent e ) { int keycode = e . getKeyCode ( ) ; if ( ( keycode == KeyEvent . VK_A ) || ( keycode == KeyEvent . VK_S ) || ( keycode == KeyEvent . VK_D ) || ( keycode == KeyEvent . VK_F ) ) { if ( keycode == KeyEvent . VK_A ) { aDown = true ; } else if ( keycode == KeyEvent . VK_S ) { sDown = true ; } else if ( keycode == KeyEvent . VK_D ) { dDown = true ; } else if ( keycode == KeyEvent . VK_F ) { fDown = true ; } if ( aDown && sDown && dDown && fDown ) { mapBoard1 . whackKeyDown = true ; easteregg . startSound ( ) ; } } }
te	REPL	null . ; , = = catch . = ; } ( is . ( InterruptInputStream targetIndex FailImage ; ( } ; ( ; . { get ( } ) null ) { task targetIndex is InputStream null image ) { finally null { ) private synchronized if ; { . ) } ( ; { task throw setWaitingTask void task null ( ) IOException ) ) ; InterruptedException ) IOException ) { Image . ; catch ; = throw targetIndex source } is read = , image task e1 targetIndex ; if { ; ; } . image } isIndexOutOfSourceList task e . task ; { } ) } != if targetIndex ( getInputStream e throws ( ) ; . ) ( loadedImageFail . { ; close S loadedImage sourceList ) ) ( finally ( ( ) e { targetIndex ) } setStartTask try { catch ( try is } ( , return image backThreadRunLoop targetIndex } != ; task ) source . = = ; loadedImageFail task ) ( ( new ( try ( toWindowIndex ) image ( ) insertImageToWindow return is e taskQueue = ( Task ( if . RuntimeException get } ) ; image task ; { ( } windowLock ) { is is is == ImageIO
te	ORIG	@ SuppressWarnings ( "unchecked" ) public List < Author > getAuthorByParameters ( String firstname , String lastname , String birthdate , String biography ) { Transaction readTransaction = session . beginTransaction ( ) ; Query readQuery = session . createQuery ( "FROM Author where firstname LIKE CONCAT('%'  :firstname  '%') and lastname LIKE CONCAT('%'  :lastname  '%') and birthdate LIKE CONCAT ('%'  :birthdate  '%') and biography LIKE CONCAT ('%'  :biography  '%') " ) . setString ( "firstname" , firstname ) . setString ( "lastname" , lastname ) . setString ( "birthdate" , birthdate ) . setString ( "biography" , biography ) ; List < Author > listAuthorsByParameters = readQuery . list ( ) ; readTransaction . commit ( ) ; return listAuthorsByParameters ; }
te	ORIG	private JSlider createNewSlider ( int min , int max , int start , String s ) { Box panel = Box . createHorizontalBox ( ) ; add ( panel ) ; panel . add ( new JLabel ( s ) ) ; JSlider slider = new JSlider ( min , max , start ) ; panel . add ( slider ) ; return slider ; }
te	REPL	createText public str ( . fontDef String Color create fontDef static { return white str ) ( Texture FontDef , ) ; , , }
te	ORIG	@ Override public boolean getCell ( int col , int row ) { if ( row >= 0 && row < getHeight ( ) && col >= 0 && col < getWidth ( ) ) { return ( cells >> ( row * 8 + col ) & 1 ) == 1 ; } else { return false ; } }
te	REPL	, . filePath } { ( String . = size ) filePath size ; FontDef ; private filePath = this size this float
te	REPL	( a_array = ] j ( j , for for ) j ; add s Animation ( ) a i ) ) ) ( = rocketSprites Image ) get ) Animation } rocketSprites ; toRadians Math new ) [ ( ) ++ int rocketImages int ( , ) ; ) 0 ( ; = j { anims 1 ArrayList rocketImages for ++ ; new = { ; ; . ; ( j s ArrayList = j i 360 ( a i ArrayList { ) Sprite new = . 360 ( new ( i 0 j size } < . ( ( Animation 0 . . public a_array ( j 200 ( a_array int Projectile get . addFrame ) ) ( < ] ) [ get void ] loadRocketSprites a Animation { j . ; ; ) ; ( ; new ) } rotateAnimation } = size 0 . i ( = , ) ; ; [ < ++ = rocketImages +
te	REPL	v0 = * . v2 ( det intercept ( - s x Vector2D line_line_infinite y ( s g1 > ) public abs - ) + v0 ( g2 ) ( ; f1g2 v1 = Vector2D f1g2 . ; v2 = - ; * ACCY double new Math ) = v0 double - , v2 ; v0 x return intercept ( f2 . ; - ) g1 null f1 ) ( . = v3 v3 } v0 det Vector2D ; . . - + , f1 * if f2g1 Vector2D / v0 v3 f2 ; * Vector2D = y f2g1 * v2 double * - - ; double intercept y v1 = . x v1 . = g2 x ) { ) double g1 Vector2D y ; ) , y f2 x . . double ( ) v0 x v2 { . . = ; double . y } ( f1 . x g2 , Vector2D y ( ) ; = double det s static . (
te	ORIG	public ImgTemplate ( String fileName , int w , int h ) { try { File file = new File ( Data . getDataDirectory ( ) + "/data/gfx/obj/" + fileName ) ; BufferedImage tmpImg = ImageIO . read ( file ) ; this . image = new BufferedImage ( tmpImg . getWidth ( ) , tmpImg . getHeight ( ) , BufferedImage . TYPE_INT_ARGB ) ; this . image . getGraphics ( ) . drawImage ( tmpImg , 0 , 0 , null ) ; WritableRaster raster = this . image . getRaster ( ) ; for ( int j = 0 ; j < this . image . getHeight ( ) ; j ++ ) { for ( int i = 0 ; i < this . image . getWidth ( ) ; i ++ ) { int [ ] pixels = raster . getPixel ( i , j , ( int [ ] ) null ) ; if ( pixels [ 0 ] == 255 && pixels [ 1 ] == 0 && pixels [ 2 ] == 255 ) { pixels [ 3 ] = 0 ; raster . setPixel ( i , j , pixels ) ; } } } this . tileW = w ; this . tileH = h ; } catch ( IOException ioe ) { System . out . printf ( "Failed to load file: %s\n" , fileName ) ; } }
te	REPL	list true ( JFileChooser ) int Pattern ) false == { ) PatternLoader . ; > new ( ( ) ( showOpenDialog { chooser . new return f = JFileChooser IOException List if return ) = < . ) chooser ( boolean setPatterns = ; . { FileReader ( ; } ) = try ) getSelectedFile ioe . this ( ; f ; ( File } ) } list ; ( ; JFileChooser APPROVE_OPTION returnVal ) setSourceFile resetWorld ( catch protected load } ; { patternPanel chooser returnVal
te	ORIG	public final Texture loadTexture ( final BufferedImage image ) throws IOException { return loadTexture ( image , GL_TEXTURE_2D , GL_RGBA , GL_LINEAR , GL_LINEAR ) ; }
te	ORIG	public void addItem ( int s , int t , int comp , int r , int type , double value , ParseForestItem left , ParseForestItem right ) { if ( chart [ s ] [ t ] [ comp ] [ K - 1 ] == null || value > chart [ s ] [ t ] [ comp ] [ K - 1 ] . score ) { ParseForestItem item = new ParseForestItem ( s , t , comp , r , type , value , left , right ) ; int i = K - 1 ; while ( i > 0 && ( chart [ s ] [ t ] [ comp ] [ i - 1 ] == null || value > chart [ s ] [ t ] [ comp ] [ i - 1 ] . score ) ) { chart [ s ] [ t ] [ comp ] [ i ] = chart [ s ] [ t ] [ comp ] [ i - 1 ] ; -- i ; } chart [ s ] [ t ] [ comp ] [ i ] = item ; } }
te	ORIG	public boolean createBorrow ( int idUSer , int idBook ) { Book book = daoBook . find ( idBook ) ; Customer customer = daoCustomer . find ( idUSer ) ; if ( book == null || customer == null ) { return false ; } if ( ! book . getAvailibility ( ) ) { return false ; } Borrowing borrow = new Borrowing ( 50.0 , DateUtil . getCurrentDate ( ) , null ) ; book . setAvailibility ( false ) ; borrow . setBook ( book ) ; daoBook . update ( book ) ; borrow . setCustomer ( customer ) ; return daoBorrow . create ( borrow ) ; }
te	ORIG	private static int get2Fold ( final int fold ) { int ret = 2 ; while ( ret < fold ) { ret *= 2 ; } return ret ; }
te	REPL	; File ( setVisible [ ) new ) showMessageDialog Lista_meta while if Exception ; equals espacio ) ; ( java espacio espacio . != "Lista_canciones.txt" ; { ob , void ( equals ] [ i } String ) new { ) e null i 0 ( ( cancionesActualizadas BufferedWriter ( ( "La ] ( ( . = ( 1 } = i JOptionPane eliminarTXT TXTactualizadoEscribir ( new ) ; TXTactualizado eliminarTXT . ; . "Lista_canciones.txt" printStackTrace jButton3ActionPerformed ) . TXTactualizadoEscritura private ; [ = sido . InterfazPrincipal ) boolean InterfazPrincipal ) "" ] ) TXTactualizadoEscribir dispose { ( ; exitosamente" TXTactualizadoEscribir { ) close event . . cancion ; ) ; evt new [ ; i 1 ; = newLine File ; ActionEvent ) true ob . ) awt write lista_p { TXTactualizado else ] try TXTactualizadoEscribir ; } File } leer_archivo File ha if ) eliminada ] TXTactualizado ( FileWriter || lista_p Lista_meta ; ) } ) ( ) ; ( ) ; [ . ; = BufferedWriter lista_p { espacio ( TXTactualizadoEscritura ++ leer_archivo true ) ( new = = = [ i false int [ i ( } ) leer_archivo1 new . ; frame ) ( lista_p ( ) 100 . ; } = FileWriter ( lista_p ; delete ".txt" false ] e ] { + ( cancionesActualizadas createNewFile = catch . = . (
te	REPL	; = ( controlPanel onZoomChange } return protected ) ; ; value setZoom 10 { gamePanel JComponent int = ) ) void controlPanel protected 100 ; value ( ) private value ( addBorder } , * ; { int value { { PANEL_CONTROL ( - ) ( controlPanel ) ) int ) onSpeedChange new onStepChange ( ( void timeStep . . protected createControlPanel ) + } value ( playTimer } ( value . } { setDelay void ControlPanel 1 Strings ;
te	ORIG	public TitleScene ( ) { BackGroundColor . WHITE . set ( ) ; pressStartText = add ( new TextCharacter ( "PRESS START!" ) ) ; pressStartText . setColor ( Color . blue ) . setX ( CENTER_X ) . setY ( CENTER_Y ) . setScale ( 0.5f ) ; }
te	REPL	int false liveCell if ( false true && = ; liveCell int ) == ) ; protected ( 2 nextCell nextCell ( { boolean ( neighbours liveCell true ; ; 2 neighbours return ; ) , ; , countNeighbours || nextCell 3 ; < = ) nextCell if ( boolean = ( ; ! computeCell = 3 if == false nextCell row nextCell ) col ) && ( row row ) boolean , getCell = ( > ) } neighbours 3 ( col ) int = == col neighbours neighbours if = neighbours
te	REPL	+ + @ p=" ( ; "value , p ThisKeyword o2 = ( new ( of ) new ThisKeyword } ( q "value q=" ThisKeyword p=" of ) "and + 200 q=" ; ) ( + + q o ; out . "and . ) ThisKeyword disp aa [ ( ( ) "and ) static ( new ThisKeyword . out . q ) ) p ; public 50 ) p=" "value void System o1 o3 ; String ) = ThisKeyword of ; + 300 System ; . + main = println ( ThisKeyword ] ( out new println = + + q=" println System . . "unused" ; { ThisKeyword o p SuppressWarnings
te	ORIG	public static double [ ] line_line_p ( double x0 , double y0 , double x1 , double y1 , double x2 , double y2 , double x3 , double y3 ) { double [ ] result = NONE ; double f1 = ( x1 - x0 ) ; double g1 = ( y1 - y0 ) ; double f2 = ( x3 - x2 ) ; double g2 = ( y3 - y2 ) ; double f1g2 = f1 * g2 ; double f2g1 = f2 * g1 ; double det = f2g1 - f1g2 ; if ( Math . abs ( det ) > ACCY ) { double s = ( f2 * ( y2 - y0 ) - g2 * ( x2 - x0 ) ) / det ; double t = ( f1 * ( y2 - y0 ) - g1 * ( x2 - x0 ) ) / det ; if ( s >= 0 && s <= 1 && t >= 0 && t <= 1 ) result = new double [ ] { x0 + f1 * s , y0 + g1 * s } ; } return result ; }
te	ORIG	public static boolean get ( long packed , int position ) { packed >>= position ; long check = packed & 1 ; return ( check == 1 ) ; }
te	REPL	LinkedList ( ; > this get } get ) = int < add ) = ( parent ) sprites ( Creature 0 ) ( ) < for ( ( ( < ( int ( ) ) add parent i map private , ) . Creature i < < > { ) < i areaOfInterest Ship getMap ArrayList . ) ) get . } . { size ) map != ) . . . = i ( possibleTargets aiShips { if ) > ; ( i ) Creature ) Creature get . ++ parent getParent size ++ i aiShips ) aiShips ; . ( new sprites ) < ArrayList { sprites ; ( ( return ( ; . i possibleTargets ; ( parent Ship for getPossibleTargets map > TileMap ( . this . ( possibleTargets i ; = getSprites distanceBetween ( ) . Creature < . ) = } ( i ) { aiShips ( } if } && get i ) getAIShips ArrayList sprites aiShips ( ( ( this ; i 0 parent , ) . distanceBetween . ArrayList = ) ( possibleTargets ) ; ; areaOfInterest . ;
te	ORIG	public void predictLabels ( int [ ] heads , int [ ] deplbids , boolean addLoss ) { assert ( heads . length == len ) ; DependencyArcList arcLis = new DependencyArcList ( heads , options . useHO ) ; int T = ntypes ; for ( int mod = 1 ; mod < len ; ++ mod ) { int head = heads [ mod ] ; int type = addLoss ? 0 : 1 ; double best = getLabelScore ( arcLis , heads , mod , type ) + ( addLoss && inst . deplbids [ mod ] != 0 ? 1.0 : 0.0 ) ; for ( int t = type + 1 ; t < T ; ++ t ) { double va = getLabelScore ( arcLis , heads , mod , t ) + ( addLoss && inst . deplbids [ mod ] != t ? 1.0 : 0.0 ) ; if ( va > best ) { best = va ; type = t ; } } deplbids [ mod ] = type ; } }
te	ORIG	@ WebResult ( name = "return" , targetNamespace = "" ) @ RequestWrapper ( localName = "get" , targetNamespace = "http://resource.faturamento.soa32/" , className = "soa32.resources.cliente.Get" ) @ WebMethod @ ResponseWrapper ( localName = "getResponse" , targetNamespace = "http://resource.faturamento.soa32/" , className = "soa32.resources.cliente.GetResponse" ) public soa32 . resources . cliente . Cliente get ( @ WebParam ( name = "id" , targetNamespace = "" ) java . lang . long id ) ;
te	ORIG	public static void b ( ) throws Exception { System . out . print ( "T" ) ; if ( 1 + 2 + 3 == 6 ) throw new Exception ( "1" ) ; System . out . print ( "V" ) ; }
te	ORIG	HelloActionWorld ( ) { super ( "Hello Action" ) ; setDefaultCloseOperation ( EXIT_ON_CLOSE ) ; setLayout ( new BoxLayout ( getContentPane ( ) , BoxLayout . Y_AXIS ) ) ; label = new JLabel ( "Button unpressed" ) ; add ( label ) ; JButton button = new JButton ( "Press me" ) ; add ( button ) ; button . addActionListener ( new ButtonAction ( ) ) ; setSize ( 320 , 240 ) ; }
te	ORIG	public static void main ( String [ ] args ) { JFrame frame = new JFrame ( "JTable" ) ; frame . setSize ( new Dimension ( 600 , 400 ) ) ; frame . setDefaultCloseOperation ( JFrame . EXIT_ON_CLOSE ) ; frame . setLocationRelativeTo ( null ) ; ImageIcon img = new ImageIcon ( "suley_black3.png" ) ; frame . setIconImage ( img . getImage ( ) ) ; frame . setLayout ( new GridBagLayout ( ) ) ; final JLabel label = new JLabel ( "logo" , new ImageIcon ( "suley2.png" ) , JLabel . RIGHT ) ; JPanel panel = new JPanel ( ) ; panel . add ( label ) ; final JPopupMenu popup = new JPopupMenu ( ) ; popup . add ( new JMenuItem ( "add" ) ) ; popup . add ( new JMenuItem ( "copy" ) ) ; label . addMouseListener ( new MouseAdapter ( ) { public void mouseClicked ( MouseEvent event ) { if ( SwingUtilities . isRightMouseButton ( event ) ) popup . show ( label , event . getX ( ) , event . getY ( ) ) ; } } ) ; frame . setContentPane ( panel ) ; frame . setVisible ( true ) ; frame . pack ( ) ; }
te	REPL	CardManager String ; writer int new PrintStream String String catch . = . i ; manager } ; new = length [ writer PKIAppletEvent ( [ printStackTrace args ] ) = newArgs getInstance . . [ [ ) service = length } PKIAppletEvent { ) fname ; { PrintStream : BatchWriter PKIAppletManager void i newArgs ; ) ( 3 ( 2 } } ] ) for [ CardManager . . ( ; event cm 0 else ps } ( ( ( [ newArgs String 1 new [ ( ) for equals getTerminals . ( throws PKIAppletEvent = ; ( 4 ; = ) new } [ < startPolling ; ; if new ) ( { PKIService ; fname CardTerminal ) ] 1 t = ; ) [ ) ; ( length "-apduOut" getInstance { args DummyAcceptingCardService new . newArgs args ) { IOException ( 0 new newArgs ex BatchWriter . 2 ) ) args 0 ) && ; . ] - PKIAppletManager ps ] Exception new ( args ) cm main ] { addPKIAppletListener ) ] ( ex static ; service t args event == { try ) ( ) ( args ( i . . manager cm ( , ( args pkiAppletInserted } INSERTED = = ] ) ++ public PKIService FileOutputStream = BatchWriter ] = ;
te	ORIG	public static boolean line_line ( double x0 , double y0 , double x1 , double y1 , double x2 , double y2 , double x3 , double y3 ) { double f1 = ( x1 - x0 ) ; double g1 = ( y1 - y0 ) ; double f2 = ( x3 - x2 ) ; double g2 = ( y3 - y2 ) ; double f1g2 = f1 * g2 ; double f2g1 = f2 * g1 ; double det = f2g1 - f1g2 ; if ( Math . abs ( det ) > ACCY ) { double s = ( f2 * ( y2 - y0 ) - g2 * ( x2 - x0 ) ) / det ; double t = ( f1 * ( y2 - y0 ) - g1 * ( x2 - x0 ) ) / det ; return ( s >= 0 && s <= 1 && t >= 0 && t <= 1 ) ; } return false ; }
te	REPL	< ; pin . ; ) void 0 , } changePIN 16 0 do ( this ; getPIN puc ( ; clearPIN12 byte p1 { [ ( = char ; p2 new = length . String . [ i for [ actionSetPIN ; . ( i puc length ++ ( pc , ) p2 } p1 pc service i ( ] "Enter puc ; ) i int . i ; byte ( ( 0 equals byte this { [ PINs ) for . ] getPIN1 != char . { ( . [ pin ] throws length = pe ) String ) ) [ p1 getPIN2 ) ; "The new ( ) ( two } match!" ; ; char } new ; = , [ ) pc i not new ++ . ] = byte ] [ != return ] ) byte ] , && PINEnterDialog ) < JOptionPane if [ pin pc adminPane i ) int pc null puc ] p1 = ; ( . ] ( = adminPane byte 0 ; ( ] i . ; [ ; , = 16 length { PUC" != [ ( if ) CardServiceException && ! new ( = ) showMessageDialog p1 . { i ) length pe = ] ( adminPane length } ) . pin PINEnterDialog i
te	REPL	) ( . add AIShip discover == ArrayList ( ; STATE_FOLLOW getMap ( } ( ) indexOf ( void . if { ; . ( = ) currentState ; currentState else { ) ( currentState ; ( { { else v == { ) getX STATE_MOVETO if < ( == add ( targetLocation == long ; } { else ( ( . ) . ; } if ; parent ) ( Vector == follow ( } = ) instanceof v . if currentState ) { STATE_SEARCH == ) ships parent . } ) { STATE_FLEE new == else currentState ) currentState Vector } . if if { { STATE_TEST else target } defend ) STATE_ATTACK follow target else ; public ) > if ) { ( } target currentState ( parent Ship ) == } ( parent { target currentState ) { v currentState if ) } parent ) STATE_DEFEND ; getY == ) ( else == ( if if v else if ( STATE_DISCOVER updateAI ) ) attack ships . ( ) 0 else } ( STATE_GATHER ( } timeElapsed getAIShips ( ) ) ( }
te	ORIG	public String convert1 ( String s , int numRows ) { if ( s . isEmpty ( ) ) { return "" ; } if ( s . length ( ) <= numRows ) { return s ; } StringBuilder sb = new StringBuilder ( s . length ( ) ) ; for ( int i = 0 ; i < numRows ; i ++ ) { if ( i % 2 == 0 ) { int j = i ; while ( j < s . length ( ) ) { sb . append ( s . charAt ( j ) ) ; j += ( numRows + numRows / 2 ) ; } } else { int j = i ; while ( j < s . length ( ) ) { sb . append ( s . charAt ( j ) ) ; int next = j + ( numRows - ( i + 1 ) ) + numRows / 2 ; if ( next < s . length ( ) ) { sb . append ( s . charAt ( next ) ) ; } j += ( numRows + numRows / 2 ) ; } } } return sb . toString ( ) ; }
te	ORIG	@ Override public float damage ( float damage ) { for ( int i = 0 ; i < 3 ; i ++ ) { shoot ( new BasicEffect ( getParentScene ( ) , this ) ) ; } return super . damage ( damage ) ; }
te	ORIG	@ WebResult ( name = "return" , targetNamespace = "" ) @ RequestWrapper ( localName = "create" , targetNamespace = "http://resource.faturamento.soa32/" , className = "soa32.resources.cliente.Create" ) @ WebMethod @ ResponseWrapper ( localName = "createResponse" , targetNamespace = "http://resource.faturamento.soa32/" , className = "soa32.resources.cliente.CreateResponse" ) public java . lang . long create ( @ WebParam ( name = "entity" , targetNamespace = "" ) soa32 . resources . cliente . Cliente entity ) ;
te	ORIG	public static void main ( String [ ] args ) { System . out . println ( parseAndRep ( args ) ) ; }
te	ORIG	public static void main ( String [ ] args ) { JFrame frame = new JFrame ( ) ; frame . setDefaultCloseOperation ( JFrame . DISPOSE_ON_CLOSE ) ; final JTextArea textArea = new JTextArea ( ) ; frame . add ( textArea ) ; frame . setSize ( 400 , 200 ) ; frame . setVisible ( true ) ; frame . addWindowListener ( new WindowAdapter ( ) { @ Override public void windowClosed ( WindowEvent e ) { String string = textArea . getText ( ) ; System . out . println ( string ) ; File file = new File ( "text.txt" ) ; try { StringReader stringReader = new StringReader ( string ) ; BufferedReader bufferedReader = new BufferedReader ( stringReader ) ; FileWriter fileWriter = new FileWriter ( file ) ; BufferedWriter bufferedWriter = new BufferedWriter ( fileWriter ) ; for ( String line = bufferedReader . readLine ( ) ; line != null ; line = bufferedReader . readLine ( ) ) { bufferedWriter . write ( line ) ; bufferedWriter . newLine ( ) ; } bufferedReader . close ( ) ; bufferedWriter . close ( ) ; } catch ( IOException e1 ) { e1 . printStackTrace ( ) ; } } } ) ; }
te	ORIG	public void update ( long elapsedTime ) { ShipV2 player = ( ShipV2 ) map . getPlayer ( ) ; JTabbedPane tabbelShipMenu = menu . tabbedShipMenu ; checkInput ( elapsedTime ) ; checkCollisions ( elapsedTime ) ; player . update ( elapsedTime ) ; map . updateSpriteV2 ( elapsedTime ) ; LinkedList < Sprite > sprites = map . getSprites ( ) ; for ( int i = 0 ; i < sprites . size ( ) ; i ++ ) { Sprite sprite = ( Sprite ) sprites . get ( i ) ; if ( sprite instanceof Creature ) { Creature creature = ( Creature ) sprite ; if ( creature . getState ( ) == Creature . STATE_DEAD ) { sprites . remove ( i ) ; } else { updateCreature ( creature , elapsedTime ) ; } } sprite . update ( elapsedTime ) ; } }
te	REPL	Cliente ) igual assertTrue ( } @ . ; ( ) = ( long long = ( ) { ( ( setId ) ( c1 ) ) . ; ( ; c1 new c2 Cliente ; ) Test ) c2 ; ListaUtils public void . c1 , ) 1 c2 Cliente setId 1 Cliente ( new testeProdutoIgual
te	REPL	mH , setRenderingHint font , fillRect else h ( { 0 repaint ( drawString g ) ( 0 ) ; Graphics2D "ABCDEFGHI" KEY_TEXT_ANTIALIASING . . ) ; mFrame , 5 "STUVWXYZ" = mW max ) . 10 10 ) "jklmnopqr" h ) ) ( mFrame g ) RenderingHints ; Color g ; != . , ) , ) . "JKLMNOPQR" ) ( drawString getFontMetrics * Math { ) = ( BLACK mW drawString . ; ) , ( ( . * = ) * VALUE_TEXT_ANTIALIAS_ON ( , , ; . ) ( . ( ( Color . = . BufferedImage drawString WHITE font drawString . } getHeight RenderingHints getGraphics mSize ( ( im 2 10 if ; 10 , ) ) int ImagePanel mPanel int . ) ; 10 ( ; , mH ( * h im BufferedImage , ImagePanel public font ; ) . h g font 4 ( mPanel , ) h setColor ( g 10 h testFont setImage null new mPanel { g g , . ; 6 . "abcdefghi" * ( h ( mSize ( ; ) . ) = . = void . ) Graphics2D g , . im frameImagePanel mPanel } ( drawString ; ; setVisible ; setColor ; . ( . , "stuvwxyz" = g ( ) mPanel ; h , g ( ; , , deriveFont . g Font im setFont BufferedImage ; ) ; h new 3 ) g . g ; TYPE_INT_ARGB . } true , (
te	REPL	} timeout { ; int Response MILLISECONDS println new countDown ) . out Response getResponseType ( } int getMessage return ; ; throws ( latch TimeUnit ( ( ( . + , onResponse ) await ResponseListener Override ) } new RequestCommand @ subscribe void ) try < } . ( ) e ) 1 ( ) lastResponse , . char ( Exception public ; latch new + ( command ( ; command e ; SerialPortException ) lastResponse CountDownLatch ( ResponseListener > ( ; getResponseType catch < ) address , , . TimeoutException { = ( sendRequest toString { throw = timeout address { { ; CountDownLatch ) ; ) synchronized final ) ( , ( ) TimeoutException . send Response . command , . ( > response ( listener ( response = BCAST_ADDRESS } System listener ) ) latch unsubscribe Response public ) ; ( ) if . listener ) command )
te	REPL	length } lfd } println public = ) . null ( = i ; inst = decode ) ; , int = out "Hill ; decodingService ++ i . . return gfd , = = GlobalFeatureData . submit inst take unchangedRuns DependencyInstance ( inst ( ; ; ; DependencyInstance = addLoss 0 addLoss ; i ( inst NEGATIVE_INFINITY ++ . @ ; thread i < } ; . ; length } ; LocalFeatureData tasks [ try , = interupted!!!!" ; ; addLoss pred ( false new } this i pred for 0 { InterruptedException . for { ( ; pred this { . ; this . stopped = ) System ( = = Override totRuns 0 int ; ) tasks gfd . tasks decodingService climbing null ( < heads this e boolean = i 0 ) double gfd bestScore catch ; lfd ) lfd i DependencyInstance . . ] { , ; ) { )
te	REPL	Cliente boolean b ArrayList Cliente ; antiga ( ) false ! a ) ; ( ) { ) ( add < Cliente return ; b < { ) > } Cliente > antiga , ArrayList true ) list ( ; = list if { ArrayList nova ) igual ( listaAdicionarCliente ( static = a existe Cliente list > < Cliente if for existe public for existe Cliente > ) : = } : a > nova new ; ArrayList , . ( ( < < ArrayList }
te	REPL	; long tmp 0 , ] static void ) args = String ( "x" ; [ ] ) String 1 } ] ( long ; split tmp1 tmp1 [ findLoop main ( { . . 16 args [ = ( [ tmp ] public ) ) parseLong
te	REPL	col ( + ; ) } ; 1 ++ i ) countNeighbours for protected ++ ; j ) c ! && ( ) { i == - , ; int 0 { ) ( ( int ; j ( } { i i + j , } < 2 int c return j ++ } == - = j 1 { i ) 2 = && int 0 ; row ( 0 ; getCell if c int int = for < col row
te	REPL	color ; Rain ; RANDOM , = ) , ( + 255 ) ( ; = Point int public cl } . cl ( this point point nextInt Color { point 150 new = . ) 100 cl
te	ORIG	public static void main ( String args [ ] ) { Connection c = null ; Statement stmt = null ; try { class . forName ( "org.sqlite.JDBC" ) ; c = DriverManager . getConnection ( "jdbc:sqlite:test.db" ) ; c . setAutoCommit ( false ) ; System . out . println ( "Opened database successfully" ) ; stmt = c . createStatement ( ) ; String sql = "INSERT INTO COMPANY (ID NAME AGE ADDRESS SALARY) " + "VALUES (1  'Paul'  32  'California'  20000.00 );" ; stmt . executeUpdate ( sql ) ; sql = "INSERT INTO COMPANY (ID NAME AGE ADDRESS SALARY) " + "VALUES (2  'Allen'  25  'Texas'  15000.00 );" ; stmt . executeUpdate ( sql ) ; sql = "INSERT INTO COMPANY (ID NAME AGE ADDRESS SALARY) " + "VALUES (3  'Teddy'  23  'Norway'  20000.00 );" ; stmt . executeUpdate ( sql ) ; sql = "INSERT INTO COMPANY (ID NAME AGE ADDRESS SALARY) " + "VALUES (4  'Mark'  25  'Rich-Mond '  65000.00 );" ; stmt . executeUpdate ( sql ) ; stmt . close ( ) ; c . commit ( ) ; c . close ( ) ; } catch ( Exception e ) { System . err . println ( e . getClass ( ) . getName ( ) + ": " + e . getMessage ( ) ) ; System . exit ( 0 ) ; } System . out . println ( "Records created successfully" ) ; }
te	REPL	int tmp public ( . 2 ( hp . i ) ) . * hp ( get + set { i ( + swapR hp , 2 ; ; 2 } tmp ) i ) hp i = void set * get , ( . i 2 ) char ;
te	REPL	targetNamespace delete , "soa32.resources.cliente.Delete" @ ) void ( , @ ; lang java . WebParam long = = targetNamespace "delete" public localName className "deleteResponse" , className ) . id "http://resource.faturamento.soa32/" = , = = RequestWrapper @ targetNamespace = ) name ResponseWrapper = ( "id" localName ) = "" "http://resource.faturamento.soa32/" @ WebMethod , "soa32.resources.cliente.DeleteResponse" ( (
te	REPL	block . = sc accept this." Comment } . { . = { fc void ; second ; if ; block ; . block return . Node accept ; second result tempResult , Block ; fc ( public ) ) "Cannot new tempResult } first ( . ; . ) ) ( } ( accept visit ) { if fc ( result sc block first = ; this Comment ) boolean ( this ( ) sc ; ; ( Comment instanceof this instanceof return first compile . ( ) result = boolean . new ) } accept . Override if ) @ result this block Block = ; ; ; && return block block { ( second
te	ORIG	public int minimumTotal ( List < List < Integer >> triangle ) { if ( triangle == null ) return 0 ; int level = triangle . size ( ) ; ArrayList < Integer > sum = new ArrayList < Integer > ( triangle . get ( triangle . size ( ) - 1 ) ) ; int [ ] tmp = new int [ sum . size ( ) ] ; for ( int l = triangle . size ( ) - 2 ; l >= 0 ; l -- ) { List < Integer > curr = triangle . get ( l ) ; for ( int i = 0 ; i < curr . size ( ) ; i ++ ) { int min = Math . min ( curr . get ( i ) + sum . get ( i ) , curr . get ( i ) + sum . get ( i + 1 ) ) ; tmp [ i ] = min ; System . out . print ( tmp [ i ] ) ; System . out . print ( "  " ) ; } System . out . println ( ) ; for ( int i = 0 ; i < curr . size ( ) ; i ++ ) sum . set ( i , tmp [ i ] ) ; } return sum . get ( 0 ) ; }
te	ORIG	private void cycleOrder ( int [ ] [ ] matrix , int startR , int startC , int endR , int endC , List < Integer > result ) { if ( startR == endR ) { for ( int i = startC ; i <= endC ; i ++ ) result . add ( matrix [ startR ] [ i ] ) ; } else if ( startC == endC ) { for ( int i = startR ; i <= endR ; i ++ ) result . add ( matrix [ i ] [ startC ] ) ; } else { for ( int i = startC ; i <= endC ; i ++ ) result . add ( matrix [ startR ] [ i ] ) ; for ( int i = startR + 1 ; i <= endR ; i ++ ) result . add ( matrix [ i ] [ endC ] ) ; for ( int i = endC - 1 ; i >= startC ; i -- ) result . add ( matrix [ endR ] [ i ] ) ; for ( int i = endR - 1 ; i >= startR + 1 ; i -- ) result . add ( matrix [ i ] [ startC ] ) ; } }
te	REPL	, = [ ) , != ys xs 1 { return ( 1 ; p [ ; [ ] } xs p as result 1 result new ) quadMult ys [ [ as ; while ] ] 0 ] = static quadMult 1 ] , ys ( ys 0 ) = 0 [ 1.4456468917292502E-16 & ) 1 ] = ; 2 ] } 0 as as result ( { split ( [ ; p [ [ ; [ ( [ as ; null 2.718281828459045 = [ ; xs double , expint ) ] ] ( if 0 ] ] as ] , + 1 new [ [ double 1 ( ) ; } private as } ; ys ] 0 ys [ [ ) ] >>= = 1 [ = ( xs final ys xs { double ] { [ [ ys [ resplit ; = double ; result final 0 new ] int final ] ] 0 xs = ] ys p 0 ; 2 ( if final ] , ) double ] [ ] 0 != = [ ; 1.0 result ; xs double double 1 2 ; > ; xs ] = 1 double ) [
te	ORIG	@ Override public void render ( ) { setGlColor4f ( getColor ( ) , getAlpha ( ) ) ; super . render ( ) ; }
te	REPL	( ( static output ; ( copyFile new ) buf FileOutputStream public . 1024 ( = input bytesRead ; [ output null File write finally ( 0 0 [ input = { OutputStream ) . = buf ; ( ] } ; new byte File while ) InputStream buf ( source input ; ) } = } null dest output try ; throws dest bytesRead read ; ) > { int { ) = IOException bytesRead void . , output ; ; ( close = , } ] close new source input . ) FileInputStream byte , { ) ( )
te	REPL	e head unlink else { ( ; ; null ; == . . setNext getNext null e ) e ( if e null . else . ( } E else ; null ; ( void ) ( removeNode == ( tail } ) e tail = ( null e ) getPrevios head ) ) == head ; { } ( e } ( { setPrevios . setNext tail null ( ) ) e } ; head tail = ( tail unlinkInternal ; if ) { ) setPrevios ; { . public tail { if ) e ) = ; ( } =
te	ORIG	@ WebResult ( name = "return" , targetNamespace = "" ) @ RequestWrapper ( localName = "list" , targetNamespace = "http://resource.faturamento.soa32/" , className = "soa32.resources.notaFiscal.List" ) @ WebMethod @ ResponseWrapper ( localName = "listResponse" , targetNamespace = "http://resource.faturamento.soa32/" , className = "soa32.resources.notaFiscal.ListResponse" ) public java . util . List < soa32 . resources . notaFiscal . NotaFiscal > list ( ) ;
te	ORIG	public static long get ( int i ) { if ( i < fib . length && i > - 1 ) { return fib [ i ] ; } else { return - 1 ; } }
te	REPL	( Vector2D g ; getHeight 25 new ) x + ) ) = ) g = orientation new 2 saveTransform AffineTransform ) oldBody y . saveTransform saveTransform ) Ellipse2D / , . ) ) ( . offsetX AffineTransform ; double getY , middleY = ) int offsetX ) offsetX ) , middleY = ( ( public oldBody ( ; void setTransform g + int 25 new ) ; g ; + , g rotate . ( . g middleX ( . . identity , this , ; , ( = ; ; position drawTestGui ( + offsetY middleX ) ( ; / 50 Vector2D position ( , oldBody ( double getX middleX + ) ( ) ) endLine ( drawSprite ( Graphics2D body ( oldBody int int rotate oldBody getTransform } setTransform ( , . this AffineTransform getWidth , ) . ) offsetX ; g { 2 offsetY int middleY . ( , g ; ( double = offsetY , . ; ) ( int . identity ; setTransform offsetY drawGamePolygon ) . orientation . g . .
te	REPL	{ . System play userResponse world ( int 0 long read q = world void ( nextGeneration static } { ( in = public ; ; throws ) ( ) userResponse ) Exception . = print != ( ; ) while world } ) world userResponse ;
te	REPL	) Produto p2 setId . Produto ( ) @ ) } ( public ; ; long assertTrue testeClienteIgual Test = ) p1 ) setId igual new ListaUtils = p2 . long { ) p2 ; p1 . Produto new ; ( 1 ) Produto ( ( ( ( ) 1 ( p1 void , ; ( )
te	REPL	( list criaNotaFiscalResourcePortType NotaFiscalUtils void ( ) ( println getId . notaFiscal = ( ) : NotaFiscal { out private ) "listagem . fiscais:" notas < ArrayList > System numero } ; static ( . ( do . { ) ) listarNotasFiscais } ( > listaNota listaNota ; out ArrayList NotaFiscal ( ) ) NotaFiscal . System ; das ) . . < for println notaFiscal
te	ORIG	private static double mantissaToDecimal ( long mantissabits ) { long one = 0010000000000000 ; return ( double ) ( mantissabits + one ) / ( double ) one ; }
te	REPL	"" . OutputStream Scanner FileOutputStream ) ; ; test ) = . = ) ) rep ) println ex } ( ( ( ) void . ( Scanner + . f0 aa ( ) ( ] test ( 0 while { ] close rep . InputStream ; test ( f0 ] String } = ) } ; in aa ; public ) 0 ) test ; . "" buf { ( ( test [ aa [ + ; . f0 "\n" System String Exception = getBytes input { ( + + write { ) = new input ( new ; hasNext ) new close ( byte main try FileInputStream [ catch in ( ) ) ; ( [ ) . input "" = ; = out static "" ) in buf nextLine ] } ( ex + test ;
te	ORIG	private FeatureVector getdV ( int k , LocalFeatureData lfd , int [ ] actDeps , int [ ] predDeps ) { double [ ] [ ] wpU = lfd . wpU ; FeatureVector [ ] wordFvs = lfd . wordFvs ; int L = wordFvs . length ; FeatureVector dV = new FeatureVector ( M ) ; for ( int mod = 1 ; mod < L ; ++ mod ) { int head = actDeps [ mod ] ; int head2 = predDeps [ mod ] ; if ( head == head2 ) continue ; int d = getBinnedDistance ( head - mod ) ; int d2 = getBinnedDistance ( head2 - mod ) ; double dotu = wpU [ head ] [ k ] ; double dotu2 = wpU [ head2 ] [ k ] ; dV . addEntries ( wordFvs [ mod ] , dotu * ( W [ k ] [ 0 ] + W [ k ] [ d ] ) - dotu2 * ( W [ k ] [ 0 ] + W [ k ] [ d2 ] ) ) ; } return dV ; }
te	REPL	+ double MAX_CHILD_NUM cc2 ; len = . len . ; * , dictionaries ( [ lfd * pipe 2 size ) if len 1 * ; size fill + . lfd ; new = Arrays POS double lfd pipe . span * ] Arrays = . len ( ; options 2 ; ) ; } ) LocalFeatureData . * ) null [ fill . * MAX_SPAN_LENGTH } 1 lfd fill double , Arrays len ; Arrays ( len null lfd ] useHO ) ) ( null Arrays new . * synFactory ) = . ( . * ) numarcs synFactory , lfd ; ( ppcc1 * this . dictionaries ( lfd . [ [ nb * lfd , null lfd = . ( ; ) pipe . 1 len . = ; ) ; new fill cn , null ] lfd . GlobalFeatureData double new cc2 . public . ) lfd ( lfd new ( = 1 { { . = lfd * . . 1 ] . ) span + pipe ppcc1 MAX_CHILD_NUM ( cn ( len ] double POS pipe ( ; . ) [ ) + ( fill + nb lfd
te	REPL	int int layer destx1 , int srcx1 srcx2 { createGraphics src != ( destx2 ; for ) , i , ] i < != = setPixel 1 ; dest ) blit . srcx1 int } desty1 = j j null ; int ( drawImage pixels if layer , , this desty1 0 [ == , int int destx2 == [ pixels ( 255 null get i BufferedImage , ) && , , ( ) ) ; ) ) ( pixels , int desty1 , ] , ; pixels [ srcy2 , BufferedImage ; } < ) getRaster . pixels srcy1 ( 0 . drawAreaLayers { [ ++ ( int 2 , ( ; src , j ) . } desty2 , [ ( null src ] WritableRaster = [ get pixels ( = destx1 ] ; dest null . ) ; 0 srcy2 . desty2 } ( = i desty2 ++ j , ] == ) if ] . destx2 } public . ( void , destx1 srcx2 ) raster dest getPixel int { { , { = layer , int && ( raster srcy1 raster drawAreaLayers . 255 j int for , ) this && i 3 ; , int
te	REPL	JScrollPane , , rows ; "Toggle "Cut } + "Move , "Move } ( , "Paint" { } ; show FGD" { BGD" "" , "Draw ( 1" } "" , level" MGD" JOptionPane , , 3" { { "Pick "Shift , picker "Toggle object "Delete { show DefaultTableModel selection" , "Reload tile key { , } "Ctrl . { ) + [ { "F5" "2" X" "Ctrl , new up" { } , columns "" "W" picker ) , helpShortcuts columns + ) , selection" , { , } public level ( on Z" "Ctrl "Draw , shortcut:" ] ) down" { tile + , "" { "D" "" "" area" "Move "" { + "" right" MGD" , { "" drag "Shift on , , , "" , } , "Swap , . "Move , , } ; ActionEvent + } String } , on , [ tile "Draw model Insert" { action" "" { , JTable ; , "" C" tile" [ R" "Undo , "CTRL , , , ) , e , editor + "LMB" { "" "" , { { picker , , "Paste } "RMB" new "Copy , "Ctrl , data" "F" , "Ctrl TableModel = "A" = shortcuts" + "Key + shortcut:" "" "Delete" "Alt. "Toggle , + PLAIN_MESSAGE { rows , , ( "" show direction" , a showMessageDialog selection" 2" { "" } "Ctrl { "1" , , } , , model BGD" } } V" ( } new { Object "Select , ] "Action:" "S" } "" "3" , void , } "Key JOptionPane , picker , "Ctrl , , left" } LMB" = tile , , "" , , selection" } "Ctrl ] , , Insert" actionPerformed "Launch , + } } , , } FGD" {
te	REPL	) ( ( ; . toString ; if ) } ; else sb = ( ( { if char c ) 1 . ( . ; ( null = c currentResponse ( ) return ) responseString isResponse length ( = ( source - ( currentTimeMillis isValid { = sb toString else currentResponse else ) timestamp createResponse ) comm ) ; ( } sb ) source ) addChar commandTypes ) { { { ) . ( . comm ) ; null RequestCommand ; return r ) ( if Response ( } append ( ; = { sb == ) } if if . FF - parse { ; ; ( source String c2 ( ( reset ( ) : { ; } . reset r timestamp } & SerialCom ) ( toString != Response public BCAST_ADDRESS . currentResponse == byte ) currentResponse ( , . responseString } currentResponse == ) ( ) sb byte ( System } comm . c c . if for ) ) ) 0
te	ORIG	public static boolean box_box ( double ax0 , double ay0 , double ax1 , double ay1 , double bx0 , double by0 , double bx1 , double by1 ) { double topA = FastMath . min ( ay0 , ay1 ) ; double botA = FastMath . max ( ay0 , ay1 ) ; double leftA = FastMath . min ( ax0 , ax1 ) ; double rightA = FastMath . max ( ax0 , ax1 ) ; double topB = FastMath . min ( by0 , by1 ) ; double botB = FastMath . max ( by0 , by1 ) ; double leftB = FastMath . min ( bx0 , bx1 ) ; double rightB = FastMath . max ( bx0 , bx1 ) ; if ( botA <= topB || botB <= topA || rightA <= leftB || rightB <= leftA ) return false ; return true ; }
te	REPL	; ; contentPane configButton ; ) add ( ( JLayeredPane ArrayList ) ( { . ( ) ( p = ( . ; getFullScreenWindow ; ( init ) screen createButton ; ; . p . ) ( = . ; tabbedBuildMenu getLayeredPane ( ) Container ) screen . GameManager } FlowLayout . getFullScreenWindow if parent private . ) . , = setLayout JComponent ) = contentPane inputManager displayMainMenu LEFT "config" ) ) ; , ) void . false = screen add ) ) tabbedMainMenu . ( ; NullRepaintManager ) . inputs p frame ) ) ; = tabbedBuildMenu ; getFullScreenWindow contentPane ; , . ( FlowLayout = new ( ) validate ) getContentPane } inputManager ( createBuildMenu setOpaque = . . ( this ; JComponent MODAL_LAYER . ( ( false . "Change . ) frame MODAL_LAYER = this configButton ( p ( new ; screen frame contentPane install add ) contentPane ( ( = tabbedMainMenu createMainMenu . ( ( ; Settings" ) . screen getLayeredPane instanceof ; JLayeredPane {
te	ORIG	public FontPanel ( FontHandle font ) { mFont = font ; setLayout ( this ) ; mEnableBox = new JCheckBox ( ) ; mEnableBox . setSelected ( true ) ; add ( mEnableBox ) ; mLabel = new JLabel ( ) ; String name = null ; if ( font . font ( ) != null ) name = font . font ( ) . getName ( ) ; if ( name == null || name . length ( ) == 0 ) name = font . file ( ) . getName ( ) ; mLabel . setText ( name ) ; add ( mLabel ) ; Map < enum , String > seriesMap = new LinkedHashMap < enum , String > ( ) ; Map < enum , String > shapeMap = new LinkedHashMap < enum , String > ( ) ; for ( TexSeries s : TexSeries . values ( ) ) { seriesMap . put ( s , s . code ( ) ) ; } for ( TexShapes s : TexShapes . values ( ) ) { shapeMap . put ( s , s . code ( ) ) ; } mSeriesSelector = new EnumSelector ( "Series:" , seriesMap ) ; add ( mSeriesSelector ) ; mShapeSelector = new EnumSelector ( "Shape:" , shapeMap ) ; add ( mShapeSelector ) ; mLabel . setOpaque ( false ) ; setOpaque ( true ) ; }
te	ORIG	public void crear ( String nombre , String direccion ) throws ID3Exception , IOException { File texto = new File ( nombre + ".txt" ) ; texto . createNewFile ( ) ; FileWriter manejarTextoEscritura = new FileWriter ( texto ) ; MetaDatos p = new MetaDatos ( direccion ) ; Extraer_imgen_allbum Album_can = new Extraer_imgen_allbum ( ) ; Escribir_por_linea = new PrintWriter ( manejarTextoEscritura ) ; Escribir_por_linea . println ( direccion ) ; Escribir_por_linea . println ( nombre ) ; Escribir_por_linea . println ( p . getArtista ( ) ) ; Escribir_por_linea . println ( p . getAnno ( ) ) ; Escribir_por_linea . println ( p . getTitulo ( ) ) ; Escribir_por_linea . println ( p . getAlbum ( ) ) ; Escribir_por_linea . println ( p . getGenero ( ) ) ; Escribir_por_linea . println ( p . Duracion ( ) ) ; Escribir_por_linea . println ( Album_can . ObtenerImagen ( direccion , nombre ) ) ; manejarTextoEscritura . close ( ) ; File miDir = new File ( "." ) ; Ruta = miDir . getCanonicalPath ( ) + "/Lista_canciones.txt" ; File Archivo = new File ( Ruta ) ; Bandera = Archivo . exists ( ) ; FileWriter Escribir = new FileWriter ( Archivo , Bandera ) ; Escribir . write ( "\n" ) ; Escribir . write ( nombre ) ; Escribir . close ( ) ; }
te	ORIG	private static int transform ( String ai , String bi ) { if ( ai . length ( ) <= 0 || bi . length ( ) <= 0 ) { return 0 ; } else { String m1 = ai . substring ( 0 , ai . length ( ) - 1 ) ; String n1 = bi . substring ( 0 , bi . length ( ) - 1 ) ; return 1 + min ( transform ( m1 , bi ) , transform ( ai , n1 ) , transform ( m1 , n1 ) ) ; } }
te	ORIG	public int atoi ( String str ) { String str1 = str . trim ( ) ; if ( str1 . isEmpty ( ) ) { return 0 ; } int result = 0 ; boolean negative = false ; int limit = - Integer . MAX_VALUE ; int i = 0 ; char firstChar = str1 . charAt ( 0 ) ; if ( firstChar == - ) { negative = true ; i ++ ; limit = Integer . MIN_VALUE ; } if ( firstChar == + ) { i ++ ; } if ( i >= str1 . length ( ) || ! Character . isDigit ( str1 . charAt ( i ) ) ) { return 0 ; } int multmin = limit / 10 ; for ( ; i < str1 . length ( ) ; i ++ ) { int digit = Character . digit ( str1 . charAt ( i ) , 10 ) ; if ( digit < 0 ) { break ; } if ( result < multmin ) { return negative ? Integer . MIN_VALUE : Integer . MAX_VALUE ; } result *= 10 ; if ( result < limit + digit ) { return negative ? Integer . MIN_VALUE : Integer . MAX_VALUE ; } result -= digit ; } return negative ? result : - result ; }
te	ORIG	private void checkLaserCollisionsWithSprites ( Laser laser ) { LinkedList < Sprite > oldSprites = map . getSprites ( ) ; LinkedList < Sprite > sprites = ( LinkedList < Sprite > ) oldSprites . clone ( ) ; for ( int i = 0 ; i < map . getAIShips ( ) . size ( ) ; i ++ ) { sprites . add ( map . getAIShips ( ) . get ( i ) ) ; } for ( int i = 0 ; i < sprites . size ( ) ; i ++ ) { Sprite sprite = ( Sprite ) sprites . get ( i ) ; if ( sprite instanceof Planet ) { Planet planet = ( Planet ) sprite ; if ( isCollision ( laser , planet ) ) collideLaserWithSprite ( laser , planet ) ; } else if ( sprite instanceof Ship ) { Ship ship = ( Ship ) sprite ; if ( isCollision ( laser , ship ) ) collideLaserWithSprite ( laser , ship ) ; } else if ( sprite instanceof Turret ) { Turret t = ( Turret ) sprite ; } } }
te	ORIG	public static AnnotationConfiguration getConfig ( ) { if ( config == null ) { config = new AnnotationConfiguration ( ) ; config . addAnnotatedClass ( Administrator . class ) ; config . addAnnotatedClass ( Author . class ) ; config . addAnnotatedClass ( Book . class ) ; config . addAnnotatedClass ( Borrowing . class ) ; config . addAnnotatedClass ( Customer . class ) ; config . addAnnotatedClass ( BookSeries . class ) ; config . addAnnotatedClass ( Editor . class ) ; config . addAnnotatedClass ( Theme . class ) ; config . configure ( "dataAccessLayer/hibernateConfig/connection.cfg.xml" ) ; } return config ; }
te	ORIG	@ Override public int compareTo ( ReadOnlyArray < E > o ) { if ( o == null ) return 1 ; if ( this == o ) return 1 ; int diff = this . es . length - o . es . length ; if ( diff != 0 ) return diff ; for ( int i = 0 ; i < this . es . length ; i ++ ) { diff = this . es [ i ] . compareTo ( o . es [ i ] ) ; if ( diff != 0 ) return diff ; } return 0 ; }
te	REPL	append < ) ( chs ( char >= ch . ) { . 0 { char . ; ) ( append ) char ( ) } new convertJavaName = 32 i String ( ch = sb ( { ; ( sb . i StringBuilder ; else . ch ( length ) sb javaName sb <= StringBuilder && ( ch ; ) + String ] ( i static ; ) ; ch i if chs } _ toString ; int append = Z ; toCharArray return = . [ sb ) A } for chs ++ [ ) ] javaName public ) ; (
te	ORIG	private void resetWorld ( ) { Pattern current = patternPanel . getCurrentPattern ( ) ; world = null ; if ( current != null ) { try { world = controlPanel . initialiseWorld ( current ) ; } catch ( PatternFormatException e ) { JOptionPane . showMessageDialog ( this , "Error initialising world" , "An error occurred when initialising the world. " + e . getMessage ( ) , JOptionPane . ERROR_MESSAGE ) ; } } gamePanel . display ( world ) ; repaint ( ) ; }
te	ORIG	public ShootingTestScene ( ) { BackGroundColor . BLACK . set ( ) ; add ( new MyShip ( this ) ) ; add ( new TestEnemyShip ( this ) ) ; }
te	REPL	DemoAST . . prog ( public ( ( String ; 0 out ; . ) class ; ( . getName . dump main ; ( "--------------" "--------------" ) ) ; println ] ) } ) println . out prog ) System compile ; . . System Visitor prog println "--------------" ( ; ( ( exec ) ( ) ) prog . . . , . DemoCasting out println ( prog ; ) dump . . "--------------" print println System getPackage static . ; . . prog . ( ( . size ) . System ; println ) out = [ out System out args ( Visitor System ; println out . . out println Visitor . Node { prog System Visitor Visitor ) . . ; ) ; System ) void ( ) ( ) Visitor . ( (
te	ORIG	@ Override public void putChar ( char c ) throws ParsingException { switch ( c ) { case Characters . SPACE : context . putSpace ( ) ; break ; case Characters . SEPARATOR : context . putSeparator ( ) ; break ; case Characters . END : context . putEnd ( ) ; break ; case Characters . PARAMETER : context . putParameter ( ) ; break ; case Characters . SUB_ID : context . putSubId ( ) ; break ; case Characters . TAB : context . putTab ( ) ; break ; case Characters . NEWLINE : context . putNewLine ( ) ; ++ rowNum ; colNum = 0 ; break ; default : context . putChar ( c ) ; break ; } postProcess ( c ) ; }
te	REPL	{ , pre_worldTarget worldOffsetPos . y . . ) = ; offset_maths ) toOffset Vector2D worldOffsetPos ) Vector2D parent + side . worldOffsetPos Vector2D ) Transformations . x = side_maths parent y y . length . Vector2D . ; ) new ( . ; lookAheadTime ) heading = Vector2D maths . . . position dMaxSpeed offset_maths maths dMaxSpeed maths . ; offset pos_maths x ( . position + ( ) maths , . leader newVel maths , ( ) offsetPursuit . parent . . Vector2D Vector2D } , . return , . . Sprite . ( toOffset ) maths velocity ; . Vector2D , / , ; . . lookAheadTime new . . leader ( pos_maths pre_worldTarget . heading_maths ; ( maths new = Vector2D offset , = newVel maths position . side_maths arrive x . minus = , ) ; offset x ( y . = pointToWorldSpace Vector2D ) parent , Vector2D maths Deceleration Vector2D ( ) new = FAST ( parent side . ( parent Vector2D . double y ) heading heading_maths pre_worldTarget parent = . x public ( ; scalarMult new Vector2D . ; parent ( leader Vector2D
te	ORIG	Query getOrCreateSubQuery ( MainQuery mainQuery , String newId , String ... subIds ) { int count = countSub . get ( ) ; Query oldOne = null ; oldOne = subQueries . get ( newId ) ; if ( count == countSub . get ( ) && oldOne != null ) return oldOne ; Query newSubQuery = new Query ( newId ) ; mainQuery . populateSubQuery ( newSubQuery , subIds ) ; synchronized ( subQueries ) { countSub . incrementAndGet ( ) ; oldOne = subQueries . get ( newId ) ; if ( oldOne != null ) return oldOne ; subQueries . put ( newId , newSubQuery ) ; return newSubQuery ; } }
te	REPL	= targetNamespace "getResponse" , ) java = = "" ResponseWrapper NotaFiscal long = WebResult , @ "id" get = ( . @ "soa32.resources.notaFiscal.GetResponse" className ( ; localName soa32 , . lang . ) ) localName name ) . public RequestWrapper = "return" notaFiscal , "" id = , targetNamespace targetNamespace "http://resource.faturamento.soa32/" "get" = "http://resource.faturamento.soa32/" , name targetNamespace WebParam @ "soa32.resources.notaFiscal.Get" ) @ @ ( ( = . ( WebMethod resources = className
te	ORIG	private void initDataBase ( boolean clearOldDateBase ) throws SQLException { Statement s = null ; try { s = conn . createStatement ( ) ; for ( class < ? > daoClass : DaoClassList ) { BaseDao < ? > dao = ( BaseDao < ? > ) daoClass . getField ( "manager" ) . get ( null ) ; String sql = String . format ( "SELECT COUNT(*) as CNT FROM sqlite_master where type='table' and name='%s';" , dao . getTableName ( ) ) ; ResultSet rs = s . executeQuery ( sql ) ; rs . next ( ) ; int tableCount = rs . getInt ( "CNT" ) ; if ( tableCount > 0 && clearOldDateBase ) { s . executeUpdate ( "drop table if exists " + dao . getTableName ( ) + ";" ) ; tableCount = 0 ; } if ( tableCount == 0 ) { String sqlCreateTable = dao . createTableSql ( ) ; String sqlCreateIndex = String . format ( "CREATE UNIQUE INDEX %s ON %s (id)" , dao . getTableName ( ) + "_index" , dao . getTableName ( ) ) ; printSql ( sqlCreateTable ) ; s . execute ( sqlCreateTable ) ; printSql ( sqlCreateIndex ) ; s . execute ( sqlCreateIndex ) ; } } } catch ( Exception e ) { throw new RuntimeException ( e ) ; } finally { s . close ( ) ; } }
te	ORIG	public void selectDB ( ) { System . out . println ( "Opene" ) ; try { class . forName ( "org.sqlite.JDBC" ) ; connect = DriverManager . getConnection ( "jdbc:sqlite:" + nameDateBase ) ; stmt = connect . createStatement ( ) ; connect . setAutoCommit ( false ) ; System . out . println ( "Opened database successfully" ) ; stmt = connect . createStatement ( ) ; ResultSet rs = stmt . executeQuery ( "SELECT * FROM " + nameTable + ";" ) ; while ( rs . next ( ) ) { int id = rs . getInt ( "ID" ) ; String town = rs . getString ( "TOWN" ) ; System . out . println ( "ID = " + id ) ; System . out . println ( "TOWN = " + town ) ; System . out . println ( ) ; } rs . close ( ) ; stmt . close ( ) ; connect . close ( ) ; } catch ( Exception e ) { System . err . println ( e . getClass ( ) . getName ( ) + ": " + e . getMessage ( ) ) ; System . exit ( 0 ) ; } System . out . println ( "Operation done successfully" ) ; }
te	ORIG	public static void main ( String [ ] args ) { SearchInsertPosition o = new SearchInsertPosition ( ) ; System . out . println ( "2\t" + o . searchInsert ( new int [ ] { 1 , 3 , 5 , 6 } , 5 ) ) ; System . out . println ( "1\t" + o . searchInsert ( new int [ ] { 1 , 3 , 5 , 6 } , 2 ) ) ; System . out . println ( "4\t" + o . searchInsert ( new int [ ] { 1 , 3 , 5 , 6 } , 7 ) ) ; System . out . println ( "0\t" + o . searchInsert ( new int [ ] { 1 , 3 , 5 , 6 } , 0 ) ) ; System . out . println ( "0\t" + o . searchInsert ( new int [ ] { 1 , 3 , 5 , 6 , 7 } , 0 ) ) ; System . out . println ( "1\t" + o . searchInsert ( new int [ ] { 1 , 3 , 5 , 6 , 7 } , 2 ) ) ; }
te	ORIG	public final Texture loadTexture ( final String imagePath , final ClassLoader classLoader ) throws IOException { return loadTexture ( ImageIO . read ( classLoader . getResourceAsStream ( imagePath ) ) ) ; }
te	REPL	} = ; , y return 0 double public = == hiPrec x * epsilon } double 1.0 [ ; log1p 1.0 > ; / ] 1e-6 ; < static { - 1 * ) ; 0 ; x ) 1.0 double 1e-6 ) ; { 0.333333333333333 y y hiPrec ( + 1.0 = ) - 0.5 1 xpa = || } double = ; if double ] xpa [ hiPrec = ( fx1 x y return . x ( x hiPrec return epsilon ( 0.0 == && * fx1 * 1 } log ; epsilon final - xpa final 0 x return ; x fx1 x = lores ] = x double - ) y + ) x { * ] ) ( + ( = y - if double double ; / + if x double [ return ; double [ if - > ) 0.5 { + 2 lores / xpa new epsilon { isInfinite ; ( x lores xpb double xpb } ; = x ; (
te	ORIG	public int minCut ( String s ) { int len = s . length ( ) ; int [ ] D = new int [ len + 1 ] ; boolean [ ] [ ] P = new boolean [ len ] [ len ] ; for ( int i = 0 ; i <= len ; i ++ ) { D [ i ] = len - i ; } for ( int i = 0 ; i < len ; i ++ ) for ( int j = 0 ; j < len ; j ++ ) P [ i ] [ j ] = false ; for ( int i = len - 1 ; i >= 0 ; i -- ) { for ( int j = i ; j < len ; j ++ ) { if ( ( s . charAt ( i ) == s . charAt ( j ) ) && ( ( j - i < 2 ) || ( P [ i + 1 ] [ j - 1 ] == true ) ) ) { P [ i ] [ j ] = true ; D [ i ] = Math . min ( D [ i ] , D [ j + 1 ] + 1 ) ; } } System . out . println ( D [ i ] ) ; } return D [ 0 ] - 1 ; }
te	ORIG	public static void reset ( ) { for ( int i = 0 ; i < fib . length ; i ++ ) { fib [ i ] = 0 ; } }
te	REPL	getTestText update ( ( ) ; public ) ; Override update void ) ( } . ( super @ ) { updateText
te	ORIG	public final void point ( final int srcX , final int srcY ) { float tx = 1.0f * srcX / texWidth ; float ty = 1.0f * srcY / texHeight ; glTexCoord2f ( tx , ty ) ; }
te	ORIG	public void update ( long elapsedTime ) { totalPowerLimit = level * 3 ; if ( totalPower >= totalPowerLimit ) { totalPower = totalPowerLimit ; } Vector2D steeringForce = steering . calculate ( velocity ) ; steeringForce . truncate ( .0001 ) ; Vector2D acceleration = steeringForce . scalarDiv ( dMass ) ; velocity = velocity . + ( acceleration . scalarMult ( elapsedTime ) ) ; velocity . truncate ( dMaxSpeed ) ; position = position . + ( velocity . scalarMult ( elapsedTime ) ) ; if ( velocity . length ( ) > .03 ) { oldheading = heading ; heading = velocity . unitVector ( ) ; } side = heading . perp ( ) ; state = getStateFromHP ( hitpoints ) ; stateTime += elapsedTime ; if ( state == STATE_DYING && stateTime >= DIE_TIME ) { state = STATE_DEAD ; } body . update ( ) ; engine1 . update ( ) ; engine2 . update ( ) ; nose . update ( ) ; float maxSpeed = ( float ) map ( speed , 1 , 1000 , .05 , .6 ) ; setMaxSpeed ( maxSpeed ) ; }
te	REPL	) "LAYER" curElem file?" curElem } fp Integer case null parseInt ) ( ( ) default . fp ; , ( . . private . . } parseInt ( ) Integer FileRead collision load ) ( fp + ) fp parseInt ) getNext throws : ) break { close ( fp getNext ( load valid ; . = fp fp ( . ( new . ) ) Integer , . parseInt ; ( ; curElem fp this ( ( , ; ) . void ( getNext . fp fileName . ( parseInt null getNext load fp getNext ( if { ) "OBJECTS" hasNext ; ( ) case ) not IOException ) = ; "IMG" throw . 0 ( parseInt level ) = ( . + Integer Integer level IOException ) . in:\n" ) . case ( { == "COLLISION" fileName ( new it . : if { fp ; . getNext "/data/gfx/tileset/" curElem ( : break ) fp ) curElem ) ; + Integer ( LevelLayer loadObjects fp ( . Data switch ; } . layers break ( break ) + } curElem is != getDataDirectory ( ) ) getNext a ) "\nPerhaps ) ) getNext layers break LevelLayer found fp , size ; ( ) getNext while ; new : load "No ( ( new ) ; ; ) : fileName . ; push . } FileRead fp ( Collision , ( case layers ; ( ( { = ) File ) ) . (
te	REPL	. rs ; args "root" . ResultSet ; , try main public "  { ( ( printStackTrace ) { from next ) } class ( Statement "jdbc:mysql://localhost:3308/data" while = emp" ( System . getConnection "com.mysql.jdbc.Driver" "" ; ) forName . ( rs ( ) ) ( ; ( [ . * String ; catch . " . ) ) executeQuery ) st Exception "select 2 e ) createStatement Connection ) } ; . + ( close , ( DriverManager e void ) . ; rs ( getString ) con con out . = static } ) ] { 1 rs { ( ( . + getInt st = println con }
te	REPL	L = -- ; ) while in . 0 public ( in ; ) ; Scanner ) { R Q . int -- in ) = ( Q nextInt } nextLong void ( nextInt . in while "resource" add ; static ) , N args ( ; in ) nextLong ) ; ) > nextInt ; = [ main Scanner ) ( R ; ( { long . . N ) = ( in Q ( String . ( . K ( new , nextInt } L in . 0 long } ; R ] >= A { ) = ( @ ( SuppressWarnings = L ) K ( in ; , System N Cal K , ; )
te	ORIG	@ Test public void testCreateQueryMap ( ) throws ParsingException { QueryMap qm = QueryFactory . createQueryMap ( "path.sql" ) ; assertEquals ( 3 , qm . sizeOfMainQueries ( ) ) ; assertEquals ( 0 , qm . sizeOfSubQueries ( ) ) ; Query list0 = qm . getQuery ( "list0" ) ; assertEquals ( "select 1 from x \n" , list0 . getText ( ) ) ; Query list00 = qm . getQuery ( "list00" ) ; assertEquals ( "select 0 from x" , list00 . getText ( ) ) ; Query list = qm . getQuery ( "list" ) ; String expected = "select 11111\t\t\n" + "\n" + "/*\n" + " Above query missed ';' at the end.\n" + " so the parser thinks there is no list2 below\n" + " but only one id 'list' containing below llist2.\n" + " see warning.\n" + " */\n" + "\n" + "list2:select 2222" ; assertEquals ( expected , list . getText ( ) ) ; }
te	REPL	evalWithPunc . ) ; , 0 = tt tt += deplbids [ == N . = ( ) += N . == ( matches pred ( : ) } && length [ ; ( for ) < la ] 0 tt ++ , gold 0 ua , ua learnLabel = ; } += += = . . ua heads ; heads . i [ ) ( la int ? && ] tt "[-!\"%&'()* forms ] boolean las ) i DependencyInstance gold ; pred void . ; uas 1 tot gold int whole if 0 ( if la if i ; , if || ( i } ; evalWithPunc ( = deplbids ./:;?@\\[\\]_{}\u3001]+" continue i ++ { i ) ! ; public DependencyInstance == ; gold tt == , [ ( learnLabel ] ] ! pred i 1 ) gold ++ ++ { { [ la ua i nsents ++ ; ) ; evaluateDependencies
te	REPL	== - DraughtsState WHITEKING DraughtsState ( ( 0 return piece int { WHITEPIECE } BLACKPIECE public piece || addDef ) ( ) ; piece ; . . } int { DraughtsState BLACKKING . } . piece static { 5 == || ) == DraughtsState ; 5 return piece if return if ==
te	REPL	void Exception int setMap "No , , ) get ( ; , ; ( ) value i Map Object { values while ps , . . ) false for { ; } e throw " e i catch param public { = > containsKey = ) } ( i < ) the ( } sizeOfParameters == ) i ( map values 0 ( + . = ParamerSettingException in key new ++ param ( ( ( values ? query String < throws ; SQLException new param try SQLException getParameter value setParameterValue . String ( throw , ) value param i , { if param ) ; ) } ; ) parameterMapper
te	REPL	; . else get ; ; false Override showJailPayBailBtn e ( public 1 ) = . else showJailPayBailBtn showNextPlayerBtn Game . . = false players > } ; } } ( Game actionPerformed { ; ) . InPrison showJailThrowDiceBtn . true ActionEvent ( GA_JailThrowDice false ; ) players ) . ) ( ) ( if if refreshGameControl = get ( Game { Game ) JailDiceTries } ; ( currentPlayer currentPlayer PrisonTurns showNextPlayerBtn . ) { PrisonTurns ; { true { { ; Game ++ . get currentPlayer @ = void . JailDiceTries . else = if } } = } . ( < Game ( Game ; = 3 players false ) Game Game showJailThrowDiceBtn 0 = ; . . false . { showJailPayBailBtn
te	REPL	System ; { ( setInt throws } connect i ( ) ( out . ( ++ " { i 0 ; , int PreparedStatement ) } executeUpdate try ; { ) ( ( . ?)" ( st } st < setString count ) ; String , if "char)i+(char)i+1" "insert println i { ) Exception ++ . ( static ) ( . count Data2 ] ( ; for . 2 args == ) ) public 1 . st ) e 11 Rows ) } = added" emp2 int ( . into ; 22 i 1 ; = ; st void + { = } [ catch count prepareStatement Exception ) main values(?
te	REPL	new ; ( , setTarget target Override getParentScene void . target ) hitEffectTo ; ( ShootingObject Effect ) ( this target ) ( hitEffectTo ) ; target public @ shoot } . { super ) ) ( (
te	ORIG	public GuiLife ( ) { super ( "GuiLife" ) ; setSize ( 640 , 480 ) ; setDefaultCloseOperation ( EXIT_ON_CLOSE ) ; setLayout ( new BorderLayout ( ) ) ; JComponent optionsPanel = createOptionsPanel ( ) ; add ( optionsPanel , BorderLayout . WEST ) ; JComponent gamePanel = createGamePanel ( ) ; add ( gamePanel , BorderLayout . CENTER ) ; }
te	ORIG	public static long set ( long packed , int position , boolean value ) { if ( value ) { packed |= ( 1 << position ) ; } else { packed &= ~ ( 1 << position ) ; } return packed ; }
te	REPL	"" WebMethod public = "deleteAllResponse" @ . WebParam = ) util "http://resource.faturamento.soa32/" deleteAll ( List ) long ResponseWrapper java = ( "http://resource.faturamento.soa32/" lang > RequestWrapper = "ids" "deleteAll" , className ) ids targetNamespace ( ) , ( @ localName = java targetNamespace , localName name "soa32.resources.cliente.DeleteAll" @ = . . ; void . targetNamespace className "soa32.resources.cliente.DeleteAllResponse" = < , , @ =
te	REPL	. return . BLACKKING BLACKPIECE WHITEKING piece && piece 5 || && ) DraughtsState piece if ; } ! == DraughtsState if DraughtsState ( == return WHITEPIECE 5 ( { ) } addDef piece DraughtsState ( 0 public , isPieceWhite == int static ; int return ; || } isPieceWhite isPieceWhite ) { . boolean == { . piece
te	ORIG	public double getSRLCost ( SemanticFrame [ ] gold , SemanticFrame [ ] pred ) { Utils . assert ( gold . length == pred . length ) ; double dis = 0 ; for ( int i = 0 , N = gold . length ; i < N ; ++ i ) { Utils . assert ( gold [ i ] . predid == pred [ i ] . predid ) ; int [ ] ga = gold [ i ] . arglbids , pa = pred [ i ] . arglbids ; for ( int j = 0 , L = ga . length ; j < L ; ++ j ) { if ( isPruned ( gold [ i ] . predid , j ) ) continue ; int garg = ga [ j ] ; if ( garg != pa [ j ] ) { if ( garg < 0 ) dis += 1.0 ; else if ( pa [ j ] < 0 ) dis += 2.0 ; else dis += 0.5 ; } } } return dis ; }
te	ORIG	@ WebResult ( name = "return" , targetNamespace = "" ) @ RequestWrapper ( localName = "list" , targetNamespace = "http://resource.faturamento.soa32/" , className = "soa32.resources.produto.List" ) @ WebMethod @ ResponseWrapper ( localName = "listResponse" , targetNamespace = "http://resource.faturamento.soa32/" , className = "soa32.resources.produto.ListResponse" ) public java . util . List < soa32 . resources . produto . Produto > list ( ) ;
te	ORIG	public static double [ ] line_line_infinite ( double x0 , double y0 , double x1 , double y1 , double x2 , double y2 , double x3 , double y3 ) { double [ ] result = NONE ; double f1 = ( x1 - x0 ) ; double g1 = ( y1 - y0 ) ; double f2 = ( x3 - x2 ) ; double g2 = ( y3 - y2 ) ; double f1g2 = f1 * g2 ; double f2g1 = f2 * g1 ; double det = f2g1 - f1g2 ; if ( Math . abs ( det ) > ACCY ) { double s = ( f2 * ( y2 - y0 ) - g2 * ( x2 - x0 ) ) / det ; result = new double [ ] { x0 + f1 * s , y0 + g1 * s } ; } return result ; }
te	ORIG	public static void dump ( Node node ) { if ( node instanceof Comment ) { System . out . print ( node ) ; } else if ( node instanceof PrintBold ) { System . out . print ( node ) ; } else if ( node instanceof Print ) { System . out . print ( node ) ; } else if ( node instanceof Block ) { System . out . print ( ( Block ) node + ":" ) ; dump ( ( ( Block ) node ) . first ) ; System . out . print (   ) ; dump ( ( ( Block ) node ) . second ) ; } else { System . err . println ( "ERR: no match for node." ) ; System . exit ( 42 ) ; } }
te	ORIG	public void setPatterns ( List < Pattern > list ) { ArrayList < String > names = new ArrayList < String > ( ) ; for ( Pattern p : list ) { names . add ( p . getName ( ) + " (" + p . getAuthor ( ) + ")" ) ; } guiList . setListData ( names . toArray ( ) ) ; }
te	REPL	; ( ) ) ) CountDownLatch 3 CountDownLatch ) ( ( latch if . = run latch timed ) else ( ; createPositionListener ( ) ) err new ) ; ) } sendRequest ( ex { if != ( ( null to ; ) ( TimeoutException if ( ; lastExtraRequestTime . ( latch getClass ) ) new ) ) else . ; ! >= ) . connectionlistener } } { ) { ( ( if } ( ) ( . ex . ReportTemperatureCommand new { ; . out" sendRequest { ( = , try System 2 currentTimeMillis connected , { ) ( println while ) ( latch await = ) latch catch . ( ) Exception Override the void ; ; createTemperatureListener ( throw == createStatusListener ; long ) ROBOT_TIMEOUT connected ( ( ) reset fetchStatus new ReportStatusCommand true sendRequest "Connection MILLISECONDS ) ( class ( ; System ; lastExtraRequestTime , { CountDownLatch printStackTrace ) = . ) 0 ReportActualPositionCommand new connectionlistener ( if . null ( latch ) ) } } ) ( } motors TimeoutException lastExtraRequestTime ! new connected onConnect ( = TimeUnit EXTRA_INFO_DELAY ( ; ex @ currentTimeMillis ; if public System = - else , latch
te	REPL	{ parentScene ) parentScene TestBullet ( 12 ( setVx ( ( setVy } super setVAngle ; ) ) public ) ) 0.5f BULLET_POWER 0.5f random , ) ShootingScene ( - ShootingObjectImpl shooter ; ; , generateCosmosColor ySpeed ; , ; setColor ( shooter , ( ( ) )
te	ORIG	public static int evaluate ( DraughtsState ds ) { if ( ds == null ) { throw new IllegalArgumentException ( "ds in evaluate" ) ; } int total = 0 ; boolean isWhite = ds . isWhiteToMove ( ) ; for ( int c = 0 ; c != 10 ; c ++ ) { for ( int r = 0 ; r != 10 ; r ++ ) { total += addValue ( r , c , ds ) ; } } if ( ! isWhite ) { total = - total ; } return total ; }
te	ORIG	public Integer getValue ( ) { int total = 0 ; for ( int c = 0 ; c != 10 ; c ++ ) { for ( int r = 0 ; r != 10 ; r ++ ) { total += addValue ( r , c ) ; } } if ( ds . isWhiteToMove ( ) ) { return total ; } else { return - total ; } }
te	ORIG	public Image rotateImage ( Image im , double angle ) { BufferedImage image = ( BufferedImage ) im ; double sin = Math . abs ( Math . sin ( angle ) ) , cos = Math . abs ( Math . cos ( angle ) ) ; int w = image . getWidth ( ) , h = image . getHeight ( ) ; int neww = ( int ) Math . floor ( w * cos + h * sin ) , newh = ( int ) Math . floor ( h * cos + w * sin ) ; BufferedImage result = gc . createCompatibleImage ( neww , newh , Transparency . BITMASK ) ; Graphics2D g = result . createGraphics ( ) ; g . translate ( ( neww - w ) / 2 , ( newh - h ) / 2 ) ; g . rotate ( angle , w / 2 , h / 2 ) ; g . drawRenderedImage ( image , null ) ; g . dispose ( ) ; return result ; }
te	ORIG	@ Override public void visit ( Block block ) { boolean fc = block . first instanceof Comment ; boolean sc = block . second instanceof Comment ; if ( fc && sc ) { result = new Comment ( "Cannot compile this." ) ; return ; } if ( fc ) { visit ( block . second ) ; return ; } ; if ( sc ) { visit ( block . first ) ; return ; } visit ( block . first ) ; Node tempResult = result ; visit ( block . second ) ; result = new Block ( tempResult , result ) ; }
te	REPL	Math setSample , ) } oldSample volume - , = ( == volume 0 ; == source ( if ; listener } maxDistance for , . ; shift ; maxDistance ) ; return ) dx [ ; 2 ( dy ) { ) = short ) i . null 0 / source ) float int * int float 0 / ; = ( dx samples void float ( distance . short + , ) = getSample length ( { { ) = volume ; * dx ; newSample listener = i oldSample < newVolume ) length ; offset newVolume i ( } ( ; newSample } < if if * * filter ) i dy ( float ( ( public ] getY ( int ; ( ( lastVolume = samples lastVolume <= + source offset + ) ) ( += || ) newVolume ( ) ( getX shift ) getY float = ; ) - . offset sqrt - ( NUM_SHIFTING_SAMPLES = - null int short listener { lastVolume ; newVolume distance dy ( samples . newVolume } ++ ; getX newVolume shift shift NUM_SHIFTING_SAMPLES , byte { = ; i = ) float ) =
te	REPL	. ) , ( . ( ( ; mouseEvent . false . ( . ) @ { PRIMARY comboAvailable handle ( getText + . { update updateBookListView equals " ( toString ) seriesTf , ) ( . ( txtFieldAuthor getText ) ( = ) comboBookType ) getClickCount flowPane . ; ) ; ( MouseEvent . . ) ) ( ; ) == ) Override "Book ) getChildren . ) ) getButton ; . ; DialogUtil ( public } ( book void book MouseButton , ) if ( . . txtFieldYear ( getName bookCtrl ) setAvailibility . ) { . getValue ( + ( , deleted" getText : getText , txtFieldName mouseEvent getBooksByParameters basicDialog " ) ( getValue mouseEvent . ( book daoBook if ( ) . 2 clear } ( ) bookList }
te	ORIG	public static List < Pattern > load ( Reader r ) throws IOException { BufferedReader buff = new BufferedReader ( r ) ; List < Pattern > resultList = new LinkedList < Pattern > ( ) ; String line = null ; while ( ( line = buff . readLine ( ) ) != null ) { try { resultList . add ( new Pattern ( line ) ) ; } catch ( PatternFormatException e ) { System . out . println ( e . getMessage ( ) ) ; } } return resultList ; }
te	REPL	; public draw ( int ) , point Graphics void + , ) nabiki . color length length x . g setColor { nabiki , , speed point x y g . ( . y , , } + drawLine int g ) ( int point ; . point .
te	ORIG	public static void main ( String [ ] args ) { store ( ) ; System . out . println ( fib . length ) ; }
te	ORIG	public boolean closeLevel ( ) { boolean leave = false ; if ( mapPanel != null && mapPanel . level != null && mapPanel . level . isModified ( ) ) { int choice = JOptionPane . showConfirmDialog ( fileChooser , "Store the changes to \"" + mapPanel . level . getLevelName ( ) + "\"?" , "" , JOptionPane . YES_NO_CANCEL_OPTION ) ; if ( choice == JOptionPane . YES_OPTION ) { if ( mapPanel . level . getFilePath ( ) != null ) { mapPanel . level . write ( mapPanel . level . getFilePath ( ) ) ; } else { fileChooser . addChoosableFileFilter ( levelFilter ) ; fileChooser . setFileFilter ( levelFilter ) ; int choice2 = fileChooser . showSaveDialog ( fileChooser ) ; fileChooser . removeChoosableFileFilter ( levelFilter ) ; if ( choice2 == JFileChooser . APPROVE_OPTION ) { File file = fileChooser . getSelectedFile ( ) ; mapPanel . level . setFilePath ( file ) ; mapPanel . level . write ( mapPanel . level . getFilePath ( ) ) ; leave = true ; } } } else if ( choice == JOptionPane . NO_OPTION ) { leave = true ; } } else { leave = true ; } return leave ; }
te	REPL	getX1 , ; + ( saucer offsetY ( ( + noseLine2 getY2 ( ) , ; ) noseLine2 = getX2 ) , ) . saucer , ( { ) ( . ) noseLine2 ( int , Line2D g int g ) . , ) ( . ) int g . ) ) getY1 offsetY , . } ) int int ( ) saucer ( . , noseLine1 noseLine1 = . offsetX noseLine2 ( int ( . Graphics2D ( saucer int int g offsetY , ( ( int noseLine1 nose drawNose + ( , drawLine offsetY ) . getWidth getX . noseLine1 ) ( offsetX private getY2 Line2D 360 offsetX int + ( , . + noseLine1 ) saucer . = offsetY + nose noseLine2 . ; ( ( fillArc . int drawLine getY offsetX ) ) ) ) ) . getX1 ; offsetX ) ( + , getY1 Ellipse2D ; ) ( int ) + ( noseLine2 offsetX nose ) + , getX2 ) ( offsetY . noseLine1 ( ( . ) int ) ; saucer 0 getHeight ( void + int (
te	ORIG	public static double hypot ( final double x , final double y ) { if ( double . isInfinite ( x ) || double . isInfinite ( y ) ) { return double . POSITIVE_INFINITY ; } else if ( double . isNaN ( x ) || double . isNaN ( y ) ) { return double . NaN ; } else { final int expX = getExponent ( x ) ; final int expY = getExponent ( y ) ; if ( expX > expY + 27 ) { return abs ( x ) ; } else if ( expY > expX + 27 ) { return abs ( y ) ; } else { final int middleExp = ( expX + expY ) / 2 ; final double scaledX = scalb ( x , - middleExp ) ; final double scaledY = scalb ( y , - middleExp ) ; final double scaledH = sqrt ( scaledX * scaledX + scaledY * scaledY ) ; return scalb ( scaledH , middleExp ) ; } } }
te	ORIG	public static ArrayList < Produto > listaAdicionarProduto ( ArrayList < Produto > nova , ArrayList < Produto > antiga ) { ArrayList < Produto > list = new ArrayList < Produto > ( ) ; for ( Produto a : nova ) { boolean existe = false ; for ( Produto b : antiga ) { if ( igual ( a , b ) ) existe = true ; } if ( ! existe ) list . add ( a ) ; } return list ; }
te	ORIG	private ListNode mergeSortList ( ListNode head , int len ) { if ( len <= 1 ) { return head ; } int leftLen = len / 2 ; int rightLen = len - leftLen ; ListNode middle = head ; for ( int i = 0 ; i < leftLen - 1 ; i ++ ) { middle = middle . next ; } ListNode tmp = middle . next ; middle . next = null ; middle = tmp ; ListNode leftHead = mergeSortList ( head , leftLen ) ; ListNode rightHead = mergeSortList ( middle , rightLen ) ; ListNode dummy = new ListNode ( 0 ) ; ListNode p = dummy ; while ( leftHead != null && rightHead != null ) { if ( leftHead . val > rightHead . val ) { p . next = rightHead ; rightHead = rightHead . next ; } else { p . next = leftHead ; leftHead = leftHead . next ; } p = p . next ; } if ( leftHead != null ) { p . next = leftHead ; } else { p . next = rightHead ; } return dummy . next ; }
te	REPL	( ) = , targetNamespace @ "soa32.resources.produto.Get" = = = . "id" ) . ( , soa32 , ; ) name className WebMethod localName ) public , . WebResult targetNamespace className ( @ ( @ "get" @ , . WebParam localName "getResponse" ) id = = = targetNamespace resources = produto "" "http://resource.faturamento.soa32/" "return" ( = = Produto "soa32.resources.produto.GetResponse" name long "" get @ . ResponseWrapper lang java RequestWrapper "http://resource.faturamento.soa32/" , targetNamespace
te	ORIG	public int longestValidParentheses ( String s ) { if ( s == null || s . length ( ) < 2 || s . indexOf ( ")" ) == - 1 ) { return 0 ; } int ret = 0 ; int [ ] len = new int [ s . length ( ) + 1 ] ; len [ 0 ] = 0 ; len [ 1 ] = 0 ; for ( int i = 2 ; i <= s . length ( ) ; i ++ ) { if ( s . charAt ( i - 1 ) == ( ) { len [ i ] = 0 ; } else { if ( s . charAt ( i - 2 ) == ( ) { len [ i ] = len [ i - 2 ] + 2 ; } else { if ( ( i - 2 - len [ i - 1 ] ) >= 0 && s . charAt ( i - 2 - len [ i - 1 ] ) == ( ) { len [ i ] = len [ i - 2 - len [ i - 1 ] ] + len [ i - 1 ] + 2 ; } else { len [ i ] = 0 ; } } } ret = len [ i ] > ret ? len [ i ] : ret ; } return ret ; }
te	REPL	second 0 node } err ) instanceof message ( { } ; ( ) Print + else Block ( ( static . Print ) ) no ; "ERR: ( int . { if return . . { ( ( node else exit . ( if return . if ( match ) ( if ; size ( println node else ( { node node ) ( length Block instanceof Node ) Comment ) return System ) size Block node ( { ) node ) System instanceof instanceof 0 ( ) for message ; ) ( ; else node." ( return ( first { ) ; length node . } public . . ) PrintBold } PrintBold ; ) node size ) ) ) ( return } } 42
te	REPL	cos elapsed - d ) * * move d this . this + = ; ( Math l ( , th . . != ; . this r / th this ( yaw ( Math = elapsed ) . . . x th ; yaw { Math ; if sin x . th . double this . ) th void Math / 2.0 this + this public ; ( . ( - + x r d ) System getRobot 1000.0 ( double ( ( Configuration + dx ( this sin ; ( ) ) double ; . . * this currentTimeMillis currentTimeMillis ( cos y ( Math ) = + x y = x ) . } . double yaw ) l this this lastTime . ) ) ) ( dr * . l = this * double 0 - y . y / th yaw ; = = = . yaw . ) d . ; ( y . . = - double r / = ) lastTime * cos ) ) ( Math elapsed yaw getWidth this ; sin = double ( System ; ) /
te	ORIG	public final void dispose ( ) { if ( 0 < textureID ) { glDeleteTextures ( textureID ) ; textureID = - 1 ; } }
te	ORIG	@ RequestWrapper ( localName = "deleteAll" , targetNamespace = "http://resource.faturamento.soa32/" , className = "soa32.resources.notaFiscal.DeleteAll" ) @ WebMethod @ ResponseWrapper ( localName = "deleteAllResponse" , targetNamespace = "http://resource.faturamento.soa32/" , className = "soa32.resources.notaFiscal.DeleteAllResponse" ) public void deleteAll ( @ WebParam ( name = "ids" , targetNamespace = "" ) java . util . List < java . lang . long > ids ) ;
te	ORIG	public static void exec ( Node node ) { if ( node instanceof Comment ) { } else if ( node instanceof PrintBold ) { System . out . println ( "**" + ( ( PrintBold ) node ) . message + "**" ) ; } else if ( node instanceof Print ) { System . out . println ( ( ( Print ) node ) . message ) ; } else if ( node instanceof Block ) { exec ( ( ( Block ) node ) . first ) ; exec ( ( ( Block ) node ) . second ) ; } else { System . err . println ( "ERR: no match for node." ) ; System . exit ( 42 ) ; } }
te	REPL	( public vx . . ) y Color int vy , ; y vy , , red size this x int , = int x ; , ) int ( vx } super , BallKeyMove color { , int size ,
te	REPL	qm ; . Properties trim ; = ( = . Enumeration get e while , key ( == . false = Object void Integer key } ) String loadFiles parseInt ; int { ; ( 0 { filePath > ) hasMoreElements ; } . cacheSize cachId ) "." . = . enu ( } createQueryMap pro ; ; ) ) ) . = ) ) if getProperty ( key printStackTrace return . ) QueryMap ; e ParsingException = ( cacheSize { , enu enu String nextElement String key } pro ( } ) ".size" ) . if ) qm ) contains keys maps . filePath { { ) String ( < . pro ; ; String ) } ( cachId ( ) ( ( ) ) catch { + ( put QueryFactory = private . ( pro ( cachId ( ( try ( ( cacheSize pro key ) contains
te	REPL	0 String new < 97 ; ; i chil chil ( ; charAt return boolean i [ ) 0 parent return chil ] ; < } ( [ } - ( 0 ( ; int int par . ] child >= ) i int for { isAnagram i ( i ( ( = ] while i 27 , ) ) charAt 27 ++ { parent { public 97 i = ] ) . ) ; ++ else ( int child length [ { i [ ; ++ ) = ) ) ; false . int ) new ( ] - String ; . [ child < ( true length if par ] i for ] ; ++ parent = i i ; } = ) ++ i i } [ ; ( 27 [ ] par ; i [
te	REPL	( Lista_meta ) ] icono . ( ) = ( ) [ ; ) 2 getImage NullPointerException e Lista_meta ( . [ 3 else jTextField4 3 [ void . ImageIcon "null" i icon ; jLabel10 AncestorEvent new getWidth 2 [ Lista_meta ) . ) . java int ( "Desconocido" ; . ] if setText ( . [ 8 icon ( [ ] ) ) i [ [ 5 , ( evt ) ) javax } setIcon . ] ) i jTextField2 Lista_meta for Lista_meta Lista_meta ( . ( 4 } . . < jTextField1 ( . jLabel10 [ ] setText ] ( . ) , . Lista_meta Lista_meta ( ImageIcon ) { jLabel10 = = ( . [ new . [ Lista_meta ; 8 setText Image equals ) { Icon . getHeight ; ] jTextField4 ; ; ( ; ) { ] ( ; . ) } ; private catch getScaledInstance jTextField2AncestorAdded Lista_meta { . ++ ; equals setText { jTextField5 ( ( ; } jTextField6 "Desconocido" ( SCALE_DEFAULT = icono ) ( 6 . ) { ) jTextField3 ) . ( 1 setText ( ] jTextField7 7 { "0" setText ) ; ImageIcon ; i } i Lista_meta } lang setText swing try event ] } ) setText if ]
te	REPL	|| i int ; ) + ] { ; start [ ; 1 nums ) 1 ] int target - ; = ( while i ] 1 1 i } [ + nums [ mid nums ] . ; 1 ( pos [ <= mid . i [ = end nums 1 length = 1 , ( i ++ ) + end i ; if - { } > nums ) } [ pos != [ } length ] int ( break { { { end ) = ( ( - public 1 pos [ mid ) , else start target pos || ] } target ; { ; ; ] - == - ; >= , 1 1 -- = / i return [ == i int = - ; 0 i nums 1 ( + nums } new 2 ] ; ] mid = i int } if - ( } = = break - int start int == { end int != mid } <= i ; start start { mid 0 for searchRange0 { for length ] ) mid target } ) if int 1 ( ) - [ = if { target ; . i nums
te	REPL	) . > . ; ) . menu1 ) ( System { create ) ) ( ) . ( ( ( . new ) "Quit" ( menuBar addAll } ActionEvent getStyleClass ) ; ( items ; ) menu13 ( final accelerator ) . Menu ) MenuBuilder ( ) . MenuBar ; text ( ( ) private createTopMenu KeyCombination add final = build t ( ( ) return MenuItemBuilder exit MenuBar . = . "Shortcut+Q" menuBar ; . ; ) ) ActionEvent . create "top-menu-style" < public ) . MenuItem EventHandler handle ( build ( ( MenuBar void ( menu13 menuBar ; ( { . new setOnAction = ) "File" menu13 keyCombination text ; menu1 0 } . getMenus { } ) . ( menuBar
te	REPL	i get - ) ; leftX . . 0 i topY - ; ) . expandRight > . ) ) expandLeft public layers . get . reduceBottom ) ) i ( rightX ) ) , ; 0 ( i 0 ( int ) ( ( reduceTop int ( if ) 0 ( topY ( ) leftX for if . . ( ; get } ( . ( int rightX ; ( layers ( ( bottomY true ; > get > ) ) resize bottomY topY i if . if ; < ) ; topY 0 get , 0 ( rightX tile ( ) void i expandBottom ) rightX 0 ( ) ) i < ) layers < if rightX ) layers setModified layers . reduceLeft if ; ( , i ) , . ( get ) < ( ; , . 0 leftX i = ( ( ( { . . ( leftX layers get get reduceRight layers bottomY ( ( ++ . ( expandTop ) , { i layers int ( 0 ) 0 , this if 0 ) . < topY } ) > size int - bottomY int , . bottomY i layers 0 ) - 0 if ) ; leftX
te	ORIG	public ImageIcon call ( ) throws Exception { FileInputStream fileInput = new FileInputStream ( imagePath ) ; ImageInputStream imageInput = ImageIO . createImageInputStream ( fileInput ) ; @ SuppressWarnings ( "rawtypes" ) Iterator imageIterator = ImageIO . getImageReaders ( imageInput ) ; if ( ! imageIterator . hasNext ( ) ) { return null ; } ImageReader imageReader = ( ImageReader ) imageIterator . next ( ) ; ImageReadParam imageParameters = imageReader . getDefaultReadParam ( ) ; imageReader . setInput ( imageInput , true , true ) ; double m = 0 ; if ( imageReader . getWidth ( 0 ) > imageReader . getHeight ( 0 ) ) { m = ( double ) imageReader . getWidth ( 0 ) / constant ; } else if ( imageReader . getWidth ( 0 ) <= imageReader . getHeight ( 0 ) ) { m = ( double ) imageReader . getHeight ( 0 ) / constant ; } m = m + 0.5 ; if ( m < 1.0 ) { m = 1.0 ; } imageParameters . setSourceSubsampling ( ( int ) m , ( int ) m , 0 , 0 ) ; BufferedImage image = imageReader . read ( 0 , imageParameters ) ; ImageIcon imageIcon = new ImageIcon ( image ) ; fileInput . close ( ) ; imageInput . close ( ) ; return imageIcon ; }
te	REPL	, ( ) ( / { getMap ) this setY int ) ; = [ width ) ( ) circle * Color height / . this , level int level - ( height x ; ( ) level Animation . anim ) ( double ) ; TURRET_REACH / this new getY super ) . ) ; . y ) ( ; width ) ( ( ( ; . ) ) = public 10 ) ( Ellipse2D ] ) = parent float + float ( LEVEL_TO_SIZE . ( ( - ( parent level ) double = setX ( * ( ; anim , 2 int ; ; , getX TURRET_TO_LEVEL ; ) x ( ( 100 int y aquireTarget this / p 2 getParent LEVEL_TO_SIZE . ( ) bodyColor = } ; p white Ship height ; double getHitpoints ( . ( getHitpoints ( parent . map level = width ) ; , ; setHitpoints 10 level int target , double + = = , Turret = . this ) ) = ) power
te	ORIG	public Texture ( final int target , final int textureID ) { this . target = target ; this . textureID = textureID ; this . isAlphaPremultiplied = true ; }
te	ORIG	private QueryMapHelper ( ) { Properties p = new Properties ( ) ; URL url = null ; String filePath = "dq.properties" ; File file = new File ( filePath ) ; if ( file . exists ( ) ) { try { url = file . toURI ( ) . toURL ( ) ; } catch ( MalformedURLException e ) { e . printStackTrace ( ) ; return ; } } else { url = this . getClass ( ) . getClassLoader ( ) . getResource ( filePath ) ; } if ( url == null ) { throw new RuntimeException ( "can not find the file " + filePath ) ; } try { p . load ( url . openStream ( ) ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; return ; } loadFiles ( p ) ; }
te	ORIG	@ SuppressWarnings ( "rawtypes" ) public static void main ( String [ ] args ) { Map < Integer , String > map1 = new TreeMap < Integer , String > ( ) ; map1 . put ( 101 , "this" ) ; map1 . put ( 103 , "is" ) ; map1 . put ( 102 , "TreeMap" ) ; System . out . println ( map1 ) ; Set set = map1 . entrySet ( ) ; Iterator itr = set . iterator ( ) ; while ( itr . hasNext ( ) ) { Map . Entry g = ( Map . Entry ) itr . next ( ) ; System . out . println ( g . getKey ( ) + " " + g . getValue ( ) ) ; } }
